

----QUIT----(12 May 2023 17:49:00) CuisUniversity-5799.image priorSource: 4801971!

----STARTUP---- (12 May 2023 17:49:01) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5799.image!


----QUIT----(12 May 2023 17:49:01) CuisUniversity-5799.image priorSource: 9222569!

----STARTUP---- (13 May 2023 16:12:40) as /home/valewodka/Downloads/linux64/CuisUniversity-5799.image!


Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRover category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 16:20:13'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverTest category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 16:20:22'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!
!MarsRoverTest methodsFor: 'no messages' stamp: 'VW 5/13/2023 16:23:19'!
test_01AssertInitialPosition0x0FacingNorth! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:25:52' prior: 50619891!
test_01AssertInitialPosition0x0FacingNorth
	self assert: 0@0 equals: (MarsRover position: 0@0 facing: #North) position.
	self assert: #North equals: (MarsRover position: 0@0 facing: #North) orientation.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:25:59'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'VW 5/13/2023 16:26:09'!
position: aPoint facing: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializePosition: aPoint facing: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'VW 5/13/2023 16:26:33' prior: 50619909!
position: aPosition facing: anOrientation

	^self new initializePosition: aPosition facing: anOrientation ! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:26:36'!
ERROR!

!classDefinition: #MarsRover category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 16:26:58'!
Object subclass: #MarsRover
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRover category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 16:26:58'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!
!MarsRover methodsFor: 'initialization' stamp: 'VW 5/13/2023 16:26:58'!
initializePosition: aPosition facing: anOrientation 
	self shouldBeImplemented.
	position := aPosition.
	orientation := anOrientation.! !
!MarsRover methodsFor: 'initialization' stamp: 'VW 5/13/2023 16:27:04' prior: 50619942!
initializePosition: aPosition facing: anOrientation 
	position := aPosition.
	orientation := anOrientation.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:27:31'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'VW 5/13/2023 16:27:58' prior: 50619950!
initializePosition: aPosition facing: anOrientation 
	position := 0@0.
	orientation := #North.! !
!MarsRover methodsFor: 'initialization' stamp: 'VW 5/13/2023 16:28:14'!
position
	^position! !
!MarsRover methodsFor: 'initialization' stamp: 'VW 5/13/2023 16:28:22'!
orientation
	^orientation! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:28:29'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:28:55'!
assertPositionIsAndFaces

	self assert: 0@0 equals: (MarsRover position: 0@0 facing: #North) position.
	self assert: #North equals: (MarsRover position: 0@0 facing: #North) orientation! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:28:55' prior: 50619896!
test_01AssertInitialPosition0x0FacingNorth
	self assertPositionIsAndFaces.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:29:20'!
assertPositionIsAndFaces: aPosition

	self assert: 0@0 equals: (MarsRover position: 0@0 facing: #North) position.
	self assert: #North equals: (MarsRover position: 0@0 facing: #North) orientation! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:29:20' prior: 50619985!
test_01AssertInitialPosition0x0FacingNorth
	self assertPositionIsAndFaces: 0@0.! !

!methodRemoval: MarsRoverTest #assertPositionIsAndFaces stamp: 'VW 5/13/2023 16:29:20'!
assertPositionIsAndFaces

	self assert: 0@0 equals: (MarsRover position: 0@0 facing: #North) position.
	self assert: #North equals: (MarsRover position: 0@0 facing: #North) orientation!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:30:01'!
assertPositionIsAndFaces: aPosition andFaces: anOrientation 

	self assert: 0@0 equals: (MarsRover position: 0@0 facing: #North) position.
	self assert: #North equals: (MarsRover position: 0@0 facing: #North) orientation! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:30:01' prior: 50620000!
test_01AssertInitialPosition0x0FacingNorth
	self assertPositionIsAndFaces: 0@0 andFaces: #North.! !

!methodRemoval: MarsRoverTest #assertPositionIsAndFaces: stamp: 'VW 5/13/2023 16:30:01'!
assertPositionIsAndFaces: aPosition

	self assert: 0@0 equals: (MarsRover position: 0@0 facing: #North) position.
	self assert: #North equals: (MarsRover position: 0@0 facing: #North) orientation!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:30:13'!
assertPositionIs: aPosition andFaces: anOrientation 

	self assert: 0@0 equals: (MarsRover position: 0@0 facing: #North) position.
	self assert: #North equals: (MarsRover position: 0@0 facing: #North) orientation! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:30:13' prior: 50620025!
test_01AssertInitialPosition0x0FacingNorth
	self assertPositionIs: 0@0 andFaces: #North.! !

!methodRemoval: MarsRoverTest #assertPositionIsAndFaces:andFaces: stamp: 'VW 5/13/2023 16:30:13'!
assertPositionIsAndFaces: aPosition andFaces: anOrientation 

	self assert: 0@0 equals: (MarsRover position: 0@0 facing: #North) position.
	self assert: #North equals: (MarsRover position: 0@0 facing: #North) orientation!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:30:51' prior: 50620040!
assertPositionIs: aPosition andFaces: anOrientation 

	self assert: aPosition equals: (MarsRover position: aPosition facing: anOrientation) position.
	self assert: anOrientation equals: (MarsRover position: aPosition facing: anOrientation) orientation! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:30:53'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:31:13'!
test_02AssertInitialPosition0x1FacingSouth
	self assertPositionIs: 0@1 andFaces: #South.! !

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:31:14'!
FAILURE!
!MarsRover methodsFor: 'initialization' stamp: 'VW 5/13/2023 16:31:33' prior: 50619960!
initializePosition: aPosition facing: anOrientation 
	position := aPosition.
	orientation := anOrientation.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:31:34'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:31:34'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:32:50'!
test_03AssertMarsRoverReadsCommands
	self assertPositionIs: 0@1 andFaces: #South.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:33:14' prior: 50620103!
test_03AssertMarsRoverReadsCommands
	"self assert: "! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:36:12'!
test_03AssertMarsRoverReadEmptyCommand
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: ''.
	"self assert: marsRover posi equals:"! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:37:11'!
MarsRover: aMarsRover assertPositionIs: aPosition andFaces: anOrientation 

	self assert: aPosition equals: (MarsRover position: aPosition facing: anOrientation) position.
	self assert: anOrientation equals: (MarsRover position: aPosition facing: anOrientation) orientation! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:37:11' prior: 50620080!
test_02AssertInitialPosition0x1FacingSouth
	self MarsRover: MarsRover new assertPositionIs: 0@1 andFaces: #South.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:37:11' prior: 50620050!
test_01AssertInitialPosition0x0FacingNorth
	self MarsRover: MarsRover new assertPositionIs: 0@0 andFaces: #North.! !

!methodRemoval: MarsRoverTest #assertPositionIs:andFaces: stamp: 'VW 5/13/2023 16:37:11'!
assertPositionIs: aPosition andFaces: anOrientation 

	self assert: aPosition equals: (MarsRover position: aPosition facing: anOrientation) position.
	self assert: anOrientation equals: (MarsRover position: aPosition facing: anOrientation) orientation!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:37:28'!
AssertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation 

	self assert: aPosition equals: (MarsRover position: aPosition facing: anOrientation) position.
	self assert: anOrientation equals: (MarsRover position: aPosition facing: anOrientation) orientation! !

!methodRemoval: MarsRoverTest #AssertMarsRover:positionIs:andFaces: stamp: 'VW 5/13/2023 16:37:35'!
AssertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation 

	self assert: aPosition equals: (MarsRover position: aPosition facing: anOrientation) position.
	self assert: anOrientation equals: (MarsRover position: aPosition facing: anOrientation) orientation!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:37:55'!
assertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation 

	self assert: aPosition equals: (MarsRover position: aPosition facing: anOrientation) position.
	self assert: anOrientation equals: (MarsRover position: aPosition facing: anOrientation) orientation! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:37:55' prior: 50620142!
test_01AssertInitialPosition0x0FacingNorth
	self assertMarsRover: MarsRover new positionIs: 0@0 andFaces: #North.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:37:55' prior: 50620135!
test_02AssertInitialPosition0x1FacingSouth
	self assertMarsRover: MarsRover new positionIs: 0@1 andFaces: #South.! !

!methodRemoval: MarsRoverTest #MarsRover:assertPositionIs:andFaces: stamp: 'VW 5/13/2023 16:37:55'!
MarsRover: aMarsRover assertPositionIs: aPosition andFaces: anOrientation 

	self assert: aPosition equals: (MarsRover position: aPosition facing: anOrientation) position.
	self assert: anOrientation equals: (MarsRover position: aPosition facing: anOrientation) orientation!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:38:06' prior: 50620182!
assertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation 

	self assert: aPosition equals: aMarsRover position.
	self assert: anOrientation equals: aMarsRover orientation! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:38:59' prior: 50620194!
test_01AssertInitialPosition0x0FacingNorth
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: #North.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:39:15' prior: 50620201!
test_02AssertInitialPosition0x1FacingSouth
	|marsRover|
	marsRover := MarsRover position: 0@1 facing: #South.
	self assertMarsRover: MarsRover new positionIs: 0@1 andFaces: #South.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:39:25' prior: 50620238!
test_02AssertInitialPosition0x1FacingSouth
	|marsRover|
	marsRover := MarsRover position: 0@1 facing: #South.
	self assertMarsRover: marsRover positionIs: 0@1 andFaces: #South.! !

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:39:27'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:39:27'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:39:27'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:39:27'!
ERROR!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadsCommands stamp: 'VW 5/13/2023 16:39:27'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:39:27'!
ERROR!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:39:33'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:39:34'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:39:38'!
ERROR!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:39:38'!
ERROR!

!methodRemoval: MarsRoverTest #test_03AssertMarsRoverReadsCommands stamp: 'VW 5/13/2023 16:39:46'!
test_03AssertMarsRoverReadsCommands
	"self assert: "!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:39:51'!
ERROR!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 16:40:01'!
readCommands: aRenameMe1 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 16:41:04' prior: 50620297!
readCommands: manyCommands ! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:41:05'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:41:05'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:41:05'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:41:25'!
test_04AssertMarsRoverReadFowardCommand
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'f'.
	"self assert: marsRover posi equals:"! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:42:02' prior: 50620114!
test_03AssertMarsRoverReadEmptyCommand
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: ''.
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: #North! !

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:42:03'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:42:03'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:42:03'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:42:03'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:42:03'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:42:30' prior: 50620316!
test_04AssertMarsRoverReadFowardCommand
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'f'.
	self assertMarsRover: marsRover positionIs: 1@0 andFaces: #North! !

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:42:34'!
FAILURE!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 16:44:03' prior: 50620302!
readCommands: manyCommands 
	(manyCommands size > 0) ifTrue:[^position:= position + 1@0]! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:44:04'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:44:04'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:44:04'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:44:04'!
ERROR!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:44:04'!
ERROR!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:44:10'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:44:10'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:44:10'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:44:10'!
ERROR!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:44:10'!
ERROR!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 16:44:24' prior: 50620365!
readCommands: manyCommands 
	(manyCommands size > 0) ifTrue:[^position:= position + (1@0)]! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:44:25'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:44:25'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:44:25'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:44:25'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:44:42'!
test_04AssertMarsRoverReadBackwardCommand
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'b'.
	self assertMarsRover: marsRover positionIs: -1@0 andFaces: #North! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:45:01'!
test_05AssertMarsRoverReadBackwardCommand
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'b'.
	self assertMarsRover: marsRover positionIs: -1@0 andFaces: #North! !

!methodRemoval: MarsRoverTest #test_04AssertMarsRoverReadBackwardCommand stamp: 'VW 5/13/2023 16:45:01'!
test_04AssertMarsRoverReadBackwardCommand
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'b'.
	self assertMarsRover: marsRover positionIs: -1@0 andFaces: #North!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 16:46:44' prior: 50620404!
readCommands: manyCommands 
	(manyCommands size > 0) ifTrue:[
		manyCommands first = 'f' ifTrue:[^position:= position +(1@0)].
		position:= position +(-1@0)
			]! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:46:46'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:46:46'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:46:46'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:46:46'!
FAILURE!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommand stamp: 'VW 5/13/2023 16:46:46'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:46:46'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:47:26' prior: 50620433!
test_05AssertMarsRoverReadBackwardCommand
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'b'.
	self assertMarsRover: marsRover positionIs: (-1@0) andFaces: #North! !

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommand stamp: 'VW 5/13/2023 16:47:27'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:47:27'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:47:27'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:47:27'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:47:27'!
FAILURE!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommand stamp: 'VW 5/13/2023 16:47:27'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:47:27'!
FAILURE!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommand stamp: 'VW 5/13/2023 16:49:22'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:49:26'!
FAILURE!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:49:26'!
FAILURE!

string:= 'f'.
string = 'f' ifTrue: [^'La tuya con ciruela']!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 16:51:26' prior: 50620452!
readCommands: manyCommands 
	(manyCommands size > 0) ifTrue:[
		(manyCommands first) = 'f' ifTrue:[^position:= position +(1@0)].
		position:= position +(-1@0)
			]! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:51:27'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:51:27'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:51:27'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:51:27'!
FAILURE!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommand stamp: 'VW 5/13/2023 16:51:27'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:51:27'!
FAILURE!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 16:51:39' prior: 50620526!
readCommands: manyCommands 
	(manyCommands size > 0) ifTrue:[
		(manyCommands first = 'f') ifTrue:[^position:= position +(1@0)].
		position:= position +(-1@0)
			]! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:51:39'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:51:39'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:51:39'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:51:39'!
FAILURE!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommand stamp: 'VW 5/13/2023 16:51:39'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:51:39'!
FAILURE!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 16:51:50' prior: 50620554!
readCommands: manyCommands 
	(manyCommands size > 0) ifTrue:[
		manyCommands first = 'f' ifTrue:[^position:= position +(1@0)].
		position:= position +(-1@0)
			]! !

string:= 'f'.
string = 'f' ifTrue: [^'La tuya con ciruela']
string first!

string:= 'f'.
string = 'f' ifTrue: [^'La tuya con ciruela'].
string first!

string:= 'f'.
^(string first)!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 16:53:06' prior: 50620582!
readCommands: manyCommands 
	(manyCommands size > 0) ifTrue:[
		manyCommands first = $f ifTrue:[^position:= position +(1@0)].
		position:= position +(-1@0)
			]! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:53:08'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:53:08'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:53:08'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:53:08'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommand stamp: 'VW 5/13/2023 16:53:08'!
PASSED!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 16:53:56' prior: 50620596!
readCommands: manyCommands 
		
	(manyCommands size > 0) ifTrue:[
		manyCommands first = $f ifTrue:[^position:= position +(1@0)].
		position:= position +(-1@0)
			]! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:54:32'!
test_04AssertMarsRoverReadFowardCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'f'.
	self assertMarsRover: marsRover positionIs: 1@0 andFaces: #North! !

!methodRemoval: MarsRoverTest #test_04AssertMarsRoverReadFowardCommand stamp: 'VW 5/13/2023 16:54:32'!
test_04AssertMarsRoverReadFowardCommand
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'f'.
	self assertMarsRover: marsRover positionIs: 1@0 andFaces: #North!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:54:41'!
test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'b'.
	self assertMarsRover: marsRover positionIs: (-1@0) andFaces: #North! !

!methodRemoval: MarsRoverTest #test_05AssertMarsRoverReadBackwardCommand stamp: 'VW 5/13/2023 16:54:41'!
test_05AssertMarsRoverReadBackwardCommand
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'b'.
	self assertMarsRover: marsRover positionIs: (-1@0) andFaces: #North!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:55:58'!
test_05AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'l'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: #West! !

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:56:00'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:56:21'!
test_06AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'l'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: #West! !

!methodRemoval: MarsRoverTest #test_05AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:56:21'!
test_05AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'l'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: #West!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 16:57:28' prior: 50620621!
readCommands: manyCommands 
		
	(manyCommands size > 0) ifTrue:[
		manyCommands first = $f ifTrue:[^position:= position +(1@0)].
		manyCommands first = $b ifTrue:[^position:= position +(-1@0)].
		^orientation := #West
			]! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:57:30'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:58:09'!
test_06AssertMarsRoverReadRigthCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: #East! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:58:23'!
test_06AssertMarsRoverReadRightCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: #East! !

!methodRemoval: MarsRoverTest #test_06AssertMarsRoverReadRigthCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:58:26'!
test_06AssertMarsRoverReadRigthCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: #East!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 16:58:32'!
test_07AssertMarsRoverReadRightCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: #East! !

!methodRemoval: MarsRoverTest #test_06AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:58:32'!
test_06AssertMarsRoverReadRightCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: #East!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:58:37'!
FAILURE!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:58:37'!
FAILURE!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 16:59:24' prior: 50620703!
readCommands: manyCommands 
		
	(manyCommands size > 0) ifTrue:[
		manyCommands first = $f ifTrue:[^position:= position +(1@0)].
		manyCommands first = $b ifTrue:[^position:= position +(-1@0)].
		manyCommands first = $l ifTrue:[^orientation := #West].
		^orientation:= #East
			]! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 16:59:25'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 16:59:25'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 16:59:25'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:59:25'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:59:25'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:59:25'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 16:59:25'!
PASSED!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 17:00:02' prior: 50620794!
readCommands: manyCommands 
		
	(manyCommands size > 0) ifTrue:[
		manyCommands first = $f ifTrue:[position:= position +(1@0)].
		manyCommands first = $b ifTrue:[position:= position +(-1@0)].
		manyCommands first = $l ifTrue:[orientation := #West].
		orientation:= #East
			]! !
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 17:00:37'!
executeACommand: manyCommands

	manyCommands first = $f ifTrue:[position:= position +(1@0)].
		manyCommands first = $b ifTrue:[position:= position +(-1@0)].
		manyCommands first = $l ifTrue:[orientation := #West].
		orientation:= #East! !
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 17:00:37' prior: 50620831!
readCommands: manyCommands 
		
	(manyCommands size > 0) ifTrue:[
		self executeACommand: manyCommands
			]! !
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 17:00:44' prior: 50620852!
readCommands: manyCommands 
		
	(manyCommands size > 0) ifTrue:[
		self executeACommand: (manyCommands first)
			]! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:00:46'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:00:46'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:00:46'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:00:46'!
ERROR!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:00:46'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:00:46'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:00:46'!
ERROR!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 17:01:20' prior: 50620842!
executeACommand: aCommand

	aCommand = $f ifTrue:[position:= position +(1@0)].
	aCommand = $b ifTrue:[position:= position +(-1@0)].
	aCommand = $l ifTrue:[orientation := #West].
		orientation:= #East! !
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 17:02:15' prior: 50620890!
executeACommand: aCommand

	aCommand 	= $f ifTrue:[position:= position +(1@0)].
	aCommand = $b ifTrue:[position:= position +(-1@0)].
	aCommand = $l ifTrue:[orientation := #West].
	aCommand = $r ifTrue: [orientation:= #East]! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:02:18'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:02:18'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:02:18'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:02:18'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:02:18'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:02:18'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:02:18'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:03:19'!
test_07AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: #East! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:03:32'!
test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: #East! !

!methodRemoval: MarsRoverTest #test_07AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:03:32'!
test_07AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: #East!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:04:10' prior: 50620945!
test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'ff'.
	self assertMarsRover: marsRover positionIs: 2@0 andFaces: #North! !

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:04:12'!
FAILURE!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 17:04:50' prior: 50620858!
readCommands: manyCommands 
		
	manyCommands do: [:aCommand | self executeACommand: aCommand]
	! !
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 17:05:00' prior: 50620981!
readCommands: manyCommands 
		
	manyCommands do: [:aCommand | self executeACommand: aCommand]
! !

----SNAPSHOT----(13 May 2023 17:05:44) CuisUniversity-5799.image priorSource: 9222790!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:07:00'!
test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: #North.
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: #South! !

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:07:01'!
FAILURE!

Object subclass: #MarsRoverOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverOrientation category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:07:54'!
Object subclass: #MarsRoverOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverOrientation subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #North category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:08:07'!
MarsRoverOrientation subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverOrientation subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #South category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:08:10'!
MarsRoverOrientation subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverOrientation subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #West category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:08:12'!
MarsRoverOrientation subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverOrientation subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #East category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:08:15'!
MarsRoverOrientation subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:08:54'!
createNorthOrientation
	^North new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:09:02'!
createSouthOrientation
	^South new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:09:11'!
createEastOrientation
	^East new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:09:17'!
createWestOrientation
	^West new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:09:47' prior: 50620229!
test_01AssertInitialPosition0x0FacingNorth
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: (self createNorthOrientation).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:09:57' prior: 50620247!
test_02AssertInitialPosition0x1FacingSouth
	|marsRover|
	marsRover := MarsRover position: 0@1 facing: (self createNorthOrientation).
	self assertMarsRover: marsRover positionIs: 0@1 andFaces: (self createNorthOrientation).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:10:05' prior: 50620325!
test_03AssertMarsRoverReadEmptyCommand
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: ''.
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: #North! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:10:18' prior: 50621106!
test_03AssertMarsRoverReadEmptyCommand
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: ''.
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: (self createNorthOrientation)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:10:29' prior: 50620629!
test_04AssertMarsRoverReadFowardCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'f'.
	self assertMarsRover: marsRover positionIs: 1@0 andFaces: (self createNorthOrientation)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:10:38' prior: 50620649!
test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'b'.
	self assertMarsRover: marsRover positionIs: (-1@0) andFaces: (self createNorthOrientation)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:10:46' prior: 50620683!
test_06AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'l'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: (self createNorthOrientation)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:10:53' prior: 50620766!
test_07AssertMarsRoverReadRightCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: (self createNorthOrientation)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:10:59' prior: 50620967!
test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'ff'.
	self assertMarsRover: marsRover positionIs: 2@0 andFaces: #North! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:11:08' prior: 50621176!
test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'ff'.
	self assertMarsRover: marsRover positionIs: 2@0 andFaces: (self createNorthOrientation)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:11:18' prior: 50620996!
test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: (self createSouthOrientation )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:11:33' prior: 50621199!
test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: (self createSouthOrientation)! !

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:11:36'!
FAILURE!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:11:41'!
FAILURE!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:11:41'!
FAILURE!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:12:15'!
FAILURE!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:12:15'!
FAILURE!

!classDefinition: 'MarsRoverOrientation class' category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:14:26'!
MarsRoverOrientation class
	instanceVariableNames: 'uniqueInstance'!
!MarsRoverOrientation class methodsFor: 'no messages' stamp: 'VW 5/13/2023 17:14:22' overrides: 16785646!
new
	^uniqueInstance ! !
!MarsRoverOrientation class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:15:21' overrides: 16904184!
initialize
	uniqueInstance  := self basicNew ! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:15:26'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:15:26'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:15:26'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:15:26'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:15:26'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:15:26'!
FAILURE!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:15:26'!
FAILURE!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:15:26'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:15:26'!
FAILURE!

Object subclass: #MarsRoverCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverCommand category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:16:26'!
Object subclass: #MarsRoverCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverCommand subclass: #Forward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #Forward category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:16:43'!
MarsRoverCommand subclass: #Forward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverCommand subclass: #Backward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #Backward category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:16:50'!
MarsRoverCommand subclass: #Backward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverCommand subclass: #Left
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #Left category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:16:53'!
MarsRoverCommand subclass: #Left
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverCommand subclass: #Right
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #Right category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:16:59'!
MarsRoverCommand subclass: #Right
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #Forward stamp: 'VW 5/13/2023 17:18:16'!
MarsRoverCommand subclass: #Forward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #Backward stamp: 'VW 5/13/2023 17:18:16'!
MarsRoverCommand subclass: #Backward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #Left stamp: 'VW 5/13/2023 17:18:16'!
MarsRoverCommand subclass: #Left
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #Right stamp: 'VW 5/13/2023 17:18:17'!
MarsRoverCommand subclass: #Right
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #MarsRoverCommand stamp: 'VW 5/13/2023 17:18:17'!
Object subclass: #MarsRoverCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 17:19:11' prior: 50620899!
executeACommand: aCommand

	aCommand 	= $f ifTrue:[position:= position +(1@0)].
	aCommand = $b ifTrue:[position:= position +(-1@0)].
	aCommand = $l ifTrue:[orientation := orientation left].
	aCommand = $r ifTrue: [orientation := orientation right]! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:19:12'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:19:12'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:19:12'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:19:12'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:19:12'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:19:12'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:19:12'!
ERROR!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:19:12'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:19:12'!
ERROR!
!East methodsFor: 'no messages' stamp: 'VW 5/13/2023 17:19:36'!
left
	^North new.! !
!East methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:19:50'!
right
	^South new.! !
!North methodsFor: 'no messages' stamp: 'VW 5/13/2023 17:20:13'!
left
	^West new.! !
!North methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:20:23'!
right
	^East new.! !
!South methodsFor: 'no messages' stamp: 'VW 5/13/2023 17:20:34'!
left
	^East new.! !
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:20:43'!
right
	^West new.! !
!West methodsFor: 'no messages' stamp: 'VW 5/13/2023 17:20:58'!
right
	^South new.! !
!West methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:21:04'!
left
	^North new.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:21:08'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:21:08'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:21:08'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:21:08'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:21:08'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:21:08'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:21:08'!
ERROR!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:21:08'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:21:08'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:21:11'!
ERROR!
!MarsRoverOrientation class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:23:05' prior: 50621247 overrides: 16785646!
new
	uniqueInstance ifNil:[^self initialize]
	^uniqueInstance ! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:23:11'!
ERROR!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:23:11'!
ERROR!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:23:11'!
ERROR!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:23:11'!
ERROR!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:23:11'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:23:11'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:23:11'!
ERROR!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:23:11'!
ERROR!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:23:11'!
ERROR!

----SNAPSHOT----(13 May 2023 17:24:58) CuisUniversity-5799.image priorSource: 9258945!
!East class methodsFor: 'no messages' stamp: 'VW 5/13/2023 17:28:26' overrides: 50621483!
new
	uniqueInstance ifNil:[^self initialize]
	^uniqueInstance ! !
!North class methodsFor: 'no messages' stamp: 'VW 5/13/2023 17:28:32' overrides: 50621483!
new
	uniqueInstance ifNil:[^self initialize]
	^uniqueInstance ! !
!South class methodsFor: 'no messages' stamp: 'VW 5/13/2023 17:28:39' overrides: 50621483!
new
	uniqueInstance ifNil:[^self initialize]
	^uniqueInstance ! !
!West class methodsFor: 'no messages' stamp: 'VW 5/13/2023 17:28:44' overrides: 50621483!
new
	uniqueInstance ifNil:[^self initialize]
	^uniqueInstance ! !
!East class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:28:57' overrides: 50621252!
initialize
	uniqueInstance  := self basicNew ! !
!North class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:29:06' overrides: 50621252!
initialize
	uniqueInstance  := self basicNew ! !
!South class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:29:14' overrides: 50621252!
initialize
	uniqueInstance  := self basicNew ! !
!West class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:29:21' overrides: 50621252!
initialize
	uniqueInstance  := self basicNew ! !

!methodRemoval: MarsRoverOrientation class #initialize stamp: 'VW 5/13/2023 17:29:52'!
initialize
	uniqueInstance  := self basicNew !

!methodRemoval: MarsRoverOrientation class #new stamp: 'VW 5/13/2023 17:30:00'!
new
	uniqueInstance ifNil:[^self initialize]
	^uniqueInstance !

!classDefinition: 'MarsRoverOrientation class' category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:30:12'!
MarsRoverOrientation class
	instanceVariableNames: ''!

!classDefinition: 'North class' category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:30:12'!
North class
	instanceVariableNames: 'uniqueInstance'!

!classDefinition: 'South class' category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:30:12'!
South class
	instanceVariableNames: 'uniqueInstance'!

!classDefinition: 'West class' category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:30:12'!
West class
	instanceVariableNames: 'uniqueInstance'!

!classDefinition: 'East class' category: 'MarsRoverTDD' stamp: 'VW 5/13/2023 17:30:12'!
East class
	instanceVariableNames: 'uniqueInstance'!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:30:19'!
ERROR!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:30:19'!
ERROR!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:30:19'!
ERROR!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:30:19'!
ERROR!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:30:19'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:30:19'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:30:19'!
ERROR!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:30:19'!
ERROR!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:30:19'!
ERROR!
!East class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:30:39' prior: 50621524 overrides: 16785646!
new
	^uniqueInstance ! !
!North class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:30:46' prior: 50621529 overrides: 16785646!
new

	^uniqueInstance ! !
!South class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:30:56' prior: 50621534 overrides: 16785646!
new

	^uniqueInstance ! !
!West class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:31:05' prior: 50621539 overrides: 16785646!
new

	^uniqueInstance ! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:31:06'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:31:06'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:31:06'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:31:06'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:31:06'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:31:06'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:31:06'!
ERROR!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:31:06'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:31:07'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:31:24'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:31:24'!
ERROR!

a:= North new!

a:= North new!

a:= South new!

East initialize.
	^East new.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:34:55' prior: 50621075!
createEastOrientation
	East initialize.
	^East new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:35:10' prior: 50621067!
createNorthOrientation
	North  initialize.
	^North new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:38:34' prior: 50621071!
createSouthOrientation
	South initialize.
	^South new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:38:49' prior: 50621079!
createWestOrientation
	West initialize.
	^West new.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:38:51'!
FAILURE!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:38:51'!
FAILURE!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:38:51'!
FAILURE!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:38:51'!
FAILURE!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:38:51'!
FAILURE!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:38:51'!
FAILURE!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:38:51'!
FAILURE!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:38:51'!
FAILURE!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:38:51'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:39:06' prior: 50621707!
createWestOrientation
	^West new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:39:12' prior: 50621702!
createSouthOrientation
	^South new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:39:18' prior: 50621697!
createNorthOrientation
	^North new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:39:25' prior: 50621692!
createEastOrientation
	^East new.! !
!East class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:45:29' prior: 50621630 overrides: 16785646!
new
	self initialize.
	^uniqueInstance ! !
!North class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:45:42' prior: 50621635 overrides: 16785646!
new
	self initialize.
	^uniqueInstance ! !
!South class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:45:48' prior: 50621640 overrides: 16785646!
new
	self initialize.
	^uniqueInstance ! !
!West class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:45:54' prior: 50621645 overrides: 16785646!
new
	self initialize.
	^uniqueInstance ! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:46:03'!
FAILURE!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:46:03'!
FAILURE!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:46:03'!
FAILURE!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:46:03'!
FAILURE!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:46:03'!
FAILURE!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:46:03'!
FAILURE!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:46:03'!
FAILURE!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:46:03'!
FAILURE!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:46:03'!
FAILURE!

East new!
!East class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:48:36' prior: 50621766 overrides: 16785646!
new
	"self initialize."
	^uniqueInstance ! !

East new!

a:= East new!
!East class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:49:07' prior: 50621820 overrides: 16785646!
new
	^uniqueInstance ! !
!North class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:49:15' prior: 50621771 overrides: 16785646!
new
	^uniqueInstance ! !
!South class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:49:24' prior: 50621776 overrides: 16785646!
new
	^uniqueInstance ! !
!West class methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:49:33' prior: 50621781 overrides: 16785646!
new
	^uniqueInstance ! !

!methodRemoval: East class #initialize stamp: 'VW 5/13/2023 17:52:24'!
initialize
	uniqueInstance  := self basicNew !

!methodRemoval: East class #new stamp: 'VW 5/13/2023 17:52:40'!
new
	^uniqueInstance !

!methodRemoval: North class #new stamp: 'VW 5/13/2023 17:52:53'!
new
	^uniqueInstance !

!methodRemoval: North class #initialize stamp: 'VW 5/13/2023 17:52:57'!
initialize
	uniqueInstance  := self basicNew !

!methodRemoval: South class #initialize stamp: 'VW 5/13/2023 17:53:01'!
initialize
	uniqueInstance  := self basicNew !

!methodRemoval: South class #new stamp: 'VW 5/13/2023 17:53:10'!
new
	^uniqueInstance !

!methodRemoval: West class #initialize stamp: 'VW 5/13/2023 17:53:14'!
initialize
	uniqueInstance  := self basicNew !

!methodRemoval: West class #new stamp: 'VW 5/13/2023 17:53:22'!
new
	^uniqueInstance !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:53:32'!
FAILURE!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:53:32'!
FAILURE!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:53:32'!
FAILURE!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:53:32'!
FAILURE!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:53:32'!
FAILURE!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:53:32'!
FAILURE!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:53:32'!
FAILURE!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:53:32'!
FAILURE!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:53:32'!
FAILURE!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:54:02'!
FAILURE!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:54:02'!
FAILURE!
!MarsRoverOrientation methodsFor: 'no messages' stamp: 'VW 5/13/2023 17:56:01' overrides: 16901772!
= anOrientation
	^self isKindOf: anOrientation class! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:56:08'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:56:08'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:56:08'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:56:08'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:56:08'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:56:08'!
FAILURE!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:56:08'!
FAILURE!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:56:08'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:56:08'!
FAILURE!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:56:20'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:57:15' prior: 50621152!
test_06AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'l'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: (self createWestOrientation )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:57:23' prior: 50621164!
test_07AssertMarsRoverReadRightCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: (self createEastOrientation )! !

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:57:29'!
FAILURE!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:57:36'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:57:39'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:58:29' prior: 50621211!
test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'rr'.
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: (self createSouthOrientation)! !

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:58:31'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 17:58:31'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 17:58:31'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 17:58:31'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:58:31'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:58:31'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:58:31'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 17:58:31'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:58:31'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:58:31'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 17:59:41'!
test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'rf'.
	self assertMarsRover: marsRover positionIs: (0@-1) andFaces: (self createEastOrientation )! !

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 17:59:42'!
FAILURE!

----SNAPSHOT----(13 May 2023 18:00:43) CuisUniversity-5799.image priorSource: 9275841!
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 18:02:59' prior: 50621376!
executeACommand: aCommand

	aCommand 	= $f ifTrue:[orientation moveForward: self]. "position:= position +(1@0)"
	aCommand = $b ifTrue:[orientation moveBackward: self]. "position:= position +(-1@0)"
	aCommand = $l ifTrue:[orientation rotateLeft: self]. "orientation := orientation left"
	aCommand = $r ifTrue: [orientation rotateRight: self]. "orientation := orientation right"! !
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:03:27'!
moveForward: aMarsRover! !
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:03:36'!
moveBackward: aMarsRover! !
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:03:42'!
rotateLeft: aMarsRover! !
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:03:51'!
rotateRight: aMarsRover! !
!North methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:03:58' overrides: 50622075!
moveBackward: aMarsRover! !
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:03:58' overrides: 50622075!
moveBackward: aMarsRover! !
!West methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:03:58' overrides: 50622075!
moveBackward: aMarsRover! !
!East methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:03:58' overrides: 50622075!
moveBackward: aMarsRover! !

!methodRemoval: MarsRoverOrientation #moveBackward: stamp: 'VW 5/13/2023 18:03:58'!
moveBackward: aMarsRover!
!North methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:04:05' overrides: 50622071!
moveForward: aMarsRover! !
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:04:05' overrides: 50622071!
moveForward: aMarsRover! !
!West methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:04:05' overrides: 50622071!
moveForward: aMarsRover! !
!East methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:04:05' overrides: 50622071!
moveForward: aMarsRover! !

!methodRemoval: MarsRoverOrientation #moveForward: stamp: 'VW 5/13/2023 18:04:05'!
moveForward: aMarsRover!
!North methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:04:10' overrides: 50622079!
rotateLeft: aMarsRover! !
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:04:10' overrides: 50622079!
rotateLeft: aMarsRover! !
!West methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:04:10' overrides: 50622079!
rotateLeft: aMarsRover! !
!East methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:04:10' overrides: 50622079!
rotateLeft: aMarsRover! !

!methodRemoval: MarsRoverOrientation #rotateLeft: stamp: 'VW 5/13/2023 18:04:10'!
rotateLeft: aMarsRover!
!North methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:04:15' overrides: 50622083!
rotateRight: aMarsRover! !
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:04:15' overrides: 50622083!
rotateRight: aMarsRover! !
!West methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:04:15' overrides: 50622083!
rotateRight: aMarsRover! !
!East methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:04:15' overrides: 50622083!
rotateRight: aMarsRover! !

!methodRemoval: MarsRoverOrientation #rotateRight: stamp: 'VW 5/13/2023 18:04:15'!
rotateRight: aMarsRover!
!West methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:05:31' prior: 50622135!
rotateLeft: aMarsRover
	aMarsRover faceNorth.! !
!West methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:05:46' prior: 50622155!
rotateRight: aMarsRover
	aMarsRover faceSouth.! !
!West methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:06:38' prior: 50622095!
moveBackward: aMarsRover
	aMarsRover moveToEast.! !
!West methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:06:38' prior: 50622176!
moveBackward: aMarsRover
	aMarsRover moveToEast.! !
!West methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:06:52' prior: 50622115!
moveForward: aMarsRover
	aMarsRover moveToWest! !
!West methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:07:04' prior: 50622186!
moveForward: aMarsRover
	aMarsRover moveToWest.! !

!methodRemoval: West #left stamp: 'VW 5/13/2023 18:07:14'!
left
	^North new.!

!methodRemoval: West #right stamp: 'VW 5/13/2023 18:07:17'!
right
	^South new.!
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:07:31' prior: 50622131!
rotateLeft: aMarsRover
	aMarsRover faceEast! !
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:07:34' prior: 50622201!
rotateLeft: aMarsRover
	aMarsRover faceEast.! !
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:07:41' prior: 50622151!
rotateRight: aMarsRover
	aMarsRover faceWest! !
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:07:45' prior: 50622211!
rotateRight: aMarsRover
	aMarsRover faceWest.! !

!methodRemoval: South #right stamp: 'VW 5/13/2023 18:07:53'!
right
	^West new.!

!methodRemoval: South #left stamp: 'VW 5/13/2023 18:07:58'!
left
	^East new.!
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:08:06' prior: 50622111!
moveForward: aMarsRover
	aMarsRover moveSouth.! !
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:08:18' prior: 50622091!
moveBackward: aMarsRover
	aMarsRover moveNorth.! !
!North methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:08:51' prior: 50622127!
rotateLeft: aMarsRover
	aMarsRover faceWest.! !
!North methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:08:59' prior: 50622147!
rotateRight: aMarsRover
	aMarsRover faceEast.! !

!methodRemoval: North #left stamp: 'VW 5/13/2023 18:09:04'!
left
	^West new.!

!methodRemoval: North #right stamp: 'VW 5/13/2023 18:09:06'!
right
	^East new.!
!North methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:09:16' prior: 50622087!
moveBackward: aMarsRover
	aMarsRover moveSouth! !
!North methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:09:17' prior: 50622251!
moveBackward: aMarsRover
	aMarsRover moveSouth.! !
!North methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:09:26' prior: 50622107!
moveForward: aMarsRover
	aMarsRover moveNorth! !

!methodRemoval: East #left stamp: 'VW 5/13/2023 18:09:33'!
left
	^North new.!
!East methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:09:41' prior: 50622139!
rotateLeft: aMarsRover
	aMarsRover faceNorth.! !
!East methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:09:50' prior: 50622159!
rotateRight: aMarsRover
	aMarsRover faceSouth.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 18:09:52'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 18:09:52'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 18:09:52'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 18:09:52'!
ERROR!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 18:09:52'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 18:09:52'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 18:09:52'!
ERROR!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 18:09:52'!
ERROR!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 18:09:52'!
ERROR!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 18:09:52'!
ERROR!
!East methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:10:13' prior: 50622119!
moveForward: aMarsRover
	aMarsRover moveEast! !
!East methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:10:19' prior: 50622315!
moveForward: aMarsRover
	aMarsRover moveEast.! !
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:10:34' prior: 50622226!
moveForward: aMarsRover
	aMarsRover moveToSouth.! !
!South methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:10:39' prior: 50622231!
moveBackward: aMarsRover
	aMarsRover moveToNorth.! !
!North methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:10:43' prior: 50622256!
moveBackward: aMarsRover
	aMarsRover moveToSouth.! !
!North methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:10:47' prior: 50622261!
moveForward: aMarsRover
	aMarsRover moveToNorth! !
!East methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:10:57' prior: 50622099!
moveBackward: aMarsRover
	aMarsRover moveToWest.! !
!East methodsFor: 'as yet unclassified' stamp: 'VW 5/13/2023 18:11:01' prior: 50622320!
moveForward: aMarsRover
	aMarsRover moveToEast.! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:11:35'!
moveToEast! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:11:38'!
moveToWest! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:11:43'!
moveToNorth! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:11:47'!
moveToSouth! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:12:00'!
faceEast! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:12:03'!
faceWest! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:12:07'!
faceNorth! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:12:10'!
faceSouth! !
!MarsRover methodsFor: 'a' stamp: 'VW 5/13/2023 18:13:01' prior: 50622056!
executeACommand: aCommand

	aCommand 	= $f ifTrue:[orientation moveForward: self]. 
	aCommand = $b ifTrue:[orientation moveBackward: self]. 
	aCommand = $l ifTrue:[orientation rotateLeft: self]. 
	aCommand = $r ifTrue: [orientation rotateRight: self]. ! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:13:21' prior: 50622366!
faceEast
	orientation:= East new.! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:13:37' prior: 50622372!
faceNorth
	orientation:= North new.! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:13:56' prior: 50622375!
faceSouth
	orientation:= South new.! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:14:13' prior: 50622369!
faceWest
	orientation:= West new.! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:14:56' prior: 50622354!
moveToEast
	position := position! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:15:40' prior: 50622405!
moveToEast
	position := position + (0@-1).! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:15:48' prior: 50622360!
moveToNorth
	position := position + (1@0).! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:16:00' prior: 50622363!
moveToSouth
	position := position + (-1@0).! !
!MarsRover methodsFor: 'b' stamp: 'VW 5/13/2023 18:16:08' prior: 50622357!
moveToWest
	position := position + (0@1).! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'VW 5/13/2023 18:16:13'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'VW 5/13/2023 18:16:13'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'VW 5/13/2023 18:16:13'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'VW 5/13/2023 18:16:13'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'VW 5/13/2023 18:16:13'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'VW 5/13/2023 18:16:13'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'VW 5/13/2023 18:16:13'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 18:16:13'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'VW 5/13/2023 18:16:13'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'VW 5/13/2023 18:16:13'!
PASSED!

----SNAPSHOT----(13 May 2023 18:16:17) CuisUniversity-5799.image priorSource: 9292889!

----STARTUP---- (13 May 2023 23:09:47) as C:\Users\Ivo\Desktop\uba\inge1\cuises\windows64 - copia (2)\CuisUniversity-5706.image!


!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:14:56'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:14:56'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:14:56'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:14:56'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:14:56'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:14:56'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:14:56'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:14:56'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:14:56'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:14:56'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:18:12' prior: 50621084!
test_01AssertInitialPosition0x0FacingNorth
	|marsRover|
	
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: (self createNorthOrientation).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:18:15' prior: 50621095!
test_02AssertInitialPosition0x1FacingSouth
	|marsRover|
	
	marsRover := MarsRover position: 0@1 facing: (self createNorthOrientation).
	self assertMarsRover: marsRover positionIs: 0@1 andFaces: (self createNorthOrientation).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:18:18' prior: 50621117!
test_03AssertMarsRoverReadEmptyCommand
	|marsRover|
	
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: ''.
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: (self createNorthOrientation)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:18:27' prior: 50621128!
test_04AssertMarsRoverReadFowardCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'f'.
	self assertMarsRover: marsRover positionIs: 1@0 andFaces: (self createNorthOrientation)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:18:31' prior: 50621140!
test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'b'.
	self assertMarsRover: marsRover positionIs: (-1@0) andFaces: (self createNorthOrientation)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:18:34' prior: 50621954!
test_06AssertMarsRoverReadLeftCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'l'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: (self createWestOrientation )! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:18:37' prior: 50621966!
test_07AssertMarsRoverReadRightCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: (self createEastOrientation )! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:18:49' prior: 50622579!
test_07AssertMarsRoverReadRightCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'r'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: (self createEastOrientation )! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:19:13' prior: 50622567!
test_06AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'l'.
	self assertMarsRover: marsRover positionIs: (0@0) andFaces: (self createWestOrientation )! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:19:18' prior: 50622555!
test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'b'.
	self assertMarsRover: marsRover positionIs: (-1@0) andFaces: (self createNorthOrientation)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:19:22' prior: 50622543!
test_04AssertMarsRoverReadFowardCommandWhenFacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: 'f'.
	self assertMarsRover: marsRover positionIs: 1@0 andFaces: (self createNorthOrientation)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:19:26' prior: 50622532!
test_03AssertMarsRoverReadEmptyCommand
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: ''.
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: (self createNorthOrientation)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:19:32' prior: 50622522!
test_02AssertInitialPosition0x1FacingSouth
	
	|marsRover|
	marsRover := MarsRover position: 0@1 facing: (self createNorthOrientation).
	self assertMarsRover: marsRover positionIs: 0@1 andFaces: (self createNorthOrientation).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:19:36' prior: 50622512!
test_01AssertInitialPosition0x0FacingNorth
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	self assertMarsRover: marsRover positionIs: 0@0 andFaces: (self createNorthOrientation).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:24:49'!
assertNewMarsRoverInInitialPositionIsInPosition: aPosition Facing: anOrientation afterReading: aSerieOfCommands
	
	|marsRover|
	marsRover := MarsRover position: 0@0 facing: (self createNorthOrientation).
	marsRover readCommands: aSerieOfCommands.
	self assertMarsRover: marsRover positionIs: aPosition andFaces: anOrientation! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/13/2023 23:26:03'!
newMarsRoverIn0x0FacingNorth
	
	^MarsRover position: 0@0 facing: (self createNorthOrientation).
! !
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/13/2023 23:26:21'!
createMarsRoverIn0x0FacingNorth
	
	^MarsRover position: 0@0 facing: (self createNorthOrientation).
! !

!methodRemoval: MarsRoverTest #newMarsRoverIn0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:26:22'!
newMarsRoverIn0x0FacingNorth
	
	^MarsRover position: 0@0 facing: (self createNorthOrientation).
!
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/13/2023 23:26:41' prior: 50622670!
assertNewMarsRoverInInitialPositionIsInPosition: aPosition Facing: anOrientation afterReading: aSerieOfCommands
	
	|marsRover|
	marsRover := self createMarsRoverIn0x0FacingNorth.
	marsRover readCommands: aSerieOfCommands.
	self assertMarsRover: marsRover positionIs: aPosition andFaces: anOrientation! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/13/2023 23:26:52'!
assertNewMarsRoverIsInPosition: aPosition Facing: anOrientation afterReading: aSerieOfCommands
	
	|marsRover|
	marsRover := self createMarsRoverIn0x0FacingNorth.
	marsRover readCommands: aSerieOfCommands.
	self assertMarsRover: marsRover positionIs: aPosition andFaces: anOrientation! !

!methodRemoval: MarsRoverTest #assertNewMarsRoverInInitialPositionIsInPosition:Facing:afterReading: stamp: 'ic&vw 5/13/2023 23:26:52'!
assertNewMarsRoverInInitialPositionIsInPosition: aPosition Facing: anOrientation afterReading: aSerieOfCommands
	
	|marsRover|
	marsRover := self createMarsRoverIn0x0FacingNorth.
	marsRover readCommands: aSerieOfCommands.
	self assertMarsRover: marsRover positionIs: aPosition andFaces: anOrientation!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:27:01'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:27:01'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:27:01'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:27:01'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:27:01'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:27:01'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:27:01'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:27:01'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:27:01'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:27:01'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:27:57' prior: 50622639!
test_03AssertMarsRoverReadEmptyCommand
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createNorthOrientation
	       afterReading: ''! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/13/2023 23:28:07'!
assertNewMarsRoverIsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	|marsRover|
	marsRover := self createMarsRoverIn0x0FacingNorth.
	marsRover readCommands: aSerieOfCommands.
	self assertMarsRover: marsRover positionIs: aPosition andFaces: anOrientation! !

!methodRemoval: MarsRoverTest #assertNewMarsRoverIsInPosition:Facing:afterReading: stamp: 'ic&vw 5/13/2023 23:28:07'!
assertNewMarsRoverIsInPosition: aPosition Facing: anOrientation afterReading: aSerieOfCommands
	
	|marsRover|
	marsRover := self createMarsRoverIn0x0FacingNorth.
	marsRover readCommands: aSerieOfCommands.
	self assertMarsRover: marsRover positionIs: aPosition andFaces: anOrientation!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:28:51' prior: 50622627!
test_04AssertMarsRoverReadFowardCommandWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 1@0 
	       facing:  self createNorthOrientation
	       afterReading: 'f'! !

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:28:52'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:28:52'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:28:52'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:28:52'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:28:52'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:28:52'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:28:52'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:28:52'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:28:52'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:28:52'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:28:52'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:29:28' prior: 50622615!
test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 1@0 
	       facing:  self createNorthOrientation
	       afterReading: 'b'! !

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:28'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:29:32' prior: 50622862!
test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: -1@0 
	       facing:  self createNorthOrientation
	       afterReading: 'b'! !

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:32'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:29:32'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:29:32'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:29:32'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:32'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:32'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:32'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:32'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:32'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:33'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:33'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:29:53' prior: 50622603!
test_06AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: -1@0 
	       facing:  self createWestOrientation 
	       afterReading: 'l'! !

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:53'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:29:58' prior: 50622926!
test_06AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createWestOrientation 
	       afterReading: 'l'! !

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:58'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:29:58'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:29:58'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:29:58'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:58'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:58'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:58'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:58'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:58'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:58'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:29:58'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:30:01' prior: 50622938!
test_06AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: -1@0 
	       facing:  self createWestOrientation 
	       afterReading: 'l'! !

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:02'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:30:07' prior: 50622989!
test_06AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createWestOrientation 
	       afterReading: 'l'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:30:25' prior: 50622591!
test_07AssertMarsRoverReadRightCommandWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createEastOrientation 
	       afterReading: 'r'! !

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:25'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:30:25'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:30:25'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:30:25'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:25'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:25'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:25'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:25'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:25'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:25'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:25'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:30:35' prior: 50621187!
test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 2@0 
	       facing:  self createNorthOrientation
	       afterReading: 'ff'! !

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:36'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:30:36'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:30:36'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:30:36'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:36'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:36'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:36'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:36'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:36'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:36'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:30:36'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:30:50' prior: 50621989!
test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createSouthOrientation 
	       afterReading: 'rr'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:31:08' prior: 50622038!
test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@-1
	       facing:  self createEastOrientation
	       afterReading: 'rf'! !

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:09'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:31:09'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:31:09'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:31:09'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:09'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:09'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:09'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:09'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:09'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:09'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:09'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:31:47' prior: 50622650!
test_02AssertInitialPosition0x1FacingSouth
	
	|marsRover|
	marsRover := MarsRover position: 0@1 facing: (self createSouthOrientation).
	self assertMarsRover: marsRover positionIs: 0@1 andFaces: (self createSouthOrientation).! !

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:31:47'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:31:47'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:31:47'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:31:47'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:47'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:47'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:47'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:47'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:47'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:47'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:31:47'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:33:52'!
assertMarsRoverDontMoveAfterCreatedIn: aPosition facing: anOrientation
	
	|marsRover|
	marsRover := MarsRover position: aPosition facing: anOrientation.
	self assertMarsRover: marsRover positionIs: aPosition andFaces: anOrientation.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:34:09' prior: 50622660!
test_01AssertInitialPosition0x0FacingNorth
	
	self assertMarsRoverDontMoveAfterCreatedIn: 0@0 facing: self createNorthOrientation! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:34:10'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:34:10'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:34:10'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:34:10'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:10'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:10'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:10'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:10'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:10'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:10'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:10'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:34:14' prior: 50623235!
test_01AssertInitialPosition0x0FacingNorth
	
	self assertMarsRoverDontMoveAfterCreatedIn: 0@0 
	       facing: self createNorthOrientation! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:34:15'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:34:15'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:34:15'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:34:15'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:15'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:15'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:15'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:15'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:15'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:15'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:34:15'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:34:30' prior: 50623172!
test_02AssertInitialPosition0x1FacingSouth
	
	self assertMarsRoverDontMoveAfterCreatedIn: 0@1 
	       facing: self createSouthOrientation! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:36:42'!
test_09AssertMarsRoverReadThreeForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 3@0 
	       facing:  self createNorthOrientation
	       afterReading: 'fff'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:36:47'!
test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createSouthOrientation 
	       afterReading: 'rr'! !

!methodRemoval: MarsRoverTest #test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:36:47'!
test_09AssertMarsRoverReadTwoRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createSouthOrientation 
	       afterReading: 'rr'!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:36:52'!
test_11AssertMarsRoverReadRightForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@-1
	       facing:  self createEastOrientation
	       afterReading: 'rf'! !

!methodRemoval: MarsRoverTest #test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:36:52'!
test_10AssertMarsRoverReadRightForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@-1
	       facing:  self createEastOrientation
	       afterReading: 'rf'!

!methodRemoval: MarsRoverTest #test_09AssertMarsRoverReadThreeForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:38:33'!
test_09AssertMarsRoverReadThreeForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 3@0 
	       facing:  self createNorthOrientation
	       afterReading: 'fff'!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:38:49'!
test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createSouthOrientation 
	       afterReading: 'll'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:40:33'!
test_12AssertMarsRoverReadRightForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@-1
	       facing:  self createEastOrientation
	       afterReading: 'rf'! !

!methodRemoval: MarsRoverTest #test_11AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:35'!
test_11AssertMarsRoverReadRightForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@-1
	       facing:  self createEastOrientation
	       afterReading: 'rf'!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:36'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:40:38'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:40:38'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:40:38'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:38'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:38'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:38'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:38'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:38'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:38'!
FAILURE!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:38'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:38'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:38'!
FAILURE!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:47'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:49'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:50'!
FAILURE!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:40:51'!
FAILURE!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:41:04'!
FAILURE!
!West methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/13/2023 23:41:56' prior: 50622166!
rotateLeft: aMarsRover
	aMarsRover faceSouth.! !
!West methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/13/2023 23:42:01' prior: 50622171!
rotateRight: aMarsRover
	aMarsRover faceNorth.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:42:33'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:42:33'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:42:33'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:42:33'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:42:33'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:42:33'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:42:33'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:42:34'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:42:34'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:42:34'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:42:34'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:43:00'!
test_10AssertMarsRoverReadFourRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createNorthOrientation 
	       afterReading: 'rrrr'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:43:03'!
test_11AssertMarsRoverReadFourRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createNorthOrientation 
	       afterReading: 'rrrr'! !

!methodRemoval: MarsRoverTest #test_10AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:05'!
test_10AssertMarsRoverReadFourRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createNorthOrientation 
	       afterReading: 'rrrr'!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:43:07'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:43:07'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:43:07'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:07'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:07'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:07'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:07'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:07'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:07'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:07'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:07'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:07'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:43:12' prior: 50623550!
test_11AssertMarsRoverReadFourRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createNorthOrientation 
	       afterReading: 'llll'! !

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:13'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:43:27'!
test_12AssertMarsRoverReadFourLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createNorthOrientation 
	       afterReading: 'llll'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:43:36'!
test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@-1
	       facing:  self createEastOrientation
	       afterReading: 'rf'! !

!methodRemoval: MarsRoverTest #test_12AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:37'!
test_12AssertMarsRoverReadRightForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@-1
	       facing:  self createEastOrientation
	       afterReading: 'rf'!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:43:47' prior: 50623615!
test_11AssertMarsRoverReadFourRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createNorthOrientation 
	       afterReading: 'rrrr'! !

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:49'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:43:51'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:44:00'!
test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createNorthOrientation 
	       afterReading: 'llll'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:44:04'!
test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createNorthOrientation 
	       afterReading: 'rrrr'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:44:55'!
test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createWestOrientation 
	       afterReading: 'rrr'! !

!methodRemoval: MarsRoverTest #test_12AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:44:57'!
test_12AssertMarsRoverReadFourLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createNorthOrientation 
	       afterReading: 'llll'!

!methodRemoval: MarsRoverTest #test_11AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:44:58'!
test_11AssertMarsRoverReadFourRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createNorthOrientation 
	       afterReading: 'rrrr'!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:45:11'!
test_11AssertMarsRoverReadThreeRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createEastOrientation 
	       afterReading: 'lll'! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:13'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/13/2023 23:45:27'!
test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createEastOrientation 
	       afterReading: 'lll'! !

!methodRemoval: MarsRoverTest #test_11AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:45:27'!
test_11AssertMarsRoverReadThreeRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverIsInPosition: 0@0 
	       facing:  self createEastOrientation 
	       afterReading: 'lll'!
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:48:42' prior: 50620987!
readCommands: aSerieOfCommands 
		
	aSerieOfCommands do: [:aCommand | self executeACommand: aCommand]
! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:51:05'!
isForwardCommand: aCommand
	
	^aCommand 	= $f! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:51:22'!
isBackwardCommand: aCommand
	
	^aCommand = $b! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:51:31'!
isLeftCommand: aCommand
	
	^aCommand = $l! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:51:35'!
isRightCommand: aCommand
	
	^aCommand = $r! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:52:28' prior: 50622378!
executeACommand: aCommand

	(self isForwardCommand: aCommand) ifTrue:[orientation moveForward: self]. 
	(self isBackwardCommand: aCommand) ifTrue:[orientation moveBackward: self]. 
	(self isLeftCommand: aCommand) ifTrue:[orientation rotateLeft: self]. 
	(self isRightCommand: aCommand) ifTrue: [orientation rotateRight: self]. ! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:28'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:29'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:29'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:52:33' prior: 50623914!
executeACommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [orientation moveForward: self]. 
	(self isBackwardCommand: aCommand) ifTrue: [orientation moveBackward: self]. 
	(self isLeftCommand: aCommand) ifTrue: [orientation rotateLeft: self]. 
	(self isRightCommand: aCommand) ifTrue: [orientation rotateRight: self]. ! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:52:34'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:53:11'!
moveForward

	^ orientation moveForward: self! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:53:11' prior: 50623986!
executeACommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [self moveForward]. 
	(self isBackwardCommand: aCommand) ifTrue: [orientation moveBackward: self]. 
	(self isLeftCommand: aCommand) ifTrue: [orientation rotateLeft: self]. 
	(self isRightCommand: aCommand) ifTrue: [orientation rotateRight: self]. ! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:53:21'!
moveBackward

	^ orientation moveBackward: self! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:53:21' prior: 50624062!
executeACommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [self moveForward]. 
	(self isBackwardCommand: aCommand) ifTrue: [self moveBackward]. 
	(self isLeftCommand: aCommand) ifTrue: [orientation rotateLeft: self]. 
	(self isRightCommand: aCommand) ifTrue: [orientation rotateRight: self]. ! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:53:28'!
turnLeft

	^ orientation rotateLeft: self! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:53:28' prior: 50624080!
executeACommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [self moveForward]. 
	(self isBackwardCommand: aCommand) ifTrue: [self moveBackward]. 
	(self isLeftCommand: aCommand) ifTrue: [self turnLeft]. 
	(self isRightCommand: aCommand) ifTrue: [orientation rotateRight: self]. ! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:53:34'!
turnRight

	^ orientation rotateRight: self! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:53:34' prior: 50624097!
executeACommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [self moveForward]. 
	(self isBackwardCommand: aCommand) ifTrue: [self moveBackward]. 
	(self isLeftCommand: aCommand) ifTrue: [self turnLeft]. 
	(self isRightCommand: aCommand) ifTrue: [self turnRight]. ! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:53:49'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:54:10'!
rotateLeft

	^ orientation rotateLeft: self! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/13/2023 23:54:10' prior: 50624114!
executeACommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [self moveForward]. 
	(self isBackwardCommand: aCommand) ifTrue: [self moveBackward]. 
	(self isLeftCommand: aCommand) ifTrue: [self rotateLeft]. 
	(self isRightCommand: aCommand) ifTrue: [self turnRight]. ! !

!methodRemoval: MarsRover #turnLeft stamp: 'ic&vw 5/13/2023 23:54:10'!
turnLeft

	^ orientation rotateLeft: self!
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/13/2023 23:54:17'!
rotateRight

	^ orientation rotateRight: self! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/13/2023 23:54:17' prior: 50624189!
executeACommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [self moveForward]. 
	(self isBackwardCommand: aCommand) ifTrue: [self moveBackward]. 
	(self isLeftCommand: aCommand) ifTrue: [self rotateLeft]. 
	(self isRightCommand: aCommand) ifTrue: [self rotateRight]. ! !

!methodRemoval: MarsRover #turnRight stamp: 'ic&vw 5/13/2023 23:54:17'!
turnRight

	^ orientation rotateRight: self!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:54:18'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:54:18'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:54:19'!
PASSED!

!methodRemoval: East #right stamp: 'ic&vw 5/13/2023 23:55:34'!
right
	^South new.!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:55:36'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:55:36'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:55:36'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:55:36'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:55:36'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:55:36'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:55:37'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:55:37'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:55:37'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:55:37'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:55:37'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:55:37'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:55:37'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:55:37'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:55:37'!
PASSED!
!MarsRoverOrientation methodsFor: 'nil' stamp: 'ic&vw 5/13/2023 23:55:54'!
moveBackward: aMarsRover
	
	self subclassResponsibility ! !
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/13/2023 23:56:02'!
moveForward: aMarsRover
	
	self subclassResponsibility ! !
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/13/2023 23:56:14'!
rotateLeft: aMarsRover
	
	self subclassResponsibility ! !
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/13/2023 23:56:16'!
rotateRight: aMarsRover
	
	self subclassResponsibility ! !
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/13/2023 23:58:08' prior: 50621912 overrides: 16901772!
= anOrientation
	! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/13/2023 23:58:11'!
ERROR!
!MarsRoverOrientation methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/13/2023 23:58:17' prior: 50624365 overrides: 16901772!
= anOrientation
	^self isKindOf: anOrientation class! !
!MarsRoverOrientation methodsFor: 'comparing' stamp: 'ic&vw 5/13/2023 23:59:16' overrides: 16901788!
hash
	^self class hash! !
!MarsRoverOrientation methodsFor: 'comparing' stamp: 'ic&vw 5/14/2023 00:00:02' prior: 50624433 overrides: 16901788!
hash
	^self identityHash! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:00:05'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:04:08'!
test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth
	
	self assertNewMarsRoverIsInPosition: 0@-1
	       facing:  self createEastOrientation
	       afterReading: 'rf'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:04:21' prior: 50624500!
test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth
	
	self assertNewMarsRoverIsInPosition: 0@-1
	       facing:  self createEastOrientation
	       afterReading: 'rrff'! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:05:05'!
assertNewMarsRoverFacingNorthIsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	|marsRover|
	marsRover := self createMarsRoverIn0x0FacingNorth.
	marsRover readCommands: aSerieOfCommands.
	self assertMarsRover: marsRover positionIs: aPosition andFaces: anOrientation! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50623394!
test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self createSouthOrientation 
	       afterReading: 'll'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50623771!
test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self createNorthOrientation 
	       afterReading: 'rrrr'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50622875!
test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: -1@0 
	       facing:  self createNorthOrientation
	       afterReading: 'b'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50622811!
test_04AssertMarsRoverReadFowardCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 1@0 
	       facing:  self createNorthOrientation
	       afterReading: 'f'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50623763!
test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self createNorthOrientation 
	       afterReading: 'llll'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50623873!
test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self createEastOrientation 
	       afterReading: 'lll'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50623348!
test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self createSouthOrientation 
	       afterReading: 'rr'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50623061!
test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 2@0 
	       facing:  self createNorthOrientation
	       afterReading: 'ff'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50622778!
test_03AssertMarsRoverReadEmptyCommand
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self createNorthOrientation
	       afterReading: ''! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50623010!
test_07AssertMarsRoverReadRightCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self createEastOrientation 
	       afterReading: 'r'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50623779!
test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self createWestOrientation 
	       afterReading: 'rrr'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50623001!
test_06AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self createWestOrientation 
	       afterReading: 'l'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50623682!
test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@-1
	       facing:  self createEastOrientation
	       afterReading: 'rf'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 00:05:05' prior: 50624509!
test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@-1
	       facing:  self createEastOrientation
	       afterReading: 'rrff'! !

!methodRemoval: MarsRoverTest #assertNewMarsRoverIsInPosition:facing:afterReading: stamp: 'ic&vw 5/14/2023 00:05:05'!
assertNewMarsRoverIsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	|marsRover|
	marsRover := self createMarsRoverIn0x0FacingNorth.
	marsRover readCommands: aSerieOfCommands.
	self assertMarsRover: marsRover positionIs: aPosition andFaces: anOrientation!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:05:07'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:05:07'!
FAILURE!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:05:07'!
FAILURE!
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:05:34'!
assertNewMarsRoverFacingSouthIsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	|marsRover|
	marsRover := self createMarsRoverIn0x0FacingNorth.
	marsRover readCommands: aSerieOfCommands.
	self assertMarsRover: marsRover positionIs: aPosition andFaces: anOrientation! !
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 00:05:44'!
createMarsRoverIn0x0FacingSouth
	
	^MarsRover position: 0@0 facing: (self createSouthOrientation).
! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:05:58' prior: 50624745!
assertNewMarsRoverFacingSouthIsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	|marsRover|
	marsRover := self createMarsRoverIn0x0FacingSouth.
	marsRover readCommands: aSerieOfCommands.
	self assertMarsRover: marsRover positionIs: aPosition andFaces: anOrientation! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:06:29'!
assertNewMarsRover: aMarsRover IsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	aMarsRover readCommands: aSerieOfCommands.
	self assertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:07:19' prior: 50624518!
assertNewMarsRoverFacingNorthIsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	
	self assertNewMarsRover: self createMarsRoverIn0x0FacingNorth
	       IsInPosition: aPosition 
	       facing: anOrientation 
	       afterReading: aSerieOfCommands.

! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:07:23' prior: 50624786!
assertNewMarsRoverFacingNorthIsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	self assertNewMarsRover: self createMarsRoverIn0x0FacingNorth
	       IsInPosition: aPosition 
	       facing: anOrientation 
	       afterReading: aSerieOfCommands.

! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:07:40' prior: 50624763!
assertNewMarsRoverFacingSouthIsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	self assertNewMarsRover: self createSouthOrientation 
	       IsInPosition: aPosition 
	       facing: anOrientation 
	       afterReading: aSerieOfCommands.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:07:42'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:07:42'!
FAILURE!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:07:42'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:08:35' prior: 50624656!
test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth
	
	self assertNewMarsRoverFacingSouthIsInPosition: 0@-1
	       facing:  self createEastOrientation
	       afterReading: 'rrff'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:09:06' prior: 50624889!
test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth
	
	self assertNewMarsRoverFacingSouthIsInPosition: -2@0
	       facing:  self createWestOrientation 
	       afterReading: 'ffr'! !

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:09:07'!
ERROR!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:09:13'!
ERROR!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:09:13'!
ERROR!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:09:54'!
PASSED!
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:10:34' prior: 50624810!
assertNewMarsRoverFacingSouthIsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	self assertNewMarsRover: self createMarsRoverIn0x0FacingSouth 
	       IsInPosition: aPosition 
	       facing: anOrientation 
	       afterReading: aSerieOfCommands.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:12:28'!
test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingWest
	
	self assertNewMarsRoverFacingSouthIsInPosition: 0@2
	       facing:  self createWestOrientation 
	       afterReading: 'ffr'! !

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:12:29'!
FAILURE!
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 00:13:00'!
createMarsRoverIn0x0FacingEast
	
	^MarsRover position: 0@0 facing: (self createEastOrientation).
! !
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 00:13:08'!
createMarsRoverIn0x0FacingWest
	
	^MarsRover position: 0@0 facing: (self createWestOrientation).
! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:13:23'!
assertNewMarsRoverFacingWestIsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	self assertNewMarsRover: self createMarsRoverIn0x0FacingWest 
	       IsInPosition: aPosition 
	       facing: anOrientation 
	       afterReading: aSerieOfCommands.

! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:13:29'!
assertNewMarsRoverFacingEastIsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	self assertNewMarsRover: self createMarsRoverIn0x0FacingEast 
	       IsInPosition: aPosition 
	       facing: anOrientation 
	       afterReading: aSerieOfCommands.

! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:13:41'!
test_17AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingWest
	
	self assertNewMarsRoverFacingSouthIsInPosition: 0@2
	       facing:  self createWestOrientation 
	       afterReading: 'ffr'! !

!methodRemoval: MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:13:41'!
test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingWest
	
	self assertNewMarsRoverFacingSouthIsInPosition: 0@2
	       facing:  self createWestOrientation 
	       afterReading: 'ffr'!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:14:15'!
test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth
	
	self assertNewMarsRoverFacingSouthIsInPosition: -2@0
	       facing:  self createWestOrientation 
	       afterReading: 'ffr'! !

!methodRemoval: MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:14:18'!
test_16AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingSouth
	
	self assertNewMarsRoverFacingSouthIsInPosition: -2@0
	       facing:  self createWestOrientation 
	       afterReading: 'ffr'!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:14:34'!
test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest
	
	self assertNewMarsRoverFacingSouthIsInPosition: 0@2
	       facing:  self createWestOrientation 
	       afterReading: 'ffr'! !

!methodRemoval: MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:14:34'!
test_17AssertMarsRoverReadForwardTwiceAndRightTwiceCommandsWhenFacingWest
	
	self assertNewMarsRoverFacingSouthIsInPosition: 0@2
	       facing:  self createWestOrientation 
	       afterReading: 'ffr'!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:14:41' prior: 50625025!
test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest
	
	self assertNewMarsRoverFacingWestIsInPosition: 0@2
	       facing:  self createWestOrientation 
	       afterReading: 'ffr'! !

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:14:42'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:14:50' prior: 50625045!
test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest
	
	self assertNewMarsRoverFacingWestIsInPosition: 0@2
	       facing:  self createNorthOrientation
	       afterReading: 'ffr'! !

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:14:51'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:15:28'!
test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast
	
	self assertNewMarsRoverFacingEastIsInPosition: 0@-2
	       facing:  self createSouthOrientation 
	       afterReading: 'ffr'! !

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:15:29'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:15:45'!
test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast
	
	self assertNewMarsRoverFacingEastIsInPosition: 0@-2
	       facing:  self createSouthOrientation 
	       afterReading: 'ffr'! !

!methodRemoval: MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 00:15:45'!
test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast
	
	self assertNewMarsRoverFacingEastIsInPosition: 0@-2
	       facing:  self createSouthOrientation 
	       afterReading: 'ffr'!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:26:55'!
test_18AssertMarsRoverDontDoAnythingWithInvalidCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self createNorthOrientation 
	       afterReading: 'ffr'! !

!testRun: #MarsRoverTest #test_18AssertMarsRoverDontDoAnythingWithInvalidCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:26:58'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:27:03' prior: 50625243!
test_18AssertMarsRoverDontDoAnythingWithInvalidCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self createNorthOrientation 
	       afterReading: 'x'! !

!testRun: #MarsRoverTest #test_18AssertMarsRoverDontDoAnythingWithInvalidCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:03'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:27:04'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:27:04'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverDontDoAnythingWithInvalidCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:04'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 00:27:04'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:27:24'!
test_19AssertMarsRoverDontDoAnythingWithInvalidCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self createNorthOrientation 
	       afterReading: 'x'! !

!methodRemoval: MarsRoverTest #test_18AssertMarsRoverDontDoAnythingWithInvalidCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:27:25'!
test_18AssertMarsRoverDontDoAnythingWithInvalidCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self createNorthOrientation 
	       afterReading: 'x'!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:29:11'!
test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self createNorthOrientation 
	       afterReading: 'x'! !

!methodRemoval: MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithInvalidCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:29:11'!
test_19AssertMarsRoverDontDoAnythingWithInvalidCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self createNorthOrientation 
	       afterReading: 'x'!
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/14/2023 00:29:32' prior: 50624209!
executeACommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [self moveForward]. 
	(self isBackwardCommand: aCommand) ifTrue: [self moveBackward]. 
	(self isLeftCommand: aCommand) ifTrue: [self rotateLeft]. 
	(self isRightCommand: aCommand) ifTrue: [self rotateRight]. 
	
	self erroredCommand! !
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/14/2023 00:30:20'!
erroredCommand

	(self class) erroredCommandError! !
!MarsRover class methodsFor: 'instance creation' stamp: 'ic&vw 5/14/2023 00:30:46'!
erroredCommandError

	self error: self erroredCommandErrorMessage! !
!MarsRover class methodsFor: 'errors' stamp: 'ic&vw 5/14/2023 00:31:34'!
erroredCommandErrorMessage

	^'The command is not recognisable'! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 00:31:59'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 00:31:59'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 00:31:59'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:31:59'!
ERROR!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:31:59'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:31:59'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:31:59'!
ERROR!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:31:59'!
ERROR!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:31:59'!
ERROR!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:31:59'!
ERROR!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:31:59'!
ERROR!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:31:59'!
ERROR!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:31:59'!
ERROR!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:32:00'!
ERROR!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:32:00'!
ERROR!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:32:00'!
ERROR!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:32:00'!
ERROR!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 00:32:00'!
ERROR!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:32:00'!
ERROR!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 00:32:06'!
ERROR!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 00:32:13'!
ERROR!
!MarsRover methodsFor: 'commands' stamp: 'ic&vw 5/14/2023 00:33:27' prior: 50625385!
executeACommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [^ self moveForward]. 
	(self isBackwardCommand: aCommand) ifTrue: [^ self moveBackward]. 
	(self isLeftCommand: aCommand) ifTrue: [^ self rotateLeft]. 
	(self isRightCommand: aCommand) ifTrue: [^ self rotateRight]. 
	
	self erroredCommand! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:33:27'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:33:28'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 00:33:28'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:28'!
ERROR!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:33:28'!
ERROR!
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:40:32' prior: 50624775!
assertNewMarsRover: aMarsRover IsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	self should: [ aMarsRover readCommands: aSerieOfCommands]
	       raise: Error
	       withExceptionDo: [ :anError |
			self assert: anError messageText equals: (aMarsRover class erroredCommandErrorMessage).
			self assertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation
		]! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:40:32' prior: 50625589!
assertNewMarsRover: aMarsRover IsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	self should: [ aMarsRover readCommands: aSerieOfCommands]
	       raise: Error
	       withExceptionDo: [ :anError |
			self assert: anError messageText equals: (aMarsRover class erroredCommandErrorMessage).
			self assertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation
		]! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:40:32' prior: 50625605!
assertNewMarsRover: aMarsRover IsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	self should: [ aMarsRover readCommands: aSerieOfCommands]
	       raise: Error
	       withExceptionDo: [ :anError |
			self assert: anError messageText equals: (aMarsRover class erroredCommandErrorMessage).
			self assertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation
		]! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:06:29' prior: 50625621!
assertNewMarsRover: aMarsRover IsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	aMarsRover readCommands: aSerieOfCommands.
	self assertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:06:29' prior: 50625637!
assertNewMarsRover: aMarsRover IsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	aMarsRover readCommands: aSerieOfCommands.
	self assertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:41:05' prior: 50625648!
assertNewMarsRover: aMarsRover IsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	aMarsRover readCommands: aSerieOfCommands.
	self assertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:41:42' prior: 50625659!
assertNewMarsRover: aMarsRover IsInPosition: aPosition facing: anOrientation afterReading: aSerieOfCommands
	
	aMarsRover readCommands: aSerieOfCommands.
	self assertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:42:21'!
assertNewMarsRover: aMarsRover IsInPosition: aPosition facing: anOrientation afterReadingWithError: aSerieOfCommands
	
	self should: [ aMarsRover readCommands: aSerieOfCommands]
	       raise: Error
	       withExceptionDo: [ :anError |
			self assert: anError messageText equals: (aMarsRover class erroredCommandErrorMessage).
			self assertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation
		]! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 00:43:40'!
assertNewMarsRoverFacingNorthIsInPosition: aPosition facing: anOrientation afterReadingWithError: aSerieOfCommands
	
	self assertNewMarsRover: self createMarsRoverIn0x0FacingNorth
	       IsInPosition: aPosition 
	       facing: anOrientation 
	       afterReadingWithError: aSerieOfCommands.

! !

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:43:53'!
ERROR!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:44:02' prior: 50625365!
test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self createNorthOrientation 
	       afterReadingWithError: 'x'! !

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:02'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 00:44:02'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 00:44:02'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 00:44:02'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:02'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:02'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:02'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:02'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:03'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:03'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:03'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:03'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:03'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:03'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:03'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:03'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:44:03'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:44:03'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 00:44:03'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:03'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:44:05' prior: 50625713!
test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self createNorthOrientation 
	       afterReadingWithError: 'fx'! !

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:44:07'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:44:10' prior: 50625803!
test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self createNorthOrientation 
	       afterReadingWithError: 'x'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:44:59'!
test_20AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self createNorthOrientation 
	       afterReadingWithError: 'ffrbx'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:45:14' prior: 50625826!
test_20AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 2@1
	       facing:  self createEastOrientation 
	       afterReadingWithError: 'ffrbx'! !

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:15'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:45:31'!
test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 2@1
	       facing:  self createEastOrientation 
	       afterReadingWithError: 'ffrbx'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:45:57'!
test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 2@1
	       facing:  self createEastOrientation 
	       afterReadingWithError: 'ffrbx'! !

!methodRemoval: MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:45:57'!
test_20AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 2@1
	       facing:  self createEastOrientation 
	       afterReadingWithError: 'ffrbx'!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:46:09' prior: 50625938!
test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self createNorthOrientation 
	       afterReadingWithError: 'xffrb'! !

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:46:10'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:46:59'!
test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: -3@0
	       facing:  self createNorthOrientation 
	       afterReadingWithError: 'bbllfxfffff'! !

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:00'!
FAILURE!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 00:47:09' prior: 50626056!
test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: -3@0
	       facing:  self createSouthOrientation 
	       afterReadingWithError: 'bbllfxfffff'! !

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:09'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 00:47:09'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 00:47:10'!
PASSED!

----SNAPSHOT----(14 May 2023 00:50:47) CuisUniversity-5706.image priorSource: 9305974!

----STARTUP---- (14 May 2023 16:47:52) as C:\Users\Ivo\Desktop\uba\inge1\cuises\windows64 - copia (2)\CuisUniversity-5706.image!


!classRenamed: #MarsRoverOrientation as: #MarsRoverFacing stamp: 'ic&vw 5/14/2023 16:56:30'!
Smalltalk renameClassNamed: #MarsRoverOrientation as: #MarsRoverFacing!

!classRenamed: #East as: #MarsRoverFacingEast stamp: 'ic&vw 5/14/2023 16:56:38'!
Smalltalk renameClassNamed: #East as: #MarsRoverFacingEast!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 16:56:38' prior: 50621761!
createEastOrientation
	^MarsRoverFacingEast new.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 16:56:38' prior: 50622389!
faceEast
	orientation:= MarsRoverFacingEast new.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 16:56:49'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 16:56:49'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 16:56:49'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:49'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:49'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:49'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:49'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:49'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:49'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:49'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:49'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:50'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:50'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:50'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:50'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 16:56:50'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 16:56:50'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 16:56:50'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:50'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:50'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:50'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:56:50'!
PASSED!

!classRenamed: #North as: #MarsRoverFacingNorth stamp: 'ic&vw 5/14/2023 16:56:59'!
Smalltalk renameClassNamed: #North as: #MarsRoverFacingNorth!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 16:56:59' prior: 50621756!
createNorthOrientation
	^MarsRoverFacingNorth new.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 16:56:59' prior: 50622393!
faceNorth
	orientation:= MarsRoverFacingNorth new.! !

!classRenamed: #South as: #MarsRoverFacingSouth stamp: 'ic&vw 5/14/2023 16:57:12'!
Smalltalk renameClassNamed: #South as: #MarsRoverFacingSouth!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 16:57:12' prior: 50621751!
createSouthOrientation
	^MarsRoverFacingSouth new.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 16:57:12' prior: 50622397!
faceSouth
	orientation:= MarsRoverFacingSouth new.! !

!classRenamed: #West as: #MarsRoverFacingWest stamp: 'ic&vw 5/14/2023 16:57:22'!
Smalltalk renameClassNamed: #West as: #MarsRoverFacingWest!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 16:57:22' prior: 50621746!
createWestOrientation
	^MarsRoverFacingWest new.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 16:57:22' prior: 50622401!
faceWest
	orientation:= MarsRoverFacingWest new.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:57:30'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 16:58:32'!
PASSED!

----SNAPSHOT----(14 May 2023 16:58:35) CuisUniversity-5706.image priorSource: 9424678!
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:01:03'!
marsRoverEastOrientation
	^MarsRoverFacingEast new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:03' prior: 50625929!
test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 2@1
	       facing:  self marsRoverEastOrientation 
	       afterReadingWithError: 'ffrbx'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:03' prior: 50624951!
createMarsRoverIn0x0FacingEast
	
	^MarsRover position: 0@0 facing: (self marsRoverEastOrientation).
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:03' prior: 50624646!
test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@-1
	       facing:  self marsRoverEastOrientation
	       afterReading: 'rf'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:03' prior: 50624579!
test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self marsRoverEastOrientation 
	       afterReading: 'lll'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:03' prior: 50624618!
test_07AssertMarsRoverReadRightCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self marsRoverEastOrientation 
	       afterReading: 'r'! !

!methodRemoval: MarsRoverTest #createEastOrientation stamp: 'ic&vw 5/14/2023 17:01:03'!
createEastOrientation
	^MarsRoverFacingEast new.!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:01:07'!
PASSED!
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:01:58'!
marsRoverNorthOrientation
	^MarsRoverFacingNorth new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:58' prior: 50624560!
test_04AssertMarsRoverReadFowardCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 1@0 
	       facing:  self marsRoverNorthOrientation
	       afterReading: 'f'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:58' prior: 50624569!
test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self marsRoverNorthOrientation 
	       afterReading: 'llll'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:58' prior: 50624599!
test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 2@0 
	       facing:  self marsRoverNorthOrientation
	       afterReading: 'ff'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:58' prior: 50624541!
test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self marsRoverNorthOrientation 
	       afterReading: 'rrrr'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:58' prior: 50624551!
test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: -1@0 
	       facing:  self marsRoverNorthOrientation
	       afterReading: 'b'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:58' prior: 50622689!
createMarsRoverIn0x0FacingNorth
	
	^MarsRover position: 0@0 facing: (self marsRoverNorthOrientation).
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:58' prior: 50625817!
test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self marsRoverNorthOrientation 
	       afterReadingWithError: 'x'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:58' prior: 50623284!
test_01AssertInitialPosition0x0FacingNorth
	
	self assertMarsRoverDontMoveAfterCreatedIn: 0@0 
	       facing: self marsRoverNorthOrientation! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:58' prior: 50625059!
test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest
	
	self assertNewMarsRoverFacingWestIsInPosition: 0@2
	       facing:  self marsRoverNorthOrientation
	       afterReading: 'ffr'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:58' prior: 50625958!
test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  self marsRoverNorthOrientation 
	       afterReadingWithError: 'xffrb'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:01:58' prior: 50624609!
test_03AssertMarsRoverReadEmptyCommand
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self marsRoverNorthOrientation
	       afterReading: ''! !

!methodRemoval: MarsRoverTest #createNorthOrientation stamp: 'ic&vw 5/14/2023 17:01:58'!
createNorthOrientation
	^MarsRoverFacingNorth new.!
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:02:13'!
marsRoverSouthOrientation
	^MarsRoverFacingSouth new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:02:13' prior: 50626070!
test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: -3@0
	       facing:  self marsRoverSouthOrientation 
	       afterReadingWithError: 'bbllfxfffff'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:02:13' prior: 50623333!
test_02AssertInitialPosition0x1FacingSouth
	
	self assertMarsRoverDontMoveAfterCreatedIn: 0@1 
	       facing: self marsRoverSouthOrientation! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:02:13' prior: 50624531!
test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self marsRoverSouthOrientation 
	       afterReading: 'll'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:02:13' prior: 50624589!
test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self marsRoverSouthOrientation 
	       afterReading: 'rr'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:02:13' prior: 50624757!
createMarsRoverIn0x0FacingSouth
	
	^MarsRover position: 0@0 facing: (self marsRoverSouthOrientation).
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:02:13' prior: 50625224!
test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast
	
	self assertNewMarsRoverFacingEastIsInPosition: 0@-2
	       facing:  self marsRoverSouthOrientation 
	       afterReading: 'ffr'! !

!methodRemoval: MarsRoverTest #createSouthOrientation stamp: 'ic&vw 5/14/2023 17:02:13'!
createSouthOrientation
	^MarsRoverFacingSouth new.!
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:02:25'!
marsRoverWestOrientation
	^MarsRoverFacingWest new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:02:26' prior: 50624957!
createMarsRoverIn0x0FacingWest
	
	^MarsRover position: 0@0 facing: (self marsRoverWestOrientation).
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:02:26' prior: 50625005!
test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth
	
	self assertNewMarsRoverFacingSouthIsInPosition: -2@0
	       facing:  self marsRoverWestOrientation 
	       afterReading: 'ffr'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:02:26' prior: 50624627!
test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self marsRoverWestOrientation 
	       afterReading: 'rrr'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:02:26' prior: 50624637!
test_06AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  self marsRoverWestOrientation 
	       afterReading: 'l'! !

!methodRemoval: MarsRoverTest #createWestOrientation stamp: 'ic&vw 5/14/2023 17:02:26'!
createWestOrientation
	^MarsRoverFacingWest new.!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:28'!
PASSED!
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:02:39' prior: 50626511!
marsRoverEastOrientation
	^MarsRoverFacingEast.! !
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:02:46' prior: 50626654!
marsRoverNorthOrientation
	^MarsRoverFacingNorth.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:02:46'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:02:46'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:02:46'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:46'!
ERROR!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:46'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:46'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:46'!
ERROR!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:46'!
ERROR!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:46'!
ERROR!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:47'!
ERROR!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:47'!
ERROR!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:47'!
ERROR!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:47'!
ERROR!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:47'!
ERROR!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:47'!
ERROR!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:02:47'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:02:47'!
FAILURE!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:02:47'!
ERROR!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:47'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:47'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:47'!
FAILURE!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:02:47'!
FAILURE!
!MarsRoverFacing methodsFor: 'comparing' stamp: 'ic&vw 5/14/2023 17:03:01' prior: 50624428 overrides: 16901772!
= anOrientation
	^self isKindOf: anOrientation! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:03:05'!
FAILURE!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:03:05'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:03:05'!
FAILURE!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:03:05'!
FAILURE!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:03:05'!
ERROR!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
FAILURE!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:05'!
FAILURE!
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:03:15' prior: 50626766!
marsRoverSouthOrientation
	^MarsRoverFacingSouth.! !
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:03:18' prior: 50626830!
marsRoverWestOrientation
	^MarsRoverFacingWest.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:03:18'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:03:18'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:03:18'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:18'!
ERROR!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:18'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:18'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:18'!
ERROR!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:18'!
ERROR!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:18'!
ERROR!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:18'!
ERROR!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:19'!
ERROR!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:19'!
ERROR!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:19'!
ERROR!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:19'!
ERROR!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:19'!
ERROR!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:03:19'!
ERROR!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:03:19'!
ERROR!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:03:19'!
ERROR!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:19'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:19'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:19'!
FAILURE!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:03:19'!
FAILURE!
!MarsRoverFacing class methodsFor: 'nil' stamp: 'ic&vw 5/14/2023 17:04:54' overrides: 16901772!
= anOrientation

	! !
!MarsRoverFacing class methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:05:09' prior: 50627254 overrides: 16901772!
= anOrientation

	^true! !
!MarsRoverFacing class methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:05:18' prior: 50627259 overrides: 16901772!
= anOrientation

	^self = anOrientation! !

!methodRemoval: MarsRoverFacing class #= stamp: 'ic&vw 5/14/2023 17:05:34'!
= anOrientation

	^self = anOrientation!

self orientation class!
!MarsRoverFacing class methodsFor: 'nil' stamp: 'ic&vw 5/14/2023 17:08:03' overrides: 16901772!
= anOrientation

	^self class = anOrientation class! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:08:07'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:08:07'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:08:07'!
ERROR!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
FAILURE!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:07'!
FAILURE!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:21'!
ERROR!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:21'!
ERROR!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:08:25'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:27'!
ERROR!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:08:27'!
ERROR!
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:09:35' prior: 50626526!
createMarsRoverIn0x0FacingEast
	
	^MarsRover position: 0@0 facing: (self marsRoverEastOrientation new).
! !
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:09:40' prior: 50626708!
createMarsRoverIn0x0FacingNorth
	
	^MarsRover position: 0@0 facing: (self marsRoverNorthOrientation new).
! !
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:09:43' prior: 50626809!
createMarsRoverIn0x0FacingSouth
	
	^MarsRover position: 0@0 facing: (self marsRoverSouthOrientation new).
! !
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:09:53' prior: 50626835!
createMarsRoverIn0x0FacingWest
	
	^MarsRover position: 0@0 facing: (self marsRoverWestOrientation new).
! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:09:55'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:09:55'!
FAILURE!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:10:09'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:10:30'!
FAILURE!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:10:35'!
FAILURE!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:10:35'!
FAILURE!
!MarsRoverFacing class methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:11:23' prior: 50627273 overrides: 16901772!
= anOrientation
	^anOrientation isKindOf: self! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
FAILURE!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:11:26'!
FAILURE!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:26'!
PASSED!

!methodRemoval: MarsRoverFacing #= stamp: 'ic&vw 5/14/2023 17:11:42'!
= anOrientation
	^self isKindOf: anOrientation!

!methodRemoval: MarsRoverFacing #hash stamp: 'ic&vw 5/14/2023 17:11:48'!
hash
	^self identityHash!
!MarsRoverFacing class methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/14/2023 17:11:51' overrides: 16901788!
hash
	^self identityHash! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
FAILURE!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:11:54'!
FAILURE!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:54'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
FAILURE!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:11:58'!
FAILURE!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:11:58'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:12:00'!
FAILURE!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:12:04'!
FAILURE!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:12:04'!
FAILURE!

----SNAPSHOT----(14 May 2023 17:12:36) CuisUniversity-5706.image priorSource: 9435433!

!methodRemoval: MarsRoverTest #marsRoverEastOrientation stamp: 'ic&vw 5/14/2023 17:12:51'!
marsRoverEastOrientation
	^MarsRoverFacingEast.!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:12:51' prior: 50626533!
test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@-1
	       facing:  MarsRoverFacingEast
	       afterReading: 'rf'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:12:51' prior: 50626516!
test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 2@1
	       facing:  MarsRoverFacingEast 
	       afterReadingWithError: 'ffrbx'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:12:51' prior: 50626553!
test_07AssertMarsRoverReadRightCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  MarsRoverFacingEast 
	       afterReading: 'r'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:12:51' prior: 50626543!
test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  MarsRoverFacingEast 
	       afterReading: 'lll'! !
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:12:51' prior: 50627385!
createMarsRoverIn0x0FacingEast
	
	^MarsRover position: 0@0 facing: (MarsRoverFacingEast new).
! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
FAILURE!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:12:55'!
FAILURE!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:12:55'!
PASSED!

!methodRemoval: MarsRoverTest #marsRoverNorthOrientation stamp: 'ic&vw 5/14/2023 17:13:05'!
marsRoverNorthOrientation
	^MarsRoverFacingNorth.!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:05' prior: 50626678!
test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 2@0 
	       facing:  MarsRoverFacingNorth
	       afterReading: 'ff'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:05' prior: 50626725!
test_01AssertInitialPosition0x0FacingNorth
	
	self assertMarsRoverDontMoveAfterCreatedIn: 0@0 
	       facing: MarsRoverFacingNorth.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:05' prior: 50626743!
test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  MarsRoverFacingNorth 
	       afterReadingWithError: 'xffrb'! !
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:13:05' prior: 50627392!
createMarsRoverIn0x0FacingNorth
	
	^MarsRover position: 0@0 facing: (MarsRoverFacingNorth new).
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:05' prior: 50626733!
test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest
	
	self assertNewMarsRoverFacingWestIsInPosition: 0@2
	       facing:  MarsRoverFacingNorth
	       afterReading: 'ffr'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:05' prior: 50626688!
test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  MarsRoverFacingNorth 
	       afterReading: 'rrrr'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:05' prior: 50626753!
test_03AssertMarsRoverReadEmptyCommand
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  MarsRoverFacingNorth
	       afterReading: ''! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:05' prior: 50626698!
test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: -1@0 
	       facing:  MarsRoverFacingNorth
	       afterReading: 'b'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:05' prior: 50626715!
test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0
	       facing:  MarsRoverFacingNorth 
	       afterReadingWithError: 'x'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:05' prior: 50626659!
test_04AssertMarsRoverReadFowardCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 1@0 
	       facing:  MarsRoverFacingNorth
	       afterReading: 'f'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:05' prior: 50626668!
test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  MarsRoverFacingNorth 
	       afterReading: 'llll'! !

!methodRemoval: MarsRoverTest #marsRoverSouthOrientation stamp: 'ic&vw 5/14/2023 17:13:11'!
marsRoverSouthOrientation
	^MarsRoverFacingSouth.!
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:13:11' prior: 50627399!
createMarsRoverIn0x0FacingSouth
	
	^MarsRover position: 0@0 facing: (MarsRoverFacingSouth new).
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:11' prior: 50626771!
test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: -3@0
	       facing:  MarsRoverFacingSouth 
	       afterReadingWithError: 'bbllfxfffff'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:11' prior: 50626816!
test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast
	
	self assertNewMarsRoverFacingEastIsInPosition: 0@-2
	       facing:  MarsRoverFacingSouth 
	       afterReading: 'ffr'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:11' prior: 50626799!
test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  MarsRoverFacingSouth 
	       afterReading: 'rr'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:11' prior: 50626781!
test_02AssertInitialPosition0x1FacingSouth
	
	self assertMarsRoverDontMoveAfterCreatedIn: 0@1 
	       facing: MarsRoverFacingSouth.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:11' prior: 50626789!
test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  MarsRoverFacingSouth 
	       afterReading: 'll'! !

!methodRemoval: MarsRoverTest #marsRoverWestOrientation stamp: 'ic&vw 5/14/2023 17:13:19'!
marsRoverWestOrientation
	^MarsRoverFacingWest.!
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:19' prior: 50626852!
test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  MarsRoverFacingWest 
	       afterReading: 'rrr'! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:19' prior: 50626842!
test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth
	
	self assertNewMarsRoverFacingSouthIsInPosition: -2@0
	       facing:  MarsRoverFacingWest 
	       afterReading: 'ffr'! !
!MarsRoverTest methodsFor: 'creations' stamp: 'ic&vw 5/14/2023 17:13:19' prior: 50627406!
createMarsRoverIn0x0FacingWest
	
	^MarsRover position: 0@0 facing: (MarsRoverFacingWest new).
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'ic&vw 5/14/2023 17:13:19' prior: 50626862!
test_06AssertMarsRoverReadLeftCommandWhenFacingNorth
	
	self assertNewMarsRoverFacingNorthIsInPosition: 0@0 
	       facing:  MarsRoverFacingWest 
	       afterReading: 'l'! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
FAILURE!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:13:35'!
FAILURE!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:13:35'!
PASSED!
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/14/2023 17:14:15' prior: 50623224!
assertMarsRoverDontMoveAfterCreatedIn: aPosition facing: anOrientation
	
	|marsRover|
	marsRover := MarsRover position: aPosition facing: anOrientation new.
	self assertMarsRover: marsRover positionIs: aPosition andFaces: anOrientation.! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:17'!
PASSED!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/14/2023 17:14:22'!
PASSED!

----SNAPSHOT----(14 May 2023 17:15:45) CuisUniversity-5706.image priorSource: 9477067!

----STARTUP---- (14 May 2023 23:54:42) as C:\Users\Ivo\Desktop\uba\inge1\cuises\windows64 - copia (2)\CuisUniversity-5706.image!


MarsRoverFacing subclass: #TEST
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #TEST category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:19:14'!
MarsRoverFacing subclass: #TEST
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #TEST stamp: 'ic&vw 5/15/2023 00:19:19'!
MarsRoverFacing subclass: #TEST
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRover subclass: #TEST
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRover subclass: #TEST
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #TEST category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:19:30'!
MarsRover subclass: #TEST
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #TEST stamp: 'ic&vw 5/15/2023 00:19:33'!
MarsRover subclass: #TEST
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

Object subclass: #MarsRoverFacing
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacing category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:19:47'!
Object subclass: #MarsRoverFacing
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

Object subclass: #MarsRover2
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRover2 category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:20:33'!
Object subclass: #MarsRover2
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

Object subclass: #MarsRover2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRover2 category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:20:39'!
Object subclass: #MarsRover2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRover2 subclass: #MarsRover22
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRover22 category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:20:51'!
MarsRover2 subclass: #MarsRover22
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverFacing subclass: #MarsRoverFacing2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacing2 category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:21:05'!
MarsRoverFacing subclass: #MarsRoverFacing2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #MarsRoverFacing2 stamp: 'ic&vw 5/15/2023 00:21:09'!
MarsRoverFacing subclass: #MarsRoverFacing2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

Object subclass: #MarsRoverFacing2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacing2 category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:21:23'!
Object subclass: #MarsRoverFacing2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverFacing2 subclass: #MarsRoverFacing22
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacing22 category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:21:36'!
MarsRoverFacing2 subclass: #MarsRoverFacing22
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRenamed: #MarsRoverFacing2 as: #MarsRoverFacing222 stamp: 'ic&vw 5/15/2023 00:21:43'!
Smalltalk renameClassNamed: #MarsRoverFacing2 as: #MarsRoverFacing222!

!classRemoval: #MarsRoverFacing22 stamp: 'ic&vw 5/15/2023 00:21:52'!
MarsRoverFacing222 subclass: #MarsRoverFacing22
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #MarsRoverFacing222 stamp: 'ic&vw 5/15/2023 00:21:52'!
Object subclass: #MarsRoverFacing222
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #MarsRover22 stamp: 'ic&vw 5/15/2023 00:21:56'!
MarsRover2 subclass: #MarsRover22
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #MarsRover2 stamp: 'ic&vw 5/15/2023 00:21:56'!
Object subclass: #MarsRover2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRenamed: #MarsRoverFacing as: #MarsRoverFacing2 stamp: 'ic&vw 5/15/2023 00:22:03'!
Smalltalk renameClassNamed: #MarsRoverFacing as: #MarsRoverFacing2!

Object subclass: #MarsRoverFacing
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacing category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:22:08'!
Object subclass: #MarsRoverFacing
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverFacing subclass: #MarsRoverFacing3
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacing3 category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:22:15'!
MarsRoverFacing subclass: #MarsRoverFacing3
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #MarsRoverFacing3 stamp: 'ic&vw 5/15/2023 00:22:18'!
MarsRoverFacing subclass: #MarsRoverFacing3
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverFacing subclass: #MarsRoverFacingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacingEast category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:22:21'!
MarsRoverFacing subclass: #MarsRoverFacingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverFacing subclass: #MarsRoverFacingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacingNorth category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:22:24'!
MarsRoverFacing subclass: #MarsRoverFacingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverFacing subclass: #MarsRoverFacingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacingSouth category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:22:26'!
MarsRoverFacing subclass: #MarsRoverFacingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverFacing subclass: #MarsRoverFacingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacingWest category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:22:32'!
MarsRoverFacing subclass: #MarsRoverFacingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

self!

self subclasses !

self!

self subclasses !

!methodRemoval: MarsRoverFacing2 class #= stamp: 'ic&vw 5/15/2023 00:25:10'!
= anOrientation
	^anOrientation isKindOf: self!

!methodRemoval: MarsRoverFacing2 class #hash stamp: 'ic&vw 5/15/2023 00:25:12'!
hash
	^self identityHash!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/15/2023 00:25:17'!
FAILURE!
!MarsRoverFacing class methodsFor: 'comparing' stamp: 'ic&vw 5/15/2023 00:25:45' overrides: 16901772!
= anOrientation
	^anOrientation isKindOf: self! !
!MarsRoverFacing class methodsFor: 'comparing' stamp: 'ic&vw 5/15/2023 00:25:49' overrides: 16901788!
hash
	^self identityHash! !

!methodRemoval: MarsRoverFacing class #= stamp: 'ic&vw 5/15/2023 00:26:36'!
= anOrientation
	^anOrientation isKindOf: self!
!MarsRoverFacing methodsFor: 'nil' stamp: 'ic&vw 5/15/2023 00:26:53'!
moveBackward: aMarsRover
	
	self subclassResponsibility ! !
!MarsRoverFacing methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/15/2023 00:26:59'!
moveForward: aMarsRover
	
	self subclassResponsibility ! !
!MarsRoverFacing methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/15/2023 00:27:06'!
rotateLeft: aMarsRover
	
	self subclassResponsibility ! !
!MarsRoverFacing methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/15/2023 00:27:14'!
rotateRight: aMarsRover
	
	self subclassResponsibility ! !

MarsRoverFacing2 subclass: #MarsRoverFacingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacingEast category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:27:38'!
MarsRoverFacing2 subclass: #MarsRoverFacingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverFacing2 subclass: #MarsRoverFacingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacingNorth category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:27:41'!
MarsRoverFacing2 subclass: #MarsRoverFacingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverFacing2 subclass: #MarsRoverFacingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacingSouth category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:27:43'!
MarsRoverFacing2 subclass: #MarsRoverFacingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

MarsRoverFacing2 subclass: #MarsRoverFacingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classDefinition: #MarsRoverFacingWest category: 'MarsRoverTDD' stamp: 'ic&vw 5/15/2023 00:27:45'!
MarsRoverFacing2 subclass: #MarsRoverFacingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRemoval: #MarsRoverFacing stamp: 'ic&vw 5/15/2023 00:27:47'!
Object subclass: #MarsRoverFacing
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverTDD'!

!classRenamed: #MarsRoverFacing2 as: #MarsRoverFacing stamp: 'ic&vw 5/15/2023 00:27:50'!
Smalltalk renameClassNamed: #MarsRoverFacing2 as: #MarsRoverFacing!
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/15/2023 00:33:27'!
assertMarsRoverOrientation: aMarsRoverOrientation is: anOrientation

	self assert: (aMarsRoverOrientation isKindOf: anOrientation)! !
!MarsRoverTest methodsFor: 'asserts' stamp: 'ic&vw 5/15/2023 00:33:48' prior: 50620220!
assertMarsRover: aMarsRover positionIs: aPosition andFaces: anOrientation 

	self assert: aPosition equals: aMarsRover position.
	self assertMarsRoverOrientation: aMarsRover orientation is: anOrientation! !

!testRun: #MarsRoverTest #test_01AssertInitialPosition0x0FacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_02AssertInitialPosition0x1FacingSouth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_03AssertMarsRoverReadEmptyCommand stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_04AssertMarsRoverReadFowardCommandWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_05AssertMarsRoverReadBackwardCommandWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_06AssertMarsRoverReadLeftCommandWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_07AssertMarsRoverReadRightCommandWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_08AssertMarsRoverReadTwoForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_09AssertMarsRoverReadTwoLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_10AssertMarsRoverReadTwoRightCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_11AssertMarsRoverReadThreeLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_12AssertMarsRoverReadThreeRightCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_13AssertMarsRoverReadFourLeftCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_14AssertMarsRoverReadFourRightCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_15AssertMarsRoverReadRightForwardCommandsWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_16AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingSouth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_17AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingWest stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_18AssertMarsRoverReadForwardTwiceAndRightCommandsWhenFacingEast stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_19AssertMarsRoverDontDoAnythingWithErroredCommandWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_20AssertMarsRoverWithErroredCommandAtBeginningWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_21AssertMarsRoverWithErroredCommandAtEndWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

!testRun: #MarsRoverTest #test_22AssertMarsRoverWithErroredCommandInMiddleWhenFacingNorth stamp: 'ic&vw 5/15/2023 00:33:49'!
PASSED!

----SNAPSHOT----(15 May 2023 00:37:57) CuisUniversity-5706.image priorSource: 9496389!