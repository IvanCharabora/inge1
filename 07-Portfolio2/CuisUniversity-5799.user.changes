

----QUIT----(12 May 2023 17:49:00) CuisUniversity-5799.image priorSource: 4801971!

----STARTUP---- (12 May 2023 17:49:01) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5799.image!


----QUIT----(12 May 2023 17:49:01) CuisUniversity-5799.image priorSource: 9222569!

----STARTUP---- (25 May 2023 19:53:27) as C:\Users\Ivo\Desktop\uba\inge1\cuises\cuis 4 - portfolio 2 (imagen nueva)\CuisUniversity-5799.image!


----End fileIn of C:\Users\Ivo\Desktop\uba\inge1\cuises\cuis 4 - portfolio 2 (imagen nueva)\Portfolio-Solucion.st----!

TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'ic&vw 5/25/2023 23:07:46'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ic&vw 5/25/2023 23:10:03'!
Object subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/25/2023 23:09:58'!
test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount

    | senderAccount receiverAccount |

    senderAccount := ReceptiveAccount new.
    receiverAccount := ReceptiveAccount new.

    Transfer register: 50 from: senderAccount to: receiverAccount.

    self assert: -50 equals: senderAccount balance .
    self assert: 50 equals: receiverAccount balance.! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/25/2023 23:10:45'!
ERROR!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/25/2023 23:10:48'!
ERROR!
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/25/2023 23:11:01'!
register: aRenameMe1 from: senderAccount to: receiverAccount 
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/25/2023 23:11:10' prior: 50620634!
register: anAmount from: senderAccount to: receiverAccount 
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/25/2023 23:11:24' prior: 50620640!
register: anAmount from: senderAccount to: receiverAccount 

    Deposit register: anAmount on: senderAccount.
    Withdraw register: anAmount on: receiverAccount.! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/25/2023 23:11:27'!
FAILURE!
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/25/2023 23:11:46' prior: 50620646!
register: anAmount from: senderAccount to: receiverAccount 

    Deposit register: anAmount on: receiverAccount.
    Withdraw register: anAmount on: senderAccount.! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/25/2023 23:11:47'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/25/2023 23:13:17'!
test02TransferIsRegisteredInBothAccounts

    | senderAccount receiverAccount |

    senderAccount := ReceptiveAccount new.
    receiverAccount := ReceptiveAccount new.

    Transfer register: 50 from: senderAccount to: receiverAccount.

    self assert: -50 equals: senderAccount balance .
    self assert: 50 equals: receiverAccount balance.! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/25/2023 23:15:20' prior: 50620671!
test02TransferIsRegisteredInBothAccounts

    | senderAccount receiverAccount transfer |

    senderAccount := ReceptiveAccount new.
    receiverAccount := ReceptiveAccount new.

    transfer := Transfer register: 50 from: senderAccount to: receiverAccount.

    self assert: (senderAccount hasRegistered: transfer fromLeg).
    self assert: 50 equals: receiverAccount balance.! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/25/2023 23:15:37' prior: 50620685!
test02TransferIsRegisteredInBothAccounts

    | senderAccount receiverAccount transfer |

    senderAccount := ReceptiveAccount new.
    receiverAccount := ReceptiveAccount new.

    transfer := Transfer register: 50 from: senderAccount to: receiverAccount.

    self assert: (senderAccount hasRegistered: transfer fromLeg).
    self assert: (receiverAccount hasRegistered: transfer toLeg).! !

Object subclass: #Transfer
	instanceVariableNames: 'from to value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ic&vw 5/25/2023 23:16:00'!
Object subclass: #Transfer
	instanceVariableNames: 'from to value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/25/2023 23:16:25'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/25/2023 23:16:25'!
ERROR!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/25/2023 23:16:25'!
ERROR!
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/25/2023 23:17:35' prior: 50620659!
register: anAmount from: senderAccount to: receiverAccount 


	self new initializeFor: anAmount.

    	Deposit register: anAmount on: receiverAccount.
    	Withdraw register: anAmount on: senderAccount.! !
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/25/2023 23:18:01' prior: 50620739!
register: anAmount from: senderAccount to: receiverAccount 


	self new initializeFor: anAmount.
! !
!Transfer methodsFor: 'initialization' stamp: 'ic&vw 5/25/2023 23:19:07'!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	! !
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/25/2023 23:19:26' prior: 50620749!
register: anAmount from: senderAccount to: receiverAccount 


	self new initializeFor: anAmount from: senderAccount to: receiverAccount.
! !
!Transfer methodsFor: 'initialization' stamp: 'ic&vw 5/25/2023 23:20:09' prior: 50620755!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	aSenderAccount register: 1.! !
!Transfer methodsFor: 'initialization' stamp: 'ic&vw 5/25/2023 23:22:02' prior: 50620768!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	Deposit register: anAmount on: aReceiverAccount.
	Withdraw  register: anAmount on: aSenderAccount.
	
	value := 	anAmount.
	from := aSenderAccount.
	to := aReceiverAccount.! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/25/2023 23:22:03'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/25/2023 23:22:03'!
ERROR!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/25/2023 23:22:03'!
ERROR!
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/25/2023 23:22:32' prior: 50620760!
register: anAmount from: senderAccount to: receiverAccount 


	^self new initializeFor: anAmount from: senderAccount to: receiverAccount.
! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/25/2023 23:22:33'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/25/2023 23:22:33'!
ERROR!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/25/2023 23:22:33'!
ERROR!
!Transfer methodsFor: 'legs' stamp: 'ic&vw 5/25/2023 23:22:40'!
fromLeg
	self shouldBeImplemented.! !
!Transfer methodsFor: 'legs' stamp: 'ic&vw 5/25/2023 23:24:11' prior: 50620814!
fromLeg
	
	^self! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ic&vw 5/25/2023 23:24:37'!
Object subclass: #Transfer
	instanceVariableNames: 'from to value fromLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ic&vw 5/25/2023 23:24:38'!
Object subclass: #Transfer
	instanceVariableNames: 'from to value fromLeg toLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'initialization' stamp: 'ic&vw 5/25/2023 23:24:35' prior: 50620774!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	fromLeg := Deposit register: anAmount on: aReceiverAccount.
	toLeg := Withdraw  register: anAmount on: aSenderAccount.
	
	value := 	anAmount.
	from := aSenderAccount.
	to := aReceiverAccount.! !
!Transfer methodsFor: 'legs' stamp: 'ic&vw 5/25/2023 23:24:47' prior: 50620818!
fromLeg
	
	^fromLeg ! !
!Transfer methodsFor: 'legs' stamp: 'ic&vw 5/25/2023 23:24:55'!
toLeg
	
	^toLeg ! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/25/2023 23:24:56'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/25/2023 23:24:56'!
FAILURE!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/25/2023 23:24:56'!
FAILURE!
!Transfer methodsFor: 'initialization' stamp: 'ic&vw 5/25/2023 23:25:50' prior: 50620838!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	toLeg := Deposit register: anAmount on: aReceiverAccount.
	fromLeg := Withdraw  register: anAmount on: aSenderAccount.
	
	value := 	anAmount.
	from := aSenderAccount.
	to := aReceiverAccount.! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/25/2023 23:25:51'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/25/2023 23:25:51'!
PASSED!

----SNAPSHOT----(25 May 2023 23:26:24) CuisUniversity-5799.image priorSource: 9222790!
!Transfer methodsFor: 'initialization' stamp: 'ic&vw 5/25/2023 23:27:40' prior: 50620867!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	toLeg := Deposit register: anAmount on: aReceiverAccount.
	fromLeg := Withdraw register: anAmount on: aSenderAccount.
	
	value := 	anAmount.
	from := aSenderAccount.
	to := aReceiverAccount.! !
!Transfer methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 12:43:09' prior: 50620889!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	toLeg := Deposit register: anAmount on: aReceiverAccount.
	fromLeg := Withdraw register: anAmount on: aSenderAccount.
	
	value := 	anAmount.
! !

Object subclass: #Transfer
	instanceVariableNames: 'from fromLeg toLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 12:43:32'!
Object subclass: #Transfer
	instanceVariableNames: 'from fromLeg toLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:43:34'!
PASSED!
!Transfer methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 12:43:50'!
receiverLeg
	
	^toLeg ! !

!methodRemoval: Transfer #toLeg stamp: 'ic&vw 5/26/2023 12:43:50'!
toLeg
	
	^toLeg !
!Transfer methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 12:43:59'!
sendeLeg
	
	^fromLeg ! !

!methodRemoval: Transfer #fromLeg stamp: 'ic&vw 5/26/2023 12:43:59'!
fromLeg
	
	^fromLeg !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 12:44:00'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:44:00'!
ERROR!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:44:00'!
ERROR!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 12:44:15' prior: 50620700!
test02TransferIsRegisteredInBothAccounts

    | senderAccount receiverAccount transfer |

    senderAccount := ReceptiveAccount new.
    receiverAccount := ReceptiveAccount new.

    transfer := Transfer register: 50 from: senderAccount to: receiverAccount.

    self assert: (senderAccount hasRegistered: transfer senderLeg).
    self assert: (receiverAccount hasRegistered: transfer receiverLeg).! !
!Transfer methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 12:44:29'!
senderLeg
	
	^fromLeg ! !

!methodRemoval: Transfer #sendeLeg stamp: 'ic&vw 5/26/2023 12:44:29'!
sendeLeg
	
	^fromLeg !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 12:44:33'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:44:33'!
PASSED!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 12:44:43'!
Object subclass: #Transfer
	instanceVariableNames: 'from senderLeg toLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 12:44:43' prior: 50620964!
senderLeg
	
	^senderLeg ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 12:44:43' prior: 50620900!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	toLeg := Deposit register: anAmount on: aReceiverAccount.
	senderLeg := Withdraw register: anAmount on: aSenderAccount.
	
	value := 	anAmount.
! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 12:44:54'!
Object subclass: #Transfer
	instanceVariableNames: 'from senderLeg receiverLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 12:44:54' prior: 50620925!
receiverLeg
	
	^receiverLeg ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 12:44:54' prior: 50620991!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	receiverLeg := Deposit register: anAmount on: aReceiverAccount.
	senderLeg := Withdraw register: anAmount on: aSenderAccount.
	
	value := 	anAmount.
! !

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:44:57'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 12:45:01'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:45:01'!
PASSED!
!Transfer methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 12:45:33'!
withdrawLeg
	
	^receiverLeg ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 12:45:33' prior: 50620949!
test02TransferIsRegisteredInBothAccounts

    | senderAccount receiverAccount transfer |

    senderAccount := ReceptiveAccount new.
    receiverAccount := ReceptiveAccount new.

    transfer := Transfer register: 50 from: senderAccount to: receiverAccount.

    self assert: (senderAccount hasRegistered: transfer senderLeg).
    self assert: (receiverAccount hasRegistered: transfer withdrawLeg).! !

!methodRemoval: Transfer #receiverLeg stamp: 'ic&vw 5/26/2023 12:45:33'!
receiverLeg
	
	^receiverLeg !
!Transfer methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 12:45:42'!
depositLeg
	
	^senderLeg ! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 12:45:42' prior: 50621039!
test02TransferIsRegisteredInBothAccounts

    | senderAccount receiverAccount transfer |

    senderAccount := ReceptiveAccount new.
    receiverAccount := ReceptiveAccount new.

    transfer := Transfer register: 50 from: senderAccount to: receiverAccount.

    self assert: (senderAccount hasRegistered: transfer depositLeg).
    self assert: (receiverAccount hasRegistered: transfer withdrawLeg).! !

!methodRemoval: Transfer #senderLeg stamp: 'ic&vw 5/26/2023 12:45:42'!
senderLeg
	
	^senderLeg !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 12:45:43'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:45:43'!
PASSED!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 12:45:53'!
Object subclass: #Transfer
	instanceVariableNames: 'from withdrawLeg receiverLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 12:45:53' prior: 50621057!
depositLeg
	
	^withdrawLeg ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 12:45:53' prior: 50621013!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	receiverLeg := Deposit register: anAmount on: aReceiverAccount.
	withdrawLeg := Withdraw register: anAmount on: aSenderAccount.
	
	value := 	anAmount.
! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 12:45:57'!
Object subclass: #Transfer
	instanceVariableNames: 'from withdrawLeg depositLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 12:45:57' prior: 50621100!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	depositLeg := Deposit register: anAmount on: aReceiverAccount.
	withdrawLeg := Withdraw register: anAmount on: aSenderAccount.
	
	value := 	anAmount.
! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 12:45:57' prior: 50621034!
withdrawLeg
	
	^depositLeg ! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 12:46:02'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:46:02'!
PASSED!
!TransferTest methodsFor: 'setup' stamp: 'ic&vw 5/26/2023 12:49:44'!
setup

	! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 12:50:15' prior: 50621061!
test02TransferIsRegisteredInBothAccounts

    "| senderAccount receiverAccount transfer |

    self assert: (senderAccount hasRegistered: transfer depositLeg).
    self assert: (receiverAccount hasRegistered: transfer withdrawLeg)."! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 12:50:19' prior: 50620611!
test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount

    "| senderAccount receiverAccount |

    senderAccount := ReceptiveAccount new.
    receiverAccount := ReceptiveAccount new.

    Transfer register: 50 from: senderAccount to: receiverAccount.

    self assert: -50 equals: senderAccount balance .
    self assert: 50 equals: receiverAccount balance."! !

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 12:50:37'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'senderAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 12:50:39'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'senderAccount receiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 12:50:40'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'senderAccount receiverAccount transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'setup' stamp: 'ic&vw 5/26/2023 12:50:36' prior: 50621140!
setup

	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	transfer := Transfer register: 50 from: senderAccount to: receiverAccount.! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 12:50:50' prior: 50621155!
test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount

    self assert: -50 equals: senderAccount balance .
    self assert: 50 equals: receiverAccount balance.! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 12:50:58' prior: 50621203!
test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount

	self assert: -50 equals: senderAccount balance .
	self assert: 50 equals: receiverAccount balance.! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 12:51:11' prior: 50621144!
test02TransferIsRegisteredInBothAccounts

	self assert: (senderAccount hasRegistered: transfer depositLeg).
	self assert: (receiverAccount hasRegistered: transfer withdrawLeg).! !

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:51:12'!
ERROR!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 12:51:18'!
ERROR!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:51:18'!
ERROR!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 12:51:20'!
ERROR!
!TransferTest methodsFor: 'setUp' stamp: 'ic&vw 5/26/2023 12:52:36' overrides: 16961394!
setUp

	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	transfer := Transfer register: 50 from: senderAccount to: receiverAccount.! !

!methodRemoval: TransferTest #setup stamp: 'ic&vw 5/26/2023 12:52:36'!
setup

	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	transfer := Transfer register: 50 from: senderAccount to: receiverAccount.!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 12:52:38'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:52:38'!
PASSED!

!methodRemoval: TransferTest #setUp stamp: 'ic&vw 5/26/2023 12:53:27'!
setUp

	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	transfer := Transfer register: 50 from: senderAccount to: receiverAccount.!

TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 12:53:31'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 12:53:38' prior: 50621212!
test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount

	| receiverAccount senderAccount transfer |
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	transfer := Transfer register: 50 from: senderAccount to: receiverAccount.

	self assert: -50 equals: senderAccount balance .
	self assert: 50 equals: receiverAccount balance.! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 12:53:45' prior: 50621289!
test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount

	| receiverAccount senderAccount |
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.

	self assert: -50 equals: senderAccount balance .
	self assert: 50 equals: receiverAccount balance.! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 12:54:00' prior: 50621304!
test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount

	| receiverAccount senderAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.

	self assert: -50 equals: senderAccount balance .
	self assert: 50 equals: receiverAccount balance.! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 12:54:06' prior: 50621221!
test02TransferIsRegisteredInBothAccounts

	| receiverAccount senderAccount transfer |
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.

	self assert: (senderAccount hasRegistered: transfer depositLeg).
	self assert: (receiverAccount hasRegistered: transfer withdrawLeg).! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 12:54:37' prior: 50621316!
test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount

	| receiverAccount senderAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 50 from: senderAccount  to: receiverAccount.

	self assert: -50 equals: senderAccount balance .
	self assert: 50 equals: receiverAccount balance.! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 12:54:48' prior: 50621328!
test02TransferIsRegisteredInBothAccounts

	| receiverAccount senderAccount transfer |
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := 	Transfer register: 50 from: senderAccount  to: receiverAccount.

	self assert: (senderAccount hasRegistered: transfer depositLeg).
	self assert: (receiverAccount hasRegistered: transfer withdrawLeg).! !

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:54:49'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 12:54:49'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 12:54:49'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:04:10'!
test03LegsInTransferHaveSameTransfer

	| receiverAccount senderAccount transfer depositLegTransfer withdrawLegTransfer |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := 	Transfer register: 50 from: senderAccount  to: receiverAccount.
	
	depositLegTransfer := transfer depositLeg transfer.
	withdrawLegTransfer := transfer withdrawLeg transfer.
	
	self assert: depositLegTransfer equals: withdrawLegTransfer! !
!TransferTest methodsFor: 'creations' stamp: 'ic&vw 5/26/2023 13:04:49'!
createTransferBetweenTwoAccounts

	| receiverAccount senderAccount |
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	^Transfer register: 50 from: senderAccount  to: receiverAccount.! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:05:20' prior: 50621382!
test03LegsInTransferHaveSameTransfer

	| transfer depositLegTransfer withdrawLegTransfer |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLegTransfer := transfer depositLeg transfer.
	withdrawLegTransfer := transfer withdrawLeg transfer.
	
	self assert: depositLegTransfer equals: withdrawLegTransfer! !

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:05:26'!
ERROR!

Object subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:05:50'!
Object subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:06:00'!
AccountTransaction subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:06:05'!
AccountTransaction subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #Transfer
	instanceVariableNames: 'value withdrawLeg depositLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:06:36'!
Object subclass: #Transfer
	instanceVariableNames: 'value withdrawLeg depositLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit class methodsFor: 'nil' stamp: 'ic&vw 5/26/2023 13:10:13'!
for: aValue

	^ self new initializeFor: aValue ! !
!TransferWithdraw class methodsFor: 'nil' stamp: 'ic&vw 5/26/2023 13:10:17'!
for: aValue

	^ self new initializeFor: aValue ! !

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:10:33'!
AccountTransaction subclass: #TransferWithdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferWithdraw methodsFor: 'no messages' stamp: 'ic&vw 5/26/2023 13:10:32'!
initializeFor: aValue

	value := aValue ! !

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:10:48'!
AccountTransaction subclass: #TransferDeposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'nil' stamp: 'ic&vw 5/26/2023 13:10:47'!
initializeFor: aValue

	value := aValue ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:11:00' overrides: 50620490!
affectBalance: aBalance

	^aBalance + value ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:11:07' overrides: 50620490!
affectBalance: aBalance

	^aBalance - value ! !
!Transfer methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 13:11:22' prior: 50621118!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	depositLeg := TransferDeposit register: anAmount on: aReceiverAccount.
	withdrawLeg := TransferWithdraw register: anAmount on: aSenderAccount.
	
	value := 	anAmount.
! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:11:24'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:11:24'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:11:24'!
ERROR!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:11:24'!
ERROR!
!Transfer methodsFor: 'accessing' stamp: 'ic&vw 5/26/2023 13:12:15' overrides: 16902254!
value

	^value! !
!TransferDeposit class methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:13:03'!
registerOn: aTransfer

	^ self new initializeFor: aTransfer ! !

!methodRemoval: TransferDeposit class #for: stamp: 'ic&vw 5/26/2023 13:13:06'!
for: aValue

	^ self new initializeFor: aValue !

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:13:19'!
AccountTransaction subclass: #TransferDeposit
	instanceVariableNames: 'value transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:13:18' prior: 50621505!
initializeFor: aTransfer

	transfer := aTransfer! !

AccountTransaction subclass: #TransferDeposit
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:13:25'!
AccountTransaction subclass: #TransferDeposit
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #TransferWithdraw
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:13:28'!
AccountTransaction subclass: #TransferWithdraw
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferWithdraw class methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:13:45'!
registerOn: aTransfer

	^ self new initializeFor: aTransfer ! !

!methodRemoval: TransferWithdraw class #for: stamp: 'ic&vw 5/26/2023 13:13:47'!
for: aValue

	^ self new initializeFor: aValue !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:13:55' prior: 50621493!
initializeFor: aTransfer

	transfer := aTransfer ! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:14:01'!
ERROR!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:14:01'!
ERROR!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:14:01'!
ERROR!
!Transfer methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 13:14:27' prior: 50621520!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	depositLeg := TransferDeposit registerOn: self.
	withdrawLeg := TransferWithdraw registerOn: self.
	
	value := 	anAmount.
! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:14:27'!
FAILURE!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:14:27'!
FAILURE!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:14:27'!
ERROR!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:14:32'!
FAILURE!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:15:10' overrides: 50620486!
value

	^transfer value! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:15:15' prior: 50621510 overrides: 50620490!
affectBalance: aBalance

	^aBalance + self value ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:15:21' overrides: 50620486!
value

	^transfer value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:15:24' prior: 50621515 overrides: 50620490!
affectBalance: aBalance

	^aBalance - self value ! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:15:26'!
FAILURE!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:15:26'!
FAILURE!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:15:26'!
ERROR!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:15:29'!
FAILURE!
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/26/2023 13:16:13' prior: 50620796!
register: anAmount from: senderAccount to: receiverAccount 

	senderAccount register: self.
	^self new initializeFor: anAmount from: senderAccount to: receiverAccount.
! !
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/26/2023 13:16:20' prior: 50621687!
register: anAmount from: senderAccount to: receiverAccount 

	senderAccount register: self.
	receiverAccount register: self.
	^self new initializeFor: anAmount from: senderAccount to: receiverAccount.
! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:16:20'!
ERROR!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:16:20'!
FAILURE!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:16:20'!
ERROR!
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/26/2023 13:16:39' prior: 50621696!
register: anAmount from: senderAccount to: receiverAccount 


	| transfer |
	transfer := self new initializeFor: anAmount from: senderAccount to: receiverAccount.

	senderAccount register: transfer.
	receiverAccount register: transfer.
	^transfer.
! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:16:41'!
ERROR!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:16:41'!
FAILURE!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:16:41'!
ERROR!
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/26/2023 13:16:47' prior: 50621717!
register: anAmount from: senderAccount to: receiverAccount 
	
	| transfer |
	
	transfer := self new initializeFor: anAmount from: senderAccount to: receiverAccount.

	senderAccount register: transfer.
	receiverAccount register: transfer.
	^transfer.
! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:29:25'!
ERROR!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:29:25'!
FAILURE!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:29:25'!
ERROR!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:29:27'!
ERROR!
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/26/2023 13:34:12' prior: 50621739!
register: anAmount from: senderAccount to: receiverAccount 
	
	| transfer |
	
	transfer := self new initializeFor: anAmount from: senderAccount to: receiverAccount.

	senderAccount register: transfer withdrawLeg.
	receiverAccount register: transfer depositLeg.
	^transfer.
! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:34:14'!
FAILURE!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:34:14'!
FAILURE!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:34:14'!
ERROR!
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/26/2023 13:34:22' prior: 50621766!
register: anAmount from: senderAccount to: receiverAccount 
	
	| transfer |
	
	transfer := self new initializeFor: anAmount from: senderAccount to: receiverAccount.

	senderAccount register: transfer depositLeg.
	receiverAccount register: transfer withdrawLeg.
	^transfer.
! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:34:22'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:34:22'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:34:22'!
ERROR!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:34:22'!
ERROR!
!Transfer methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 13:35:16'!
initializeFor: anAmount

	depositLeg := TransferDeposit registerOn: self.
	withdrawLeg := TransferWithdraw registerOn: self.
	
	value := 	anAmount.
! !

!methodRemoval: Transfer #initializeFor:from:to: stamp: 'ic&vw 5/26/2023 13:35:18'!
initializeFor: anAmount from: aSenderAccount to: aReceiverAccount

	depositLeg := TransferDeposit registerOn: self.
	withdrawLeg := TransferWithdraw registerOn: self.
	
	value := 	anAmount.
!
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/26/2023 13:35:24' prior: 50621789!
register: anAmount from: senderAccount to: receiverAccount 
	
	| transfer |
	
	transfer := self new initializeFor: anAmount.

	senderAccount register: transfer depositLeg.
	receiverAccount register: transfer withdrawLeg.
	^transfer.
! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:35:25'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:35:25'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:35:25'!
ERROR!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:35:25'!
ERROR!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:35:39'!
transfer

	^transfer! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:35:43'!
transfer

	^transfer! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:35:46'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:35:46'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:35:46'!
PASSED!
!AccountTransaction methodsFor: 'value' stamp: 'ic&vw 5/26/2023 13:36:24'!
initiliazeFor: anAmount 

	self subclassResponsibility ! !
!AccountTransaction methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 13:36:54'!
initiaizeFor: anAmount 

	self subclassResponsibility ! !

!methodRemoval: AccountTransaction #initiliazeFor: stamp: 'ic&vw 5/26/2023 13:36:54'!
initiliazeFor: anAmount 

	self subclassResponsibility !
!AccountTransaction methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 13:36:58'!
initializeFor: anAmount 

	self subclassResponsibility ! !

!methodRemoval: AccountTransaction #initiaizeFor: stamp: 'ic&vw 5/26/2023 13:36:58'!
initiaizeFor: anAmount 

	self subclassResponsibility !
!Deposit class methodsFor: 'instance creation' stamp: 'ic&vw 5/26/2023 13:37:48' overrides: 50620504!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !
!Withdraw class methodsFor: 'instance creation' stamp: 'ic&vw 5/26/2023 13:37:52' overrides: 50620504!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !

!methodRemoval: AccountTransaction class #register:on: stamp: 'ic&vw 5/26/2023 13:37:55'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:38:00'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:38:00'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:38:00'!
PASSED!

----SNAPSHOT----(26 May 2023 13:38:04) CuisUniversity-5799.image priorSource: 9255523!

AccountTransaction subclass: #TransferTransactions
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTransactions category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:38:42'!
AccountTransaction subclass: #TransferTransactions
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferTransactions subclass: #TransferWithdraw
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:38:49'!
TransferTransactions subclass: #TransferWithdraw
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferTransactions subclass: #TransferDeposit
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:38:52'!
TransferTransactions subclass: #TransferDeposit
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTransactions methodsFor: 'nil' stamp: 'ic&vw 5/26/2023 13:39:13' overrides: 50620490!
affectBalance: aBalance

	self subclassResponsibility.! !
!TransferTransactions methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:41:53' overrides: 50621890!
initializeFor: aTransfer

	self subclassResponsibility.! !
!TransferTransactions methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:42:06'!
transfer

	self subclassResponsibility.! !
!TransferTransactions methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:42:58' overrides: 50620486!
value

	self subclassResponsibility.! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:43:00'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:43:00'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:43:00'!
PASSED!

TransferTransactions subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:43:18'!
TransferTransactions subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferTransactions subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:43:20'!
TransferTransactions subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #TransferTransactions
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTransactions category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 13:43:36'!
AccountTransaction subclass: #TransferTransactions
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTransactions methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:43:53' prior: 50621983 overrides: 50621890!
initializeFor: aTransfer

	transfer := aTransfer! !

!methodRemoval: TransferDeposit #initializeFor: stamp: 'ic&vw 5/26/2023 13:43:53'!
initializeFor: aTransfer

	transfer := aTransfer!

!methodRemoval: TransferWithdraw #initializeFor: stamp: 'ic&vw 5/26/2023 13:43:56'!
initializeFor: aTransfer

	transfer := aTransfer !
!TransferTransactions methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:44:13' prior: 50621993 overrides: 50620486!
value

	^transfer value! !

!methodRemoval: TransferWithdraw #value stamp: 'ic&vw 5/26/2023 13:44:13'!
value

	^transfer value!
!TransferTransactions methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 13:44:17' prior: 50621988!
transfer

	^transfer! !

!methodRemoval: TransferWithdraw #transfer stamp: 'ic&vw 5/26/2023 13:44:17'!
transfer

	^transfer!

!methodRemoval: TransferDeposit #transfer stamp: 'ic&vw 5/26/2023 13:44:22'!
transfer

	^transfer!

!methodRemoval: TransferDeposit #value stamp: 'ic&vw 5/26/2023 13:44:26'!
value

	^transfer value!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:44:29'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:44:29'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:44:29'!
PASSED!
!Transfer class methodsFor: 'XXX' stamp: 'ic&vw 5/26/2023 13:46:11' prior: 50621832!
register: anAmount from: senderAccount to: receiverAccount 
	
	| transfer |
	
	transfer := self new initializeFor: anAmount.

	senderAccount register: transfer depositLeg.
	receiverAccount register: transfer withdrawLeg.
	
	^transfer.
! !

----SNAPSHOT----(26 May 2023 13:47:27) CuisUniversity-5799.image priorSource: 9289039!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:49:27'!
test04CanNavigateFromWithdrawLegToDepositLeg

	| transfer depositLegTransfer withdrawLegTransfer |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLegTransfer := transfer depositLeg transfer.
	withdrawLegTransfer := transfer withdrawLeg transfer.
	
	self assert: depositLegTransfer equals: withdrawLegTransfer! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:51:00' prior: 50622110!
test04CanNavigateFromWithdrawLegToDepositLeg

	| transfer depositLeg withdrawLegDepositLeg |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLeg := transfer depositLeg transfer.
	withdrawLegDepositLeg := transfer withdrawLeg depositLeg.
	
	self assert: depositLeg equals: withdrawLegDepositLeg! !

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:51:03'!
ERROR!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:51:29'!
ERROR!

transfer withdrawLeg !
!Transfer methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 13:52:18' prior: 50621128!
withdrawLeg
	
	^withdrawLeg ! !
!Transfer methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 13:52:23' prior: 50621096!
depositLeg
	
	^depositLeg ! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:52:24'!
FAILURE!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:52:24'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:52:24'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:52:24'!
ERROR!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:52:27'!
FAILURE!
!Transfer class methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 13:52:48' prior: 50622097!
register: anAmount from: senderAccount to: receiverAccount 
	
	| transfer |
	
	transfer := self new initializeFor: anAmount.

	senderAccount register: transfer withdrawLeg.
	receiverAccount register: transfer depositLeg.
	
	^transfer.
! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:52:49'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:52:49'!
FAILURE!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:52:49'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:52:49'!
ERROR!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:53:10' prior: 50621356!
test02TransferIsRegisteredInBothAccounts

	| receiverAccount senderAccount transfer |
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	transfer := 	Transfer register: 50 from: senderAccount  to: receiverAccount.

	self assert: (senderAccount hasRegistered: transfer withdrawLeg).
	self assert: (receiverAccount hasRegistered: transfer depositLeg).! !

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:53:10'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:53:10'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:53:10'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:53:10'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:53:10'!
ERROR!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:53:10'!
ERROR!
!TransferWithdraw methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 13:53:20'!
depositLeg
	self shouldBeImplemented.! !

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:53:25'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:53:25'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:53:25'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:53:25'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:53:25'!
ERROR!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:53:25'!
ERROR!
!TransferWithdraw methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 13:53:48' prior: 50622234!
depositLeg
	transfer depositLeg! !
!TransferWithdraw methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 13:53:52' prior: 50622260!
depositLeg
	^transfer depositLeg! !
!TransferWithdraw methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 13:53:54' prior: 50622264!
depositLeg

	^transfer depositLeg! !

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:53:57'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:53:57'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:53:57'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:53:57'!
FAILURE!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:53:57'!
FAILURE!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:54:08' prior: 50622123!
test04CanNavigateFromWithdrawLegToDepositLeg

	| transfer depositLeg withdrawLegDepositLeg |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLeg := transfer depositLeg.
	withdrawLegDepositLeg := transfer withdrawLeg depositLeg.
	
	self assert: depositLeg equals: withdrawLegDepositLeg! !

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:54:08'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:54:08'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:54:08'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:54:08'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:54:08'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:54:34' prior: 50622291!
test04CanNavigateFromWithdrawLegToDepositLeg

	| transfer depositLeg withdrawLegDepositLeg receiverAccount senderAccount |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 50 from: senderAccount  to: receiverAccount.
	
	depositLeg := transfer depositLeg.
	withdrawLegDepositLeg := transfer withdrawLeg depositLeg.
	
	self assert: depositLeg equals: withdrawLegDepositLeg! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:54:39' prior: 50622322!
test04CanNavigateFromWithdrawLegToDepositLeg

	| transfer depositLeg withdrawLegDepositLeg receiverAccount senderAccount |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 70 from: senderAccount  to: receiverAccount.
	
	depositLeg := transfer depositLeg.
	withdrawLegDepositLeg := transfer withdrawLeg depositLeg.
	
	self assert: depositLeg equals: withdrawLegDepositLeg! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:54:48' prior: 50622340!
test04CanNavigateFromWithdrawLegToDepositLeg

	| transfer depositLeg withdrawLegDepositLeg receiverAccount senderAccount tt |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	tt := Transfer register: 70 from: senderAccount  to: receiverAccount.
	
	depositLeg := transfer depositLeg.
	withdrawLegDepositLeg := transfer withdrawLeg depositLeg.
	
	self assert: tt depositLeg equals: withdrawLegDepositLeg! !

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:54:52'!
FAILURE!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:55:05' prior: 50622358!
test04CanNavigateFromWithdrawLegToDepositLeg

	| transfer withdrawLegDepositLeg |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	withdrawLegDepositLeg := transfer withdrawLeg depositLeg.
	
	self assert: transfer depositLeg equals: withdrawLegDepositLeg! !

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:55:07'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:55:07'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:55:07'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:55:07'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:55:07'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:55:22'!
test05CanNavigateFromDepositLegToWithdrawLeg

	| transfer withdrawLegDepositLeg |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	withdrawLegDepositLeg := transfer withdrawLeg depositLeg.
	
	self assert: transfer depositLeg equals: withdrawLegDepositLeg! !

!classRenamed: #TransferTransactions as: #TransferTransaction stamp: 'ic&vw 5/26/2023 13:55:30'!
Smalltalk renameClassNamed: #TransferTransactions as: #TransferTransaction!

!testRun: #TransferTest #test05CanNavigateFromDepositLegToWithdrawLeg stamp: 'ic&vw 5/26/2023 13:55:33'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:55:48' prior: 50622409!
test05CanNavigateFromDepositLegToWithdrawLeg

	| transfer depositLegWithdrawLeg |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLegWithdrawLeg := transfer withdrawLeg depositLeg.
	
	self assert: transfer depositLeg equals: depositLegWithdrawLeg! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:55:56' prior: 50622429!
test05CanNavigateFromDepositLegToWithdrawLeg

	| transfer depositLegWithdrawLeg |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLegWithdrawLeg := transfer depositLeg withdrawLeg.
	
	self assert: transfer depositLeg equals: depositLegWithdrawLeg! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 13:56:07' prior: 50622440!
test05CanNavigateFromDepositLegToWithdrawLeg

	| transfer depositLegWithdrawLeg |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLegWithdrawLeg := transfer depositLeg withdrawLeg.
	
	self assert: transfer withdrawLeg equals: depositLegWithdrawLeg! !

!testRun: #TransferTest #test05CanNavigateFromDepositLegToWithdrawLeg stamp: 'ic&vw 5/26/2023 13:56:08'!
ERROR!
!TransferDeposit methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 13:56:14'!
withdrawLeg
	self shouldBeImplemented.! !
!TransferDeposit methodsFor: 'legs' stamp: 'ic&vw 5/26/2023 13:56:22' prior: 50622466!
withdrawLeg
	^transfer withdrawLeg! !

!testRun: #TransferTest #test05CanNavigateFromDepositLegToWithdrawLeg stamp: 'ic&vw 5/26/2023 13:56:24'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:56:24'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:56:24'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:56:24'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:56:24'!
PASSED!

!testRun: #TransferTest #test05CanNavigateFromDepositLegToWithdrawLeg stamp: 'ic&vw 5/26/2023 13:56:24'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 13:56:27'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 13:56:27'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 13:56:27'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 13:56:27'!
PASSED!

!testRun: #TransferTest #test05CanNavigateFromDepositLegToWithdrawLeg stamp: 'ic&vw 5/26/2023 13:56:27'!
PASSED!

----SNAPSHOT----(26 May 2023 14:52:17) CuisUniversity-5799.image priorSource: 9294606!

TestCase subclass: #AccountSumaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSumaryTest category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 19:10:28'!
TestCase subclass: #AccountSumaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSumaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:12:54'!
test01CalculateNewAccountSumaryTest! !
!AccountSumaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:15:37'!
test01NewAccountSumaryTestHasOnlyBalance

	| account |
	account := ReceptiveAccount new.
	self assert: 50 equals: account balance.! !
!AccountSumaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:15:44' prior: 50622534!
test01NewAccountSumaryTestHasOnlyBalance

	| account |
	
	account := ReceptiveAccount new.
	self assert: 50 equals: account balance.! !

!classDefinition: #AccountSumary category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 19:16:43'!
Object subclass: #AccountSumary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSumaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:16:39' prior: 50622541!
test01NewAccountSumaryTestHasOnlyBalance

	| account |
	
	account := ReceptiveAccount new.
	account := AccountSumary for: account.
	
	self assert: 50 equals: account summaryTest.! !
!AccountSumaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:16:58' prior: 50622556!
test01NewAccountSumaryTestHasOnlyBalance

	| account accountSumary |
	
	account := ReceptiveAccount new.
	accountSumary := AccountSumary for: account.
	
	self assert: 50 equals: account summaryTest.! !

!classRenamed: #AccountSumaryTest as: #AccountSummaryTest stamp: 'ic&vw 5/26/2023 19:17:16'!
Smalltalk renameClassNamed: #AccountSumaryTest as: #AccountSummaryTest!

!classRenamed: #AccountSumary as: #AccountSummary stamp: 'ic&vw 5/26/2023 19:17:20'!
Smalltalk renameClassNamed: #AccountSumary as: #AccountSummary!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 19:17:20' prior: 50622565!
test01NewAccountSumaryTestHasOnlyBalance

	| account accountSumary |
	
	account := ReceptiveAccount new.
	accountSumary := AccountSummary for: account.
	
	self assert: 50 equals: account summaryTest.! !

!methodRemoval: AccountSummaryTest #test01CalculateNewAccountSumaryTest stamp: 'ic&vw 5/26/2023 19:17:28'!
test01CalculateNewAccountSumaryTest!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:17:35' prior: 50622585!
test01NewAccountSumaryTestHasOnlyBalance

	| account accountSummary |
	
	account := ReceptiveAccount new.
	accountSummary := AccountSummary for: account.
	
	self assert: 50 equals: account summaryTest.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:20:36' prior: 50622599!
test01NewAccountSumaryTestHasOnlyBalance

	| accountSummary |
	
	accountSummary := AccountSummary for: ReceptiveAccount new.
	
	self assert: (OrderedCollection with: 'Balance = 0') equals: accountSummary calculate.! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:21:03'!
ERROR!
!AccountSummary class methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 19:21:20'!
for: aRenameMe1 
	self shouldBeImplemented.! !
!AccountSummary class methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 19:21:43' prior: 50622623!
for: anAccount 
	
	^self new initializeFor: anAccount! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:21:45'!
ERROR!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 19:21:52'!
Object subclass: #AccountSummary
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 19:21:52'!
initializeFor: anAccount 
	self shouldBeImplemented.
	account := anAccount.! !
!AccountSummary methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 19:21:59' prior: 50622644!
initializeFor: anAccount 
	
	account := anAccount.! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:22:00'!
ERROR!
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:22:08'!
calculate
	self shouldBeImplemented.! !
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:23:11' prior: 50622658!
calculate
	
	^OrderedCollection with: ('Balance = ', 0)! !
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:23:16' prior: 50622663!
calculate
	
	^OrderedCollection with: ('Balance = ', account balance)! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:23:18'!
ERROR!
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:23:34' prior: 50622668!
calculate
	
	^OrderedCollection with: ('Balance = ', account balance asString)! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:23:34'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:24:39'!
test02AccountWithDepositHasDepositAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	accountSummary := AccountSummary for: ReceptiveAccount new.
	
	self assert: (OrderedCollection with: 'Balance = 0') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:26:20' prior: 50622686!
test02AccountWithDepositHasDepositAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: ReceptiveAccount new.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Depósito = 100' with: 'Balance = 0') equals: accountSummary calculate.! !

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:26:21'!
FAILURE!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:26:43' prior: 50622698!
test02AccountWithDepositHasDepositAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: ReceptiveAccount new.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Depósito = 100' with: 'Balance = 100') equals: accountSummary calculate.! !

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:26:44'!
FAILURE!
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:27:51' prior: 50622677!
calculate
	
	| summary |
	summary := OrderedCollection new.
		
	^OrderedCollection with: ('Balance = ', account balance asString)! !
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:27:59' prior: 50622732!
calculate
	
	| summary |
	summary := OrderedCollection new.
		
	^summary add: ('Balance = ', account balance asString)! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:28:00'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:28:00'!
FAILURE!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:28:03'!
FAILURE!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:28:20'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:28:20'!
FAILURE!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:28:21'!
FAILURE!
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:28:59' prior: 50622739!
calculate
	
	| summary |
	summary := OrderedCollection new.
		
	summary add: ('Balance = ', account balance asString)
	
	^summary! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:28:59'!
ERROR!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:28:59'!
ERROR!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:29:02'!
ERROR!
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:29:08' prior: 50622768!
calculate
	
	| summary |
	summary := OrderedCollection new.
		
	summary add: ('Balance = ', account balance asString).
	
	^summary! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:29:09'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:29:09'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:29:09'!
FAILURE!
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:33:15' prior: 50622786!
calculate
	
	| summary |
	summary := OrderedCollection new.
	
	account addTransactionsIn: summary.
		
	summary add: ('Balance = ', account balance asString).
	
	^summary! !
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:34:20' prior: 50622805!
calculate
	
	| summary |
	summary := OrderedCollection new.
	
	account addTransactionsInSummary: summary.
		
	summary add: ('Balance = ', account balance asString).
	
	^summary! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 19:35:40'!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | (aSummary add: aTransaction) ]! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 19:36:38' prior: 50622823!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | (aSummary add: ('Depósito = ', aTransaction value))]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 19:36:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:36:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:36:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 19:36:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:36:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:36:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 19:36:39'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 19:36:47'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 19:36:47'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 19:36:47'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 19:36:47'!
PASSED!

!testRun: #TransferTest #test05CanNavigateFromDepositLegToWithdrawLeg stamp: 'ic&vw 5/26/2023 19:36:47'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:36:55'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:36:55'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:36:55'!
FAILURE!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:39:56' prior: 50622715!
test02AccountWithDepositHasDepositAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Depósito = 100' with: 'Balance = 100') equals: accountSummary calculate.! !

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:39:57'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 19:40:18' prior: 50622830!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | (aSummary add: ('Depósito = ', aTransaction value asString))]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 19:40:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:40:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:40:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 19:40:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:40:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:40:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 19:40:20'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:40:25'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:40:25'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:41:01'!
test03AccountWithWithdrawHasDepositAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Depósito = 100' with: 'Balance = 100') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:41:04' prior: 50622952!
test03AccountWithWithdrawHasDepositAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Depósito = 100' with: 'Balance = -100') equals: accountSummary calculate.! !

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:41:05'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:41:05'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:41:05'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:41:05'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:41:33' prior: 50622965!
test03AccountWithWithdrawHasDepositAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Extracción = 100' with: 'Balance = -100') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:41:41'!
test03AccountWithWithdrawHasWithdrawAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Extracción = 100' with: 'Balance = -100') equals: accountSummary calculate.! !

!methodRemoval: AccountSummaryTest #test03AccountWithWithdrawHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:41:41'!
test03AccountWithWithdrawHasDepositAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Extracción = 100' with: 'Balance = -100') equals: accountSummary calculate.!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:41:51'!
FAILURE!
!AccountSummary methodsFor: 'messages' stamp: 'ic&vw 5/26/2023 19:42:32'!
balanceMessage

	! !
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:42:43' prior: 50623036!
balanceMessage

	^ 'Balance = ', account balance asString! !
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:42:43' prior: 50622814!
calculate
	
	| summary |
	summary := OrderedCollection new.
	
	account addTransactionsInSummary: summary.
		
	summary add: (self balanceMessage).
	
	^summary! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:42:51'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:42:51'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:42:51'!
FAILURE!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:42:51'!
FAILURE!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 19:44:15' prior: 50622911!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [	(aSummary add: ('Depósito = ', aTransaction value asString))].
		(aTransaction isKindOf: Withdraw) ifTrue: [	(aSummary add: ('Extracción = ', aTransaction value asString))]
		]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 19:44:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:44:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:44:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 19:44:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:44:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:44:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 19:44:16'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:44:18'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:44:18'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:44:18'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 19:44:33' prior: 50623069!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [	(aSummary add: ('Depósito = ', aTransaction value asString))].
		(aTransaction isKindOf: Withdraw) ifTrue: [	(aSummary add: ('Extracción = ', aTransaction value asString))]
	]! !
!AccountSummary methodsFor: 'messages' stamp: 'ic&vw 5/26/2023 19:46:00'!
depositMessageFor: anAmount

	^ 'Depósito = ', anAmount asString! !
!AccountSummary methodsFor: 'messages' stamp: 'ic&vw 5/26/2023 19:46:12'!
withdrawMessageFor: anAmount

	^ 'Extracción = ', anAmount asString! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 19:47:24' prior: 50623120!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [	(aSummary add: (aSummary depositMessageFor: aTransaction value))].
		(aTransaction isKindOf: Withdraw) ifTrue: [	(aSummary add: (aSummary withdrawMessageFor: aTransaction value))]
	]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 19:47:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:47:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:47:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 19:47:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:47:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:47:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 19:47:26'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:47:46'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:47:46'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:47:46'!
ERROR!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:47:49'!
ERROR!

Object subclass: #AccountSummary
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:49:59' prior: 50623045!
calculate
	
	! !

Object subclass: #AccountSummary
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 19:50:05'!
Object subclass: #AccountSummary
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:50:21' prior: 50623202!
calculate
	
	summary := OrderedCollection new.
	
	account addTransactionsInSummary: self.
		
	summary add: (self balanceMessage).
	
	^summary! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 19:52:05' prior: 50623143!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [	(aSummary summary add: (aSummary depositMessageFor: aTransaction value))].
		(aTransaction isKindOf: Withdraw) ifTrue: [	(aSummary summary add: (aSummary withdrawMessageFor: aTransaction value))]
	]! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:52:07'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:52:07'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:52:07'!
ERROR!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:52:09'!
ERROR!
!AccountSummary methodsFor: 'nil' stamp: 'ic&vw 5/26/2023 19:52:29'!
summary

	^summary! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:52:36'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:52:36'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:52:36'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 19:53:33' prior: 50623227!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [aSummary addDepositFor: aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [	(aSummary summary add: (aSummary withdrawMessageFor: aTransaction value))]
	]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 19:53:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:53:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:53:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 19:53:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:53:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:53:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 19:53:36'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:53:37'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:53:37'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:53:37'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:53:37'!
ERROR!
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:53:52'!
addDepositFor: aRenameMe1 
	self shouldBeImplemented.! !
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:54:21' prior: 50623323!
addDepositFor: anAmount 
	
	summary add: (self depositMessageFor: anAmount)
! !

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:54:22'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:54:24'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:54:26'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 19:54:43' prior: 50623269!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [aSummary addDepositFor: aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [	aSummary addDepositFor: aTransaction value]
	]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 19:54:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:54:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:54:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 19:54:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:54:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:54:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 19:54:44'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:54:46'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:54:46'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:54:46'!
FAILURE!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:54:46'!
FAILURE!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 19:55:02' prior: 50623345!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [aSummary addDepositFor: aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [	aSummary addWithdrawFor: aTransaction value]
	]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 19:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 19:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 19:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 19:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 19:55:04'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:55:06'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:55:06'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:55:06'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:55:06'!
ERROR!
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:55:10'!
addWithdrawFor: aRenameMe1 
	self shouldBeImplemented.! !
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:55:16' prior: 50623452!
addWithdrawFor: anAmount

! !

!methodRemoval: AccountSummary #summary stamp: 'ic&vw 5/26/2023 19:55:25'!
summary

	^summary!
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 19:55:43' prior: 50623457!
addWithdrawFor: anAmount

	summary add: (self withdrawMessageFor: anAmount)! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 19:55:48'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 19:55:48'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 19:55:48'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:56:53'!
test03AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Extracción = 100' with: 'Balance = -100') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:58:24' prior: 50623480!
test03AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderaccount |
	
	senderaccount := ReceptiveAccount new.
	Withdraw register: 100 on: senderaccount.
	
	accountSummary := AccountSummary for: senderaccount.
	
	self assert: (OrderedCollection with: 'Extracción = 100' with: 'Balance = -100') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 19:58:37' prior: 50623494!
test03AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount |
	
	senderAccount := ReceptiveAccount new.
	Withdraw register: 100 on: senderAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Extracción = 100' with: 'Balance = -100') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:03:08' prior: 50623509!
test03AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Withdraw register: 100 on: senderAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Extracción = 100' with: 'Balance = -100') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:03:44' prior: 50623524!
test03AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Extracción = 100' with: 'Balance = -100') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:04:12' prior: 50623540!
test03AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:04:19'!
test04AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100') equals: accountSummary calculate.! !

!methodRemoval: AccountSummaryTest #test03AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:04:19'!
test03AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100') equals: accountSummary calculate.!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:04:25' prior: 50622894!
test02AccountWithDepositHasDepositAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Depósito de 100' with: 'Balance = 100') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:04:29' prior: 50623006!
test03AccountWithWithdrawHasWithdrawAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Extracción de 100' with: 'Balance = -100') equals: accountSummary calculate.! !
!AccountSummary methodsFor: 'messages' stamp: 'ic&vw 5/26/2023 20:04:42' prior: 50623132!
depositMessageFor: anAmount

	^ 'Depósito de ', anAmount asString! !
!AccountSummary methodsFor: 'messages' stamp: 'ic&vw 5/26/2023 20:04:45' prior: 50623137!
withdrawMessageFor: anAmount

	^ 'Extracción de ', anAmount asString! !
!AccountSummary methodsFor: 'messages' stamp: 'ic&vw 5/26/2023 20:05:29'!
transferDepositMessageFor: anAmount

	^ 'Entrada por transferencia de ', anAmount asString! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:05:43' prior: 50623574!
test04AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Entrada por transferencia de 100' with: 'Balance = 100') equals: accountSummary calculate.! !

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:05:44'!
FAILURE!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:05:59' prior: 50623652!
test04AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: receiverAccount.
	
	self assert: (OrderedCollection with: 'Entrada por transferencia de 100' with: 'Balance = 100') equals: accountSummary calculate.! !

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:06:00'!
FAILURE!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:06:30' prior: 50623399!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [aSummary addDepositFor: aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [	aSummary addWithdrawFor: aTransaction value].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [	aSummary addWithdrawFor: aTransaction value]
	]! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:06:41' prior: 50623696!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [aSummary addDepositFor: aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [	aSummary addWithdrawFor: aTransaction value].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [	aSummary addTransferDepositFor: aTransaction value]
	]! !
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 20:07:06'!
addTransferDepositFor: anAmount 
	
	summary add: (self transferDepositMessageFor: anAmount)
! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 20:07:07'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 20:07:07'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:07:07'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:07:07'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:07:40'!
test05AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100') equals: accountSummary calculate.! !

!testRun: #AccountSummaryTest #test05AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:07:42'!
FAILURE!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:07:54'!
test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100') equals: accountSummary calculate.! !

!methodRemoval: AccountSummaryTest #test05AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:07:54'!
test05AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100') equals: accountSummary calculate.!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 20:07:58'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 20:07:58'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:07:58'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:07:58'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:07:58'!
FAILURE!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:07:58'!
FAILURE!
!AccountSummary methodsFor: 'messages' stamp: 'ic&vw 5/26/2023 20:08:12'!
transferWithdrawMessageFor: anAmount

	^ 'Salida por transferencia de ', anAmount asString! !
!AccountSummary methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 20:08:45'!
addTransferWithdrawFor: anAmount 
	
	summary add: (self transferWithdrawMessageFor: anAmount)
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:09:02' prior: 50623711!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [aSummary addDepositFor: aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [	aSummary addWithdrawFor: aTransaction value].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [	aSummary addTransferDepositFor: aTransaction value].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [	aSummary addTransferDepositFor: aTransaction value].
	]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 20:09:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 20:09:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 20:09:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 20:09:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 20:09:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 20:09:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 20:09:02'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 20:09:05'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 20:09:05'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:09:05'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:09:05'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:09:05'!
FAILURE!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:09:05'!
FAILURE!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:09:29'!
FAILURE!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:09:29'!
FAILURE!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:10:07' prior: 50623840!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [aSummary addDepositFor: aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [	aSummary addWithdrawFor: aTransaction value].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [	aSummary addTransferDepositFor: aTransaction value].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [	aSummary addTransferWithdrawFor: aTransaction value].
	]! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 20:10:08'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 20:10:08'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:10:08'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:10:08'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:10:08'!
PASSED!
!AccountTransaction methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:11:05'!
addTransactionInSummary: aSummary

	! !
!AccountTransaction methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:11:08' prior: 50623956!
addTransactionInSummary: aSummary

	self subclassResponsibility! !
!TransferTransaction methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:11:19' overrides: 50623961!
addTransactionInSummary: aSummary

	self subclassResponsibility! !
!Deposit methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:11:26' overrides: 50623961!
addTransactionInSummary: aSummary

	self subclassResponsibility! !
!Withdraw methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:11:38' overrides: 50623961!
addTransactionInSummary: aSummary

	self subclassResponsibility! !
!TransferDeposit methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:11:53' overrides: 50623967!
addTransactionInSummary: aSummary

	self subclassResponsibility! !
!TransferDeposit methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:11:57' prior: 50623983 overrides: 50623967!
addTransactionInSummary: aSummary

	self subclassResponsibility! !
!TransferWithdraw methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:12:08' overrides: 50623967!
addTransactionInSummary: aSummary

	self subclassResponsibility! !
!Deposit methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:13:23' prior: 50623972 overrides: 50623961!
addTransactionInSummary: aSummary

	aSummary addDepositFor: value! !
!Withdraw methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:13:43' prior: 50623977 overrides: 50623961!
addTransactionInSummary: aSummary

	aSummary addWithdrawFor: value! !
!TransferDeposit methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:14:05' prior: 50623989 overrides: 50623967!
addTransactionInSummary: aSummary

	aSummary addTransferDepositFor: self value! !
!TransferWithdraw methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:14:22' prior: 50623995 overrides: 50623967!
addTransactionInSummary: aSummary

	aSummary addTransferWithdrawFor: self value! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:14:46' prior: 50623918!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | aTransaction addTransactionInSummary: aSummary	]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 20:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 20:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 20:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 20:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 20:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 20:14:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 20:14:49'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 20:14:53'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 20:14:53'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:14:53'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:14:53'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:14:53'!
PASSED!

	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	Transfer register: 50 from: receiverAccount to: senderAccount.
	
	Deposit register: 20 on: senderAccount.
	Withdraw register: 12 on: senderAccount. 
	
	accountSummary := AccountSummary for: senderAccount.
	
	!

	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	Transfer register: 50 from: receiverAccount to: senderAccount.
	
	Deposit register: 20 on: senderAccount.
	Withdraw register: 12 on: senderAccount. 
	
	accountSummary := AccountSummary for: senderAccount.
	
	accountSummary calculate.!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:24:36'!
test06PortfolioWithAccountsShowTransferTwice

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:26:21' prior: 50624103!
test06PortfolioWithAccountsShowTransferTwice

	| accountSummary senderAccount receiverAccount portfolio |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
		
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:26:27' prior: 50624120!
test06PortfolioWithAccountsShowTransferTwice

	| accountSummary senderAccount receiverAccount portfolio |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: portfolio.
		
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100') equals: accountSummary calculate.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:26:37' prior: 50624139!
test06PortfolioWithAccountsShowTransferTwice

	| portfolioSummary senderAccount receiverAccount portfolio |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	portfolioSummary := AccountSummary for: portfolio.
		
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100') equals: portfolioSummary calculate.! !

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 20:26:49'!
ERROR!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 20:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 20:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 20:28:49'!
ERROR!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 20:28:49'!
ERROR!
!TransferTransaction class methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 20:29:14'!
registerOn: aTransfer

	^ self new initializeFor: aTransfer ! !

!methodRemoval: TransferDeposit class #registerOn: stamp: 'ic&vw 5/26/2023 20:29:17'!
registerOn: aTransfer

	^ self new initializeFor: aTransfer !

!methodRemoval: TransferWithdraw class #registerOn: stamp: 'ic&vw 5/26/2023 20:29:20'!
registerOn: aTransfer

	^ self new initializeFor: aTransfer !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 20:29:38'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 20:29:38'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:29:38'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:29:38'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:29:38'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 20:29:38'!
ERROR!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 20:29:38'!
ERROR!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:31:50' prior: 50624158!
test06PortfolioWithAccountsShowTransferTwice

	| portfolioSummary senderAccount receiverAccount portfolio |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	portfolioSummary := AccountSummary for: portfolio.
		
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100' with: 'Entrada por transferencia de 100' with: 'Balance = -100') 
	      equals: portfolioSummary calculate.! !

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 20:31:58'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/26/2023 20:32:05'!
addTransactionsInSummary: anAccountSummary 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 20:32:48' prior: 50624276!
addTransactionsInSummary: anAccountSummary 
	
	accounts do: [ :anAccount | anAccount addTransactionsInSummary: anAccountSummary ]! !

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/26/2023 20:33:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/26/2023 20:33:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/26/2023 20:33:03'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 20:33:11'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 20:33:11'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:33:11'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:33:11'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:33:11'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 20:33:11'!
FAILURE!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 20:33:11'!
FAILURE!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:39:26' prior: 50624251!
test06PortfolioWithAccountsShowTransferTwice

	| portfolioSummary senderAccount receiverAccount portfolio |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	portfolioSummary := AccountSummary for: portfolio.
		
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Entrada por transferencia de 100' with: 'Balance = -100') 
	      equals: portfolioSummary calculate.! !

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 20:39:26'!
FAILURE!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 20:39:49' prior: 50624329!
test06PortfolioWithAccountsShowTransferTwice

	| portfolioSummary senderAccount receiverAccount portfolio |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	portfolioSummary := AccountSummary for: portfolio.
		
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Entrada por transferencia de 100' with: 'Balance = 0') 
	      equals: portfolioSummary calculate.! !

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 20:39:50'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 20:39:50'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 20:39:50'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:39:50'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 20:39:50'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 20:39:50'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 20:39:50'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 21:32:52' prior: 50624354!
test06PortfolioWithAccountsShowTransferTwice

	| portfolioSummary senderAccount receiverAccount portfolio |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	portfolioSummary := AccountSummary for: portfolio.
		
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Entrada por transferencia de 100' with: 'Balance = 0') 
	      equals: portfolioSummary calculate.! !

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 21:32:53'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 21:32:53'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 21:32:53'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 21:32:53'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 21:32:53'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 21:32:53'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 21:32:53'!
PASSED!

TestCase subclass: #TransferNetTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetTest category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 21:46:26'!
TestCase subclass: #TransferNetTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 21:48:20'!
test01TransferNetForNewAccountReturnsZero

	! !

!classDefinition: #TransferNet category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 21:49:22'!
Object subclass: #TransferNet
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 21:49:18' prior: 50624462!
test01TransferNetForNewAccountReturnsZero

	| transferNet |
	transferNet := TransferNet for: ReceptiveAccount new.
	
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 21:49:46' prior: 50624474!
test01TransferNetForNewAccountReturnsZero

	| transferNet |
	
	transferNet := TransferNet for: ReceptiveAccount new.
	
	self assert: 0 equals: transferNet calculate.
	
	! !

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 21:50:11'!
ERROR!
!TransferNet class methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 21:50:20'!
for: aRenameMe1 
	self shouldBeImplemented.! !
!TransferNet class methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 21:50:43' prior: 50624493!
for: anAccount

	^self new initializeFor: anAccount! !

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 21:51:03'!
ERROR!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 21:51:03'!
ERROR!

!classDefinition: #TransferNet category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 21:51:10'!
Object subclass: #TransferNet
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNet methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 21:51:10'!
initializeFor: anAccount 
	self shouldBeImplemented.
	account := anAccount.! !
!TransferNet methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 21:51:13' prior: 50624517!
initializeFor: anAccount 
	
	account := anAccount.! !
!TransferNet methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 21:51:38'!
calculate

	^0! !

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 21:51:38'!
PASSED!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 21:52:04'!
test02TransferNetForAccountWithDepositTenIsTen

	| transferNet |
	
	transferNet := TransferNet for: ReceptiveAccount new.
	
	self assert: 0 equals: transferNet calculate.
	
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 21:52:29' prior: 50624534!
test02TransferNetForAccountWithDepositTenIsTen

	| transferNet account |
	
	account := ReceptiveAccount new.
	Deposit register: 10 on: account. 
	transferNet := TransferNet for: ReceptiveAccount new.
	
	self assert: 0 equals: transferNet calculate.
	
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 21:52:39' prior: 50624543!
test02TransferNetForAccountWithDepositTenIsTen

	| transferNet account |
	
	account := ReceptiveAccount new.
	Deposit register: 10 on: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 10 equals: transferNet calculate.
	
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 21:53:25' prior: 50624554!
test02TransferNetForAccountWithDepositTenIsTen

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: ReceptiveAccount new to: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 10 equals: transferNet calculate.
	
	! !

!testRun: #TransferNetTest #test02TransferNetForAccountWithDepositTenIsTen stamp: 'ic&vw 5/26/2023 21:53:26'!
FAILURE!
!TransferNet methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 21:53:43' prior: 50624527!
calculate

	^account balance.! !

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 21:53:44'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithDepositTenIsTen stamp: 'ic&vw 5/26/2023 21:53:44'!
PASSED!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 21:54:08'!
test02TransferNetForAccountWithTransferDepositTenIsTen

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: ReceptiveAccount new to: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 10 equals: transferNet calculate.
	
	! !

!methodRemoval: TransferNetTest #test02TransferNetForAccountWithDepositTenIsTen stamp: 'ic&vw 5/26/2023 21:54:08'!
test02TransferNetForAccountWithDepositTenIsTen

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: ReceptiveAccount new to: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 10 equals: transferNet calculate.
	
	!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 21:54:31'!
test03TransferNetForAccountWithDepositTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: ReceptiveAccount new to: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 10 equals: transferNet calculate.
	
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 21:54:52' prior: 50624616!
test03TransferNetForAccountWithDepositTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Deposit register: 10 on: account.
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet calculate.
	
	! !

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 21:54:53'!
FAILURE!

!classDefinition: #TransferNet category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 21:56:19'!
Object subclass: #TransferNet
	instanceVariableNames: 'account transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNet methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 21:56:16' prior: 50624581!
calculate

	transferNet := 0.
	
	account addTransactionsInTransferNet: self.
			
	^transferNet! !
!TransferNet methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 21:56:34' prior: 50624523!
initializeFor: anAccount 
	
	account := anAccount.
	transferNet := transferNet.! !
!TransferNet methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 21:56:36' prior: 50624657!
initializeFor: anAccount 
	
	account := anAccount.
	transferNet := 0.! !
!TransferNet methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 21:56:39' prior: 50624663!
initializeFor: anAccount 
	
	account := anAccount.
! !

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 21:56:46'!
ERROR!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 21:56:46'!
ERROR!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 21:56:46'!
ERROR!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 21:56:48'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 21:56:56'!
addTransactionsInTransferNet: aTransferNet 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:00:11' prior: 50624688!
addTransactionsInTransferNet: aTransferNet 
	
	transactions sum: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [0] ifFalse: [aTransaction value]
		
		]! !

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:00:13'!
ERROR!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:00:14'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:00:24'!
ERROR!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:00:24'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:01:23' prior: 50624694!
addTransactionsInTransferNet: aTransferNet 
	
	transactions sum: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [0] ifFalse: [aTransaction value]
		
	] ifEmpty: [0]! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:01:27' prior: 50624717!
addTransactionsInTransferNet: aTransferNet 
	
	transactions sum: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [0] ifFalse: [aTransaction value]
		
	] ifEmpty: []! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:02:14' prior: 50624726!
addTransactionsInTransferNet: aTransferNet 
	
	transactions sum: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [] ifFalse: [aTransferNet + aTransaction value]
		
	] ifEmpty: []! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 22:02:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 22:02:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 22:02:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 22:02:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 22:02:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 22:02:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 22:02:15'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:02:18'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:02:18'!
ERROR!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:02:18'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:02:18'!
ERROR!
!TransferNet methodsFor: 'nil' stamp: 'ic&vw 5/26/2023 22:04:35' overrides: 16902254!
value

	^transferNet ! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:04:47' prior: 50624735!
addTransactionsInTransferNet: aTransferNet 
	
	transactions sum: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [] ifFalse: [aTransferNet value + aTransaction value]
		
	] ifEmpty: []! !

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:04:51'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:04:53'!
FAILURE!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:04:53'!
FAILURE!
!TransferNet methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:05:37'!
addToTransferNet

	^transferNet ! !

!methodRemoval: TransferNet #value stamp: 'ic&vw 5/26/2023 22:05:37'!
value

	^transferNet !
!TransferNet methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:05:57'!
addToTransferNet: anAmount

	transferNet := transferNet + anAmount.! !

!methodRemoval: TransferNet #addToTransferNet stamp: 'ic&vw 5/26/2023 22:05:59'!
addToTransferNet

	^transferNet !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:06:22' prior: 50624790!
addTransactionsInTransferNet: aTransferNet 
	
	transactions sum: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [] ifFalse: [aTransferNet addToTransferNet: aTransaction value]
		
	] ifEmpty: []! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 22:06:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 22:06:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 22:06:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 22:06:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 22:06:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 22:06:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 22:06:23'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:06:27'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:06:27'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:06:27'!
PASSED!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 22:06:40'!
test03TransferNetForAccountWithTransferWithdrawTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Deposit register: 10 on: account.
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet calculate.
	
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 22:06:45'!
test04TransferNetForAccountWithTransferWithdrawTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Deposit register: 10 on: account.
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet calculate.
	
	! !

!methodRemoval: TransferNetTest #test03TransferNetForAccountWithTransferWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:06:45'!
test03TransferNetForAccountWithTransferWithdrawTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Deposit register: 10 on: account.
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet calculate.
	
	!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 22:07:04' prior: 50624886!
test04TransferNetForAccountWithTransferWithdrawTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: account to: ReceptiveAccount new. 
	
	transferNet := TransferNet for: account.
	
	self assert: -10 equals: transferNet calculate.
	! !

!testRun: #TransferNetTest #test04TransferNetForAccountWithTransferWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:07:04'!
FAILURE!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:07:28' prior: 50624827!
addTransactionsInTransferNet: aTransferNet 
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [] ifFalse: [aTransferNet addToTransferNet: aTransaction value]
		
	]! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 22:08:03'!
test05TransferNetForAccountWithTransferWithdrawTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: account to: ReceptiveAccount new. 
	
	transferNet := TransferNet for: account.
	
	self assert: -10 equals: transferNet calculate.
	! !

!methodRemoval: TransferNetTest #test04TransferNetForAccountWithTransferWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:08:04'!
test04TransferNetForAccountWithTransferWithdrawTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: account to: ReceptiveAccount new. 
	
	transferNet := TransferNet for: account.
	
	self assert: -10 equals: transferNet calculate.
	!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 22:08:31'!
test04TransferNetForAccountWithWithdrawTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Withdraw register: 10 on: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: -10 equals: transferNet calculate.
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 22:08:35' prior: 50624958!
test04TransferNetForAccountWithWithdrawTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Withdraw register: 10 on: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet calculate.
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 22:08:43'!
test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: account to: ReceptiveAccount new. 
	
	transferNet := TransferNet for: account.
	
	self assert: -10 equals: transferNet calculate.
	! !

!methodRemoval: TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:08:43'!
test05TransferNetForAccountWithTransferWithdrawTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: account to: ReceptiveAccount new. 
	
	transferNet := TransferNet for: account.
	
	self assert: -10 equals: transferNet calculate.
	!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:09:11' prior: 50624925!
addTransactionsInTransferNet: aTransferNet 
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [].
		(aTransaction isKindOf: Withdraw) ifTrue: [].
		aTransferNet addToTransferNet: aTransaction value.

	]
		
		
		
		
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:09:31' prior: 50625004!
addTransactionsInTransferNet: aTransferNet 
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [] ifFalse: [
			(aTransaction isKindOf: Withdraw) ifTrue: [] ifFalse: [			aTransferNet addToTransferNet: aTransaction value].
		]
	]
		
		
		
		
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 22:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 22:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 22:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 22:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 22:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 22:09:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 22:09:32'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:09:34'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:09:34'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:09:34'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:09:34'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:09:34'!
FAILURE!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:09:34'!
FAILURE!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:09:40'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:09:43'!
FAILURE!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:09:43'!
FAILURE!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:10:53' prior: 50625015!
addTransactionsInTransferNet: aTransferNet 
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [] ifFalse: [
			(aTransaction isKindOf: Withdraw) ifTrue: [] ifFalse: [			
				(aTransaction isKindOf: TransferWithdraw) ifTrue: [aTransferNet addToTransferNet: aTransaction value *-1] ifFalse: [aTransferNet addToTransferNet: aTransaction value]
			].
		]
	]
		
		
		
		
! !

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:10:55'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:10:55'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:10:55'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:10:55'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:10:55'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:14:13' prior: 50625090!
addTransactionsInTransferNet: aTransferNet 
	
	transactions do: [:aTransaction | 
		
		aTransaction affectTransferNet: aTransferNet
	
	]
		
		
		
		
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:14:20' prior: 50625125!
addTransactionsInTransferNet: aTransferNet 
	
	transactions do: [:aTransaction | aTransaction affectTransferNet: aTransferNet	]
		
		
		
		
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 22:14:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 22:14:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 22:14:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 22:14:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 22:14:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 22:14:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 22:14:21'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:14:24'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:14:24'!
ERROR!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:14:24'!
ERROR!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:14:24'!
ERROR!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:14:24'!
ERROR!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:14:25'!
ERROR!
!TransferDeposit methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:14:30'!
affectTransferNet: aTransferNet 
	self shouldBeImplemented.! !
!TransferDeposit methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:15:31' prior: 50625191!
affectTransferNet: aTransferNet 
	
	aTransferNet addDepositFor: self value.! !

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:15:33'!
ERROR!
!TransferNet methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:15:39'!
addDepositFor: aRenameMe1 
	self shouldBeImplemented.! !
!TransferNet methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:15:55' prior: 50625205!
addDepositFor: anAmount
	
	! !

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:15:57'!
FAILURE!
!TransferDeposit methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:16:15' prior: 50625196!
affectTransferNet: aTransferNet 
	
	aTransferNet addTransferDepositFor: self value.! !
!TransferNet methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:16:36'!
addTransferDepositFor: anAmount
	
	transferNet := transferNet + anAmount.! !

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:16:37'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:16:37'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:16:37'!
ERROR!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:16:37'!
ERROR!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:16:37'!
ERROR!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:16:38'!
ERROR!
!Deposit methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:16:44'!
affectTransferNet: aTransferNet 
	self shouldBeImplemented.! !
!Deposit methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:17:01' prior: 50625252!
affectTransferNet: aTransferNet 
	
	aTransferNet addDepositFor: value! !

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:17:02'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:17:03'!
ERROR!
!Withdraw methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:17:08'!
affectTransferNet: aTransferNet 
	self shouldBeImplemented.! !
!Withdraw methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:17:25' prior: 50625270!
affectTransferNet: aTransferNet 
	
	aTransferNet addWithdrawFor: value ! !

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:17:26'!
ERROR!
!TransferNet methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:17:29'!
addWithdrawFor: aValue 
	self shouldBeImplemented.! !
!TransferNet methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:17:32' prior: 50625284!
addWithdrawFor: aValue 
	! !
!TransferNet methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:17:35' prior: 50625289!
addWithdrawFor: anAmount 
	! !

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:17:36'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:17:37'!
ERROR!
!TransferWithdraw methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:17:41'!
affectTransferNet: aTransferNet 
	self shouldBeImplemented.! !
!TransferWithdraw methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:17:55' prior: 50625305!
affectTransferNet: aTransferNet 
	
	aTransferNet addTransferWithdrawFor: self value! !

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:17:57'!
ERROR!
!TransferNet methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:18:00'!
addTransferWithdrawFor: aRenameMe1 
	self shouldBeImplemented.! !
!TransferNet methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:18:15' prior: 50625320!
addTransferWithdrawFor: anAmount 
	
	transferNet := transferNet - anAmount! !

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:18:16'!
PASSED!

!methodRemoval: TransferNet #addToTransferNet: stamp: 'ic&vw 5/26/2023 22:18:28'!
addToTransferNet: anAmount

	transferNet := transferNet + anAmount.!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:18:34'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:18:34'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:18:34'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:18:34'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:18:34'!
PASSED!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 22:21:22'!
test06TransferNetForPortfolioWithTwoTransferAccountsIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: account to: ReceptiveAccount new. 
	
	transferNet := TransferNet for: account.
	
	self assert: -10 equals: transferNet calculate.
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 22:21:59' prior: 50625359!
test06TransferNetForPortfolioWithTwoTransferAccountsIsZero

	| senderAccount receiverAccount portfolio transferNet |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	transferNet := TransferNet for: portfolio.
	
	self assert: -10 equals: transferNet calculate.
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/26/2023 22:22:07' prior: 50625371!
test06TransferNetForPortfolioWithTwoTransferAccountsIsZero

	| senderAccount receiverAccount portfolio transferNet |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	transferNet := TransferNet for: portfolio.
	
	self assert: 0 equals: transferNet calculate.
	! !

!testRun: #TransferNetTest #test06TransferNetForPortfolioWithTwoTransferAccountsIsZero stamp: 'ic&vw 5/26/2023 22:22:07'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:22:14'!
addTransactionsInTransferNet: aTransferNet 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:22:34' prior: 50625408!
addTransactionsInTransferNet: aTransferNet 
	
	accounts do: [:account | account addTransactionsInTransferNet: aTransferNet]! !

!testRun: #TransferNetTest #test06TransferNetForPortfolioWithTwoTransferAccountsIsZero stamp: 'ic&vw 5/26/2023 22:22:37'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:22:37'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:22:37'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:22:37'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:22:37'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:22:37'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetForPortfolioWithTwoTransferAccountsIsZero stamp: 'ic&vw 5/26/2023 22:22:37'!
PASSED!
!Account methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:23:14'!
addTransactionsInSummary: aSummary

	self subclassResponsibility ! !
!Account methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:23:24'!
addTransactionsInTransferNet: aTransferNet 

	self subclassResponsibility ! !

Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Report category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 22:24:19'!
Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTransaction methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:24:47'!
affectTransferNet: aTransferNet 

	self subclassResponsibility! !
!TransferTransaction methodsFor: 'transactions' stamp: 'ic&vw 5/26/2023 22:24:51' overrides: 50625470!
affectTransferNet: aTransferNet 

	self subclassResponsibility! !

Report subclass: #TransferNet
	instanceVariableNames: 'account transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNet category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 22:25:02'!
Report subclass: #TransferNet
	instanceVariableNames: 'account transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #AccountSummary
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 22:25:10'!
Report subclass: #AccountSummary
	instanceVariableNames: 'account summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #AccountSummary
	instanceVariableNames: 'summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 22:25:13'!
Report subclass: #AccountSummary
	instanceVariableNames: 'summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #TransferNet
	instanceVariableNames: 'transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNet category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 22:25:17'!
Report subclass: #TransferNet
	instanceVariableNames: 'transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Report category: 'Portfolio-Solucion' stamp: 'ic&vw 5/26/2023 22:25:21'!
Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRenamed: #Report as: #AccountReport stamp: 'ic&vw 5/26/2023 22:25:27'!
Smalltalk renameClassNamed: #Report as: #AccountReport!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/26/2023 22:25:32'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:25:34'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:25:34'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:25:34'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:25:34'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:25:34'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetForPortfolioWithTwoTransferAccountsIsZero stamp: 'ic&vw 5/26/2023 22:25:34'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 22:25:38'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 22:25:38'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 22:25:38'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 22:25:38'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 22:25:38'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 22:25:38'!
PASSED!
!AccountReport methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 22:26:21'!
initializeFor: anAccount 
	
	account := anAccount.
! !

!methodRemoval: TransferNet #initializeFor: stamp: 'ic&vw 5/26/2023 22:26:22'!
initializeFor: anAccount 
	
	account := anAccount.
!

!methodRemoval: AccountSummary #initializeFor: stamp: 'ic&vw 5/26/2023 22:26:28'!
initializeFor: anAccount 
	
	account := anAccount.!
!AccountReport class methodsFor: 'initialization' stamp: 'ic&vw 5/26/2023 22:26:43'!
for: anAccount 
	
	^self new initializeFor: anAccount! !

!methodRemoval: AccountSummary class #for: stamp: 'ic&vw 5/26/2023 22:26:43'!
for: anAccount 
	
	^self new initializeFor: anAccount!

!methodRemoval: TransferNet class #for: stamp: 'ic&vw 5/26/2023 22:26:47'!
for: anAccount

	^self new initializeFor: anAccount!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:26:56'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:26:56'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:26:56'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:26:56'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:26:56'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetForPortfolioWithTwoTransferAccountsIsZero stamp: 'ic&vw 5/26/2023 22:26:56'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 22:26:59'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 22:26:59'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 22:26:59'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 22:26:59'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 22:26:59'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 22:26:59'!
PASSED!
!AccountReport methodsFor: 'calculate' stamp: 'ic&vw 5/26/2023 22:27:39'!
calculate
	
	self subclassResponsibility! !
!AccountReport methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:28:16'!
addDepositFor: anAmount 

	self subclassResponsibility! !
!AccountReport methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:28:28'!
addTransferDepositFor: anAmount 
	
	self subclassResponsibility
! !
!AccountReport methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:28:39'!
addTransferWithdrawFor: anAmount 
	
	self subclassResponsibility! !
!AccountReport methodsFor: 'calculate - private' stamp: 'ic&vw 5/26/2023 22:28:59'!
addWithdrawFor: anAmount

	self subclassResponsibility! !

----SNAPSHOT----(26 May 2023 22:29:36) CuisUniversity-5799.image priorSource: 9307661!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetForPortfolioWithTwoTransferAccountsIsZero stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

!testRun: #TransferTest #test05CanNavigateFromDepositLegToWithdrawLeg stamp: 'ic&vw 5/26/2023 22:29:49'!
PASSED!

TestCase subclass: #PortfolioTreeStructureTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioTreeStructureTest category: 'Portfolio-Solucion' stamp: 'ic&vw 5/27/2023 12:58:29'!
TestCase subclass: #PortfolioTreeStructureTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:01:11'!
test01PrintPortfolioNameInEmptyPortfolio

	| childrenPortfolio |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.! !
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:02:13' prior: 50625917!
test01PrintPortfolioNameInEmptyPortfolio

	| childrenPortfolio |
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: childrenPortfolio asTree! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:02:19'!
ERROR!
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:03:50'!
named: aRenameMe1 
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:04:09' prior: 50625939!
named: aName 
	self new initializedWithName: aName! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:04:12'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'ic&vw 5/27/2023 13:04:18'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:04:18'!
initializedWithName: aName 
	self shouldBeImplemented.
	name := aName.! !
!Portfolio methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:04:22' prior: 50625960!
initializedWithName: aName 

	name := aName.! !
!Portfolio methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:05:26'!
initializeWithName: aName 

	name := aName.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/27/2023 13:05:26' prior: 50625944!
named: aName 
	self new initializeWithName: aName! !

!methodRemoval: Portfolio #initializedWithName: stamp: 'ic&vw 5/27/2023 13:05:26'!
initializedWithName: aName 

	name := aName.!
!Portfolio methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:06:19' prior: 50625970!
initializeWithName: aName 

	name := aName.
	self initialize.! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:08:20'!
ERROR!

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:08:20'!
ERROR!
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:08:35' prior: 50625975!
named: aName 
	
	^self new initializeWithName: aName! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/27/2023 13:08:37'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:08:40'!
ERROR!

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:08:40'!
ERROR!
!Portfolio methodsFor: 'printing' stamp: 'ic&vw 5/27/2023 13:08:53'!
asTree
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'printing' stamp: 'ic&vw 5/27/2023 13:09:04' prior: 50626068!
asTree
	
	^self name! !
!Portfolio methodsFor: 'printing' stamp: 'ic&vw 5/27/2023 13:09:28' prior: 50626072!
asTree
	
	^OrderedCollection with: name! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/27/2023 13:09:29'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:09:34'!
PASSED!
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:10:08'!
test02PrintPortfolioNameAndAccountWithOneIdentation

	| childrenPortfolio |
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: childrenPortfolio asTree! !
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:11:06' prior: 50626143!
test02PrintPortfolioNameAndAccountWithOneIdentation

	| childrenPortfolio johnsAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: childrenPortfolio asTree! !
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:12:25' prior: 50626154!
test02PrintPortfolioNameAndAccountWithOneIdentation

	| childrenPortfolio johnsAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (Character tab asString, 'Cuenta de Juan'	)) equals: childrenPortfolio asTree! !

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:12:37'!
ERROR!
!ReceptiveAccount class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:12:48'!
named: aRenameMe1 
	self shouldBeImplemented.! !
!ReceptiveAccount class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:13:05' prior: 50626187!
named: aName 
	
	^self new initializeWithName: aName! !

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:13:06'!
ERROR!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'ic&vw 5/27/2023 13:13:15'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:13:15'!
initializeWithName: aName 
	self shouldBeImplemented.
	name := aName.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:13:19' prior: 50626209!
initializeWithName: aName 
	name := aName.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:13:41' prior: 50626215!
initializeWithName: aName 

	name := aName.
	self initialize.! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:14:09'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:14:09'!
ERROR!

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:14:09'!
ERROR!
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:14:18'!
named: aRenameMe1 with: johnsAccount 
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:14:31' prior: 50626237!
named: aName with: anAccount 

	! !
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:15:48' prior: 50626243!
named: aName with: anAccount 

	^self named: aName; add: anAccount; yourself.! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:15:51'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:15:51'!
ERROR!

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:15:51'!
ERROR!
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:16:06' prior: 50626248!
named: aName with: anAccount 

	^self named: aName; add: anAccount; yourself.! !
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:16:48' prior: 50626266!
named: aName with: anAccount 

	^self named: aName
			add: anAccount; yourself.! !
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:17:02' prior: 50626272!
named: aName with: anAccount 

	^(self named: aName)
			add: anAccount; yourself.! !
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:17:05' prior: 50626278!
named: aName with: anAccount 

	^(self named: aName) add: anAccount; yourself.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/27/2023 13:17:05'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/27/2023 13:17:05'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/27/2023 13:17:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/27/2023 13:17:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/27/2023 13:17:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/27/2023 13:17:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/27/2023 13:17:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/27/2023 13:17:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/27/2023 13:17:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/27/2023 13:17:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/27/2023 13:17:06'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/27/2023 13:17:06'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/27/2023 13:17:06'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/27/2023 13:17:06'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/27/2023 13:17:06'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:17:09'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:17:09'!
FAILURE!

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:17:09'!
FAILURE!
!Portfolio methodsFor: 'printing' stamp: 'ic&vw 5/27/2023 13:18:25' prior: 50626076!
asTree
	
	| tree |
	tree := OrderedCollection with: name.
	accounts size = 1 ifTrue: [].
! !
!Portfolio methodsFor: 'printing' stamp: 'ic&vw 5/27/2023 13:18:52' prior: 50626361!
asTree
	
	| tree |
	tree := OrderedCollection with: name.
	accounts size = 1 ifTrue: [
			tree add: (Character tab asString, accounts first name)
		].
! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/27/2023 13:18:54'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:18:59'!
FAILURE!

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:18:59'!
FAILURE!
!Portfolio methodsFor: 'printing' stamp: 'ic&vw 5/27/2023 13:19:17' prior: 50626367!
asTree
	
	| tree |
	tree := OrderedCollection with: name.
	accounts size = 1 ifTrue: [
			tree add: (Character tab asString, accounts first name)
		].

	^tree! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:19:19'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:19:19'!
FAILURE!

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:19:20'!
FAILURE!
!ReceptiveAccount methodsFor: 'composition' stamp: 'ic&vw 5/27/2023 13:20:08'!
addNameIn: treePortfolioStructure

	 
	
	! !
!ReceptiveAccount methodsFor: 'composition' stamp: 'ic&vw 5/27/2023 13:20:27'!
addNameInTreeStructure: aTreeStructure

	 
	
	! !

!methodRemoval: ReceptiveAccount #addNameIn: stamp: 'ic&vw 5/27/2023 13:20:31'!
addNameIn: treePortfolioStructure

	 
	
	!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'ic&vw 5/27/2023 13:21:26'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name tree2'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:21:25'!
addToTree: aName
	
	tree2 add: (Character tab asString, accounts first name)
! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:21:32' prior: 50626482!
addToTree: aName
	
	tree2 add: (Character tab asString, aName)
! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:21:42' prior: 50626442!
asTree
	
	| tree3 |
	tree3 := OrderedCollection with: name.
	accounts size = 1 ifTrue: [
			tree3 add: (Character tab asString, accounts first name)
		].

	^tree3! !

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'ic&vw 5/27/2023 13:21:46'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/27/2023 13:21:46' prior: 50626488!
addToTree: aName
	
	tree add: (Character tab asString, aName)
! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:22:06' prior: 50626493!
asTree
	
	tree := OrderedCollection with: name.
	accounts size = 1 ifTrue: [
			tree add: (Character tab asString, accounts first name)
		].

	^tree! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:22:38' prior: 50626515!
asTree
	
	tree := OrderedCollection with: name.
	accounts size = 1 ifTrue: [
			accounts first addNameInTreeStructure: self.
		].

	^tree! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:22:56' prior: 50626523!
asTree
	
	tree := OrderedCollection with: name.
	accounts size = 1 ifTrue: [
			accounts first addNameInTreeFormatInPortfolio: self.
		].

	^tree! !
!ReceptiveAccount methodsFor: 'composition' stamp: 'ic&vw 5/27/2023 13:23:20'!
addNameInTreeFormatInPortfolio: aTreeStructure

	 
	
	! !

!methodRemoval: ReceptiveAccount #addNameInTreeStructure: stamp: 'ic&vw 5/27/2023 13:23:20'!
addNameInTreeStructure: aTreeStructure

	 
	
	!
!ReceptiveAccount methodsFor: 'composition' stamp: 'ic&vw 5/27/2023 13:23:35' prior: 50626538!
addNameInTreeFormatInPortfolio: aPortfolio

	aPortfolio addToTree: name.

	 
	
	! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:23:39'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:23:39'!
PASSED!
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:24:38'!
test03PrintPortfolioWithAccountInPortfolioWithTheRightIdentation

	| childrenPortfolio johnsAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (Character tab asString, 'Cuenta de Juan'	)) equals: childrenPortfolio asTree! !
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:24:51' prior: 50626562!
test03PrintPortfolioWithAccountInPortfolioWithTheRightIdentation

	| childrenPortfolio johnsAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (Character tab asString, 'Cuenta de Juan'	)) equals: childrenPortfolio asTree! !
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:24:59'!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIdentation

	| childrenPortfolio johnsAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (Character tab asString, 'Cuenta de Juan'	)) equals: childrenPortfolio asTree! !

!methodRemoval: PortfolioTreeStructureTest #test03PrintPortfolioWithAccountInPortfolioWithTheRightIdentation stamp: 'ic&vw 5/27/2023 13:24:59'!
test03PrintPortfolioWithAccountInPortfolioWithTheRightIdentation

	| childrenPortfolio johnsAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (Character tab asString, 'Cuenta de Juan'	)) equals: childrenPortfolio asTree!
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:25:15'!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIdentation

	| childrenPortfolio johnsAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (Character tab asString, 'Cuenta de Juan'	)) equals: childrenPortfolio asTree! !
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:25:31' prior: 50626625!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIdentation

	| childrenPortfolio johnsAccount angiesAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount  := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (Character tab asString, 'Cuenta de Juan'	)) equals: childrenPortfolio asTree! !
!PortfolioTreeStructureTest methodsFor: 'formating' stamp: 'ic&vw 5/27/2023 13:26:31'!
formatWithOneIdentation: aStringToFormat

	^Character tab asString, aStringToFormat! !
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:26:48' prior: 50626168!
test02PrintPortfolioNameAndAccountWithOneIdentation

	| childrenPortfolio johnsAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIdentation: 'Cuenta de Juan'	)) equals: childrenPortfolio asTree! !

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:26:54'!
PASSED!
!PortfolioTreeStructureTest methodsFor: 'formating' stamp: 'ic&vw 5/27/2023 13:28:51'!
format: aStringToFormat withIdentations: anAmountOfIdentations

	anAmountOfIdentations = 0 ifTrue: [^aStringToFormat].
	^self format: (Character tab asString, aStringToFormat) withIdentations: anAmountOfIdentations-1! !
!PortfolioTreeStructureTest methodsFor: 'formating' stamp: 'ic&vw 5/27/2023 13:29:11' prior: 50626659!
formatWithOneIdentation: aStringToFormat

	^self format: aStringToFormat withIdentations: 1 ! !

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:29:14'!
PASSED!
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:29:55' prior: 50626641!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIdentation

	| childrenPortfolio johnsAccount angiesAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount  := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIdentation: 'Cuenta de Juan'	) with: (self formatWithOneIdentation: 'Cuenta de Angeles'	)) 
	      equals: childrenPortfolio asTree! !
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:30:04' prior: 50626707!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIdentation

	| childrenPortfolio johnsAccount angiesAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount  := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIdentation: 'Cuenta de Juan'	) with: (self formatWithOneIdentation: 'Cuenta de Angeles'	)) 
	      equals: childrenPortfolio asTree! !

!testRun: #PortfolioTreeStructureTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:30:07'!
ERROR!
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:30:12'!
named: aRenameMe1 with: johnsAccount with: angiesAccount 
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:30:23' prior: 50626753!
named: aName with: anAccount with: anotherAccount 
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:30:51' prior: 50626759!
named: aName with: anAccount with: anotherAccount 
	
	^(self named: aName) add: anAccount; add: anotherAccount; yourself.! !
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:31:07' prior: 50626765!
named: aName with: anAccount with: anotherAccount 
	
	^(self named: aName with: anAccount) add: anotherAccount; yourself.! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:31:12'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:31:12'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:31:12'!
FAILURE!

!testRun: #PortfolioTreeStructureTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIdentation stamp: 'ic&vw 5/27/2023 13:31:12'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:31:12'!
FAILURE!
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:31:47' prior: 50626530!
asTree
	
	tree := OrderedCollection with: name.
	accounts do: [:anAccount |  anAccount addNameInTreeFormatInPortfolio: self].

	^tree! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:31:50'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:31:50'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:31:50'!
PASSED!

!testRun: #PortfolioTreeStructureTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIdentation stamp: 'ic&vw 5/27/2023 13:31:50'!
PASSED!
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:32:28' prior: 50626593!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIdentation

	| childrenPortfolio johnsAccount familyPortfolio |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (Character tab asString, 'Cuenta de Juan'	)) equals: childrenPortfolio asTree! !
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:33:01' prior: 50626826!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIdentation

	| childrenPortfolio johnsAccount familyPortfolio |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIdentation: 'Portfolio de hijos'	) with: (self formatWithOneIdentation: 'Cuenta de Angeles'	)) 
	      equals: childrenPortfolio asTree! !
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:33:07' prior: 50626845!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIdentation

	| childrenPortfolio johnsAccount familyPortfolio |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIdentation: 'Portfolio de hijos'	) with: (self formatWithOneIdentation: 'Cuenta de Angeles'	)) 
	      equals: familyPortfolio asTree! !
!PortfolioTreeStructureTest methodsFor: 'formating' stamp: 'ic&vw 5/27/2023 13:33:16'!
formatWithTwoIdentation: aStringToFormat

	^self format: aStringToFormat withIdentations: 2 ! !
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:33:31' prior: 50626867!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIdentation

	| childrenPortfolio johnsAccount familyPortfolio |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIdentation: 'Portfolio de hijos'	) with: (self formatWithTwoIdentation: 'Cuenta de Juan'	)) 
	      equals: familyPortfolio asTree! !

!testRun: #PortfolioTreeStructureTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIdentation stamp: 'ic&vw 5/27/2023 13:33:31'!
ERROR!
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:33:39'!
addNameInTreeFormatInPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:33:46' prior: 50626920!
addNameInTreeFormatInPortfolio: aPortfolio 
	
	! !

!testRun: #PortfolioTreeStructureTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIdentation stamp: 'ic&vw 5/27/2023 13:33:49'!
FAILURE!

!testRun: #PortfolioTreeStructureTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIdentation stamp: 'ic&vw 5/27/2023 13:33:49'!
FAILURE!
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:34:31'!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIdentation: 'Portfolio de hijos'	) with: (self formatWithTwoIdentation: 'Cuenta de Juan'	)) 
	      equals: familyPortfolio asTree! !

!methodRemoval: PortfolioTreeStructureTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIdentation stamp: 'ic&vw 5/27/2023 13:34:31'!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIdentation

	| childrenPortfolio johnsAccount familyPortfolio |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIdentation: 'Portfolio de hijos'	) with: (self formatWithTwoIdentation: 'Cuenta de Juan'	)) 
	      equals: familyPortfolio asTree!
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:34:36'!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation

	| childrenPortfolio johnsAccount angiesAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount  := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIdentation: 'Cuenta de Juan'	) with: (self formatWithOneIdentation: 'Cuenta de Angeles'	)) 
	      equals: childrenPortfolio asTree! !

!methodRemoval: PortfolioTreeStructureTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:34:36'!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIdentation

	| childrenPortfolio johnsAccount angiesAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount  := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIdentation: 'Cuenta de Juan'	) with: (self formatWithOneIdentation: 'Cuenta de Angeles'	)) 
	      equals: childrenPortfolio asTree!
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:34:39'!
test02PrintPortfolioNameAndAccountWithOneIndentation

	| childrenPortfolio johnsAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIdentation: 'Cuenta de Juan'	)) equals: childrenPortfolio asTree! !

!methodRemoval: PortfolioTreeStructureTest #test02PrintPortfolioNameAndAccountWithOneIdentation stamp: 'ic&vw 5/27/2023 13:34:40'!
test02PrintPortfolioNameAndAccountWithOneIdentation

	| childrenPortfolio johnsAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIdentation: 'Cuenta de Juan'	)) equals: childrenPortfolio asTree!
!PortfolioTreeStructureTest methodsFor: 'formating' stamp: 'ic&vw 5/27/2023 13:34:51'!
format: aStringToFormat withIndentations: anAmountOfIdentations

	anAmountOfIdentations = 0 ifTrue: [^aStringToFormat].
	^self format: (Character tab asString, aStringToFormat) withIdentations: anAmountOfIdentations-1! !
!PortfolioTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/27/2023 13:34:51' prior: 50626888!
formatWithTwoIdentation: aStringToFormat

	^self format: aStringToFormat withIndentations: 2 ! !
!PortfolioTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/27/2023 13:34:52' prior: 50626685!
format: aStringToFormat withIdentations: anAmountOfIdentations

	anAmountOfIdentations = 0 ifTrue: [^aStringToFormat].
	^self format: (Character tab asString, aStringToFormat) withIndentations: anAmountOfIdentations-1! !
!PortfolioTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/27/2023 13:34:52' prior: 50626696!
formatWithOneIdentation: aStringToFormat

	^self format: aStringToFormat withIndentations: 1 ! !
!PortfolioTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/27/2023 13:34:52' prior: 50627057!
format: aStringToFormat withIndentations: anAmountOfIdentations

	anAmountOfIdentations = 0 ifTrue: [^aStringToFormat].
	^self format: (Character tab asString, aStringToFormat) withIndentations: anAmountOfIdentations-1! !

!methodRemoval: PortfolioTreeStructureTest #format:withIdentations: stamp: 'ic&vw 5/27/2023 13:34:52'!
format: aStringToFormat withIdentations: anAmountOfIdentations

	anAmountOfIdentations = 0 ifTrue: [^aStringToFormat].
	^self format: (Character tab asString, aStringToFormat) withIndentations: anAmountOfIdentations-1!
!PortfolioTreeStructureTest methodsFor: 'formating' stamp: 'ic&vw 5/27/2023 13:34:59'!
formatWithOneIndentation: aStringToFormat

	^self format: aStringToFormat withIndentations: 1 ! !
!PortfolioTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/27/2023 13:34:59' prior: 50626982!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation

	| childrenPortfolio johnsAccount angiesAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount  := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIndentation: 'Cuenta de Juan'	) with: (self formatWithOneIndentation: 'Cuenta de Angeles'	)) 
	      equals: childrenPortfolio asTree! !
!PortfolioTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/27/2023 13:34:59' prior: 50626939!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIndentation: 'Portfolio de hijos'	) with: (self formatWithTwoIdentation: 'Cuenta de Juan'	)) 
	      equals: familyPortfolio asTree! !
!PortfolioTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/27/2023 13:34:59' prior: 50627025!
test02PrintPortfolioNameAndAccountWithOneIndentation

	| childrenPortfolio johnsAccount |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIndentation: 'Cuenta de Juan'	)) equals: childrenPortfolio asTree! !

!methodRemoval: PortfolioTreeStructureTest #formatWithOneIdentation: stamp: 'ic&vw 5/27/2023 13:34:59'!
formatWithOneIdentation: aStringToFormat

	^self format: aStringToFormat withIndentations: 1 !
!PortfolioTreeStructureTest methodsFor: 'formating' stamp: 'ic&vw 5/27/2023 13:35:07'!
formatWithTwoIndentations: aStringToFormat

	^self format: aStringToFormat withIndentations: 2 ! !
!PortfolioTreeStructureTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/27/2023 13:35:07' prior: 50627142!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIndentation: 'Portfolio de hijos'	) with: (self formatWithTwoIndentations: 'Cuenta de Juan'	)) 
	      equals: familyPortfolio asTree! !

!methodRemoval: PortfolioTreeStructureTest #formatWithTwoIdentation: stamp: 'ic&vw 5/27/2023 13:35:07'!
formatWithTwoIdentation: aStringToFormat

	^self format: aStringToFormat withIndentations: 2 !

!testRun: #PortfolioTreeStructureTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:35:11'!
PASSED!

!classDefinition: #PortfolioTreeFormat category: 'Portfolio-Solucion' stamp: 'ic&vw 5/27/2023 13:39:41'!
Object subclass: #PortfolioTreeFormat
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:39:38' prior: 50625925!
test01PrintPortfolioNameInEmptyPortfolio

	| childrenPortfolio |
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: (PortfolioTreeFormat on: childrenPortfolio)! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:39:44'!
ERROR!
!PortfolioTreeFormat class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:39:54'!
on: childrenPortfolio 
	self shouldBeImplemented.! !
!PortfolioTreeFormat class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:40:12' prior: 50627248!
on: aPortfolio 
	
	^self new initializeOn: aPortfolio.! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:40:14'!
ERROR!

!classDefinition: #PortfolioTreeFormat category: 'Portfolio-Solucion' stamp: 'ic&vw 5/27/2023 13:40:19'!
Object subclass: #PortfolioTreeFormat
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioTreeFormat methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:40:19'!
initializeOn: aPortfolio 
	self shouldBeImplemented.
	portfolio := aPortfolio.! !
!PortfolioTreeFormat methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 13:40:24' prior: 50627270!
initializeOn: aPortfolio 
	
	portfolio := aPortfolio.! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:40:25'!
FAILURE!
!PortfolioTreeStructureTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:40:48' prior: 50627233!
test01PrintPortfolioNameInEmptyPortfolio

	| childrenPortfolio treeFormat |
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	treeFormat := PortfolioTreeFormat on: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: (treeFormat calculate).! !

!testRun: #PortfolioTreeStructureTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:40:51'!
ERROR!
!PortfolioTreeFormat methodsFor: 'calculate' stamp: 'ic&vw 5/27/2023 13:40:56'!
calculate
	self shouldBeImplemented.! !

!classDefinition: #PortfolioTreeFormat category: 'Portfolio-Solucion' stamp: 'ic&vw 5/27/2023 13:41:18'!
Object subclass: #PortfolioTreeFormat
	instanceVariableNames: 'portfolio tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioTreeFormat methodsFor: 'calculate' stamp: 'ic&vw 5/27/2023 13:41:17' prior: 50627301!
calculate
	
	tree := OrderedCollection new.
	! !
!PortfolioTreeFormat methodsFor: 'calculate' stamp: 'ic&vw 5/27/2023 13:41:29' prior: 50627314!
calculate
	
	tree := OrderedCollection new.
	
	! !

!classRenamed: #PortfolioTreeStructureTest as: #PortfolioTreeFormatTest stamp: 'ic&vw 5/27/2023 13:42:17'!
Smalltalk renameClassNamed: #PortfolioTreeStructureTest as: #PortfolioTreeFormatTest!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:42:20'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:42:20'!
FAILURE!
!PortfolioTreeFormat methodsFor: 'calculate' stamp: 'ic&vw 5/27/2023 13:43:10' prior: 50627319!
calculate
	
	tree := OrderedCollection new.
	
	portfolio addNameInTree: self.
	
	^tree
	! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:43:53'!
addNameInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addToTree: name
	
	! !

!methodRemoval: Portfolio #addToTree: stamp: 'ic&vw 5/27/2023 13:44:03'!
addToTree: aName
	
	tree add: (Character tab asString, aName)
!

!methodRemoval: Portfolio #addNameInTreeFormatInPortfolio: stamp: 'ic&vw 5/27/2023 13:44:11'!
addNameInTreeFormatInPortfolio: aPortfolio 
	
	!
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:44:48'!
addName: aName

	tree add: aName! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:44:58' prior: 50627343!
addNameInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addName: name
	
	! !

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:45:02'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:45:03'!
ERROR!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:45:03'!
ERROR!

Object subclass: #PortfolioTreeFormat
	instanceVariableNames: 'portfolio tree indents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioTreeFormat category: 'Portfolio-Solucion' stamp: 'ic&vw 5/27/2023 13:45:43'!
Object subclass: #PortfolioTreeFormat
	instanceVariableNames: 'portfolio tree indents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioTreeFormat methodsFor: 'calculate' stamp: 'ic&vw 5/27/2023 13:45:55' prior: 50627338!
calculate
	
	tree := OrderedCollection new.
	indents := 0.
	
	portfolio addNameInTree: self.
	
	^tree
	! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:46:18' prior: 50627358!
addName: aName

	tree add: aName.
	indents := indents +1.! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:47:14' prior: 50627401!
addName: aName

	tree add: aName.
	indents := Character tab asString, indents.! !
!PortfolioTreeFormat methodsFor: 'calculate' stamp: 'ic&vw 5/27/2023 13:47:24' prior: 50627394!
calculate
	
	tree := OrderedCollection new.
	indents := ''.
	
	portfolio addNameInTree: self.
	
	^tree
	! !

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:47:32'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:47:32'!
ERROR!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:47:32'!
ERROR!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 13:47:32'!
ERROR!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:47:33'!
ERROR!

!methodRemoval: Portfolio #asTree stamp: 'ic&vw 5/27/2023 13:47:50'!
asTree
	
	tree := OrderedCollection with: name.
	accounts do: [:anAccount |  anAccount addNameInTreeFormatInPortfolio: self].

	^tree!
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:48:16' prior: 50627362!
addNameInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addName: name.
	accounts do: [:anAccount |  anAccount addName: aPortfolioTreeFormat].
	
	! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:48:24' prior: 50627447!
addNameInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addName: name.
	accounts do: [:anAccount |  anAccount addNameInTree: aPortfolioTreeFormat].
	
	! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:48:58' prior: 50627455!
addNameInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addNameAsPortfolio: name.
	accounts do: [:anAccount |  anAccount addNameInTree: aPortfolioTreeFormat].
	
	! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:49:18'!
addNameAsPortfolio: aName

	tree add: aName.
	indents := Character tab asString, indents.! !

!methodRemoval: PortfolioTreeFormat #addName: stamp: 'ic&vw 5/27/2023 13:49:18'!
addName: aName

	tree add: aName.
	indents := Character tab asString, indents.!
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:49:24' prior: 50627472!
addNameAsPortfolio: aPortfolioName

	tree add: aPortfolioName.
	indents := Character tab asString, indents.! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:49:51'!
addNameAsReceptiveAccount: aReceptiveAccountName

	tree add: aReceptiveAccountName.
! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:50:02'!
addPortfolioName: aPortfolioName

	tree add: aPortfolioName.
	indents := Character tab asString, indents.! !

!methodRemoval: PortfolioTreeFormat #addNameAsPortfolio: stamp: 'ic&vw 5/27/2023 13:50:02'!
addNameAsPortfolio: aPortfolioName

	tree add: aPortfolioName.
	indents := Character tab asString, indents.!
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:50:11'!
addReceptiveAccountName: aReceptiveAccountName

	tree add: aReceptiveAccountName.
! !

!methodRemoval: PortfolioTreeFormat #addNameAsReceptiveAccount: stamp: 'ic&vw 5/27/2023 13:50:11'!
addNameAsReceptiveAccount: aReceptiveAccountName

	tree add: aReceptiveAccountName.
!
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:50:35'!
addName: anAccountName

	tree add: anAccountName.
! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:50:42' prior: 50627497!
addPortfolioName: aPortfolioName

	self addName: aPortfolioName.
	indents := Character tab asString, indents.! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:50:48' prior: 50627510!
addReceptiveAccountName: aReceptiveAccountName

	self addName: aReceptiveAccountName.
! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:51:01' prior: 50627534!
addReceptiveAccountName: aReceptiveAccountName

	self addName: indents,aReceptiveAccountName.
! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:51:14' prior: 50627522!
addName: anAccountName

	tree add: indents,anAccountName.
! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:51:26' prior: 50627463!
addNameInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addPortfolioName: name.
	accounts do: [:anAccount |  anAccount addNameInTree: aPortfolioTreeFormat].
	
	! !
!ReceptiveAccount methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:51:59'!
addNameInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addReceptiveAccountName: name
	
	! !
!Account methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 13:52:34'!
addNameInTree: aPortfolioTreeFormat

	self subclassResponsibility ! !

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:52:38'!
ERROR!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:52:38'!
ERROR!
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:52:58' prior: 50627164!
test02PrintPortfolioNameAndAccountWithOneIndentation

	| childrenPortfolio johnsAccount treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	treeFormat := PortfolioTreeFormat on: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIndentation: 'Cuenta de Juan'	)) equals: treeFormat calculate! !

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:53:02'!
FAILURE!
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:54:18' prior: 50627541!
addReceptiveAccountName: aReceptiveAccountName

	self addName: aReceptiveAccountName.
! !

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:54:42'!
PASSED!

	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	treeFormat := PortfolioTreeFormat on: childrenPortfolio.
	
	!

	treeFormat calculate!

	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	treeFormat := PortfolioTreeFormat on: childrenPortfolio.
	
	treeFormat calculate!
!PortfolioTreeFormatTest methodsFor: 'formating' stamp: 'ic&vw 5/27/2023 13:55:37' prior: 50627093!
format: aStringToFormat withIndentations: anAmountOfIdentations

	anAmountOfIdentations = 0 ifTrue: [^aStringToFormat].
	^self format: ('    ', aStringToFormat) withIndentations: anAmountOfIdentations-1! !

'    ' * 2!
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 13:56:20' prior: 50627527!
addPortfolioName: aPortfolioName

	self addName: aPortfolioName.
	indents := '    ', indents.! !

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:56:23'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:56:25'!
PASSED!

	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	treeFormat := PortfolioTreeFormat on: childrenPortfolio.!

self calculate !

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:56:51'!
ERROR!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:56:51'!
ERROR!
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:57:05' prior: 50627120!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation

	| childrenPortfolio johnsAccount angiesAccount treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount  := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	treeFormat := PortfolioTreeFormat on: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIndentation: 'Cuenta de Juan'	) with: (self formatWithOneIndentation: 'Cuenta de Angeles'	)) 
	      equals: childrenPortfolio asTree! !
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:57:12' prior: 50627668!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation

	| childrenPortfolio johnsAccount angiesAccount treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount  := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	treeFormat := PortfolioTreeFormat on: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIndentation: 'Cuenta de Juan'	) with: (self formatWithOneIndentation: 'Cuenta de Angeles'	)) 
	      equals: treeFormat calculate ! !

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:57:13'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 13:57:13'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:57:13'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:57:13'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 13:57:13'!
ERROR!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 13:57:13'!
ERROR!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 13:57:18'!
PASSED!
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:57:34' prior: 50627193!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIndentation: 'Portfolio de hijos'	) with: (self formatWithTwoIndentations: 'Cuenta de Juan'	)) 
	      equals: familyPortfolio asTree! !
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:57:38' prior: 50627745!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIndentation: 'Portfolio de hijos'	) with: (self formatWithTwoIndentations: 'Cuenta de Juan'	)) 
	      equals: treeFormat! !

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 13:57:39'!
FAILURE!
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 13:57:42' prior: 50627769!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIndentation: 'Portfolio de hijos'	) with: (self formatWithTwoIndentations: 'Cuenta de Juan'	)) 
	      equals: treeFormat calculate! !

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 13:57:43'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 13:58:03'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 13:58:03'!
FAILURE!

	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.
	
	
	!

self calculate!

OrderedCollection with: 'Portfolio de hijos' with: (PortfolioTreeFormatTest formatWithOneIndentation: 'Portfolio de hijos'	) with: (PortfolioTreeFormatTest formatWithTwoIndentations: 'Cuenta de Juan'	)!

OrderedCollection with: 'Portfolio de hijos' with: (PortfolioTreeFormatTest new formatWithOneIndentation: 'Portfolio de hijos'	) with: (PortfolioTreeFormatTest new formatWithTwoIndentations: 'Cuenta de Juan'	)!


	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.
	!

self calculate!
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 14:07:14' prior: 50627797!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de hijos' with: (self formatWithOneIndentation: 'Portfolio de la familia'	) with: (self formatWithTwoIndentations: 'Cuenta de Juan'	))
	      equals: treeFormat calculate! !

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 14:07:26'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 14:07:26'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 14:07:38'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 14:07:38'!
FAILURE!
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 14:07:50' prior: 50627866!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' with: (self formatWithOneIndentation: 'Portfolio de hijos'	) with: (self formatWithTwoIndentations: 'Cuenta de Juan'	)) 
	      equals: treeFormat calculate! !
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 14:07:56' prior: 50627908!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' with: (self formatWithOneIndentation: 'Portfolio de hijos'	) with: (self formatWithTwoIndentations: 'Cuenta de Juan'	)) equals: treeFormat calculate! !

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 14:07:58'!
PASSED!

	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: johnsAccount with: childrenPortfolio.

	treeFormat := PortfolioTreeFormat on: familyPortfolio.
	
	!

	johnsAccount1  := ReceptiveAccount named: 'Cuenta de Juan'.
	johnsAccount2  := ReceptiveAccount named: 'Cuenta de Juan2'.
	johnsAccount3  := ReceptiveAccount named: 'Cuenta de Juan3'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount2.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: johnsAccount1 with: childrenPortfolio.
	familyPortfolio add: johnsAccount3.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.
	
	!

	johnsAccount1  := ReceptiveAccount named: 'Cuenta de Juan'.
	johnsAccount2  := ReceptiveAccount named: 'Cuenta de Juan2'.
	johnsAccount3  := ReceptiveAccount named: 'Cuenta de Juan3'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount2.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: johnsAccount1 with: childrenPortfolio.
	familyPortfolio add: johnsAccount3.
	
	treeFormat := PortfolioTreeFormat on: familyPortfolio.
	
	"
		familia
			juan1
			hijos
				juan2
			juan3
	"
	!

	johnsAccount1  := ReceptiveAccount named: 'Cuenta de Juan'.
	johnsAccount2  := ReceptiveAccount named: 'Cuenta de Juan2'.
	johnsAccount3  := ReceptiveAccount named: 'Cuenta de Juan3'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount2.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: johnsAccount1 with: childrenPortfolio.
	familyPortfolio add: johnsAccount3.
	
	treeFormat := PortfolioTreeFormat on: familyPortfolio.
	
	"
		familia
			juan1
			hijos
				juan2
			juan3
	"
	!

	johnsAccount1  := ReceptiveAccount named: 'Cuenta de Juan'.
	johnsAccount2  := ReceptiveAccount named: 'Cuenta de Juan2'.
	johnsAccount3  := ReceptiveAccount named: 'Cuenta de Juan3'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount2.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: johnsAccount1 with: childrenPortfolio.
	familyPortfolio add: johnsAccount3.
	
	treeFormat := PortfolioTreeFormat on: familyPortfolio.
	treeFormat calculate.
	
	"
		familia
			juan1
			hijos
				juan2
			juan3
	"
	!
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 14:14:31'!
test05PrintPortfolioWithIndentationGoingUpAndDown

	| childrenPortfolio johnsAccount familyPortfolio treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' with: (self formatWithOneIndentation: 'Portfolio de hijos'	) with: (self formatWithTwoIndentations: 'Cuenta de Juan'	)) equals: treeFormat calculate! !
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 14:16:05' prior: 50628034!
test05PrintPortfolioWithIndentationGoingUpAndDown

	| childrenPortfolio johnsAccount familyPortfolio treeFormat dadAccount momAccount sonAccount |
	
	sonAccount  := ReceptiveAccount named: 'Cuenta del hijo'.
	dadAccount  := ReceptiveAccount named: 'Cuenta del padre'.
	momAccount := ReceptiveAccount named: 'Cuenta de la madre'.
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia'  with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' with: (self formatWithOneIndentation: 'Portfolio de hijos'	) with: (self formatWithTwoIndentations: 'Cuenta de Juan'	)) equals: treeFormat calculate! !
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 14:16:39' prior: 50628057!
test05PrintPortfolioWithIndentationGoingUpAndDown

	| childrenPortfolio familyPortfolio treeFormat dadAccount momAccount sonAccount |
	
	sonAccount  := ReceptiveAccount named: 'Cuenta del hijo'.
	dadAccount  := ReceptiveAccount named: 'Cuenta del padre'.
	momAccount := ReceptiveAccount named: 'Cuenta de la madre'.
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: sonAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: dadAccount with: childrenPortfolio with: momAccount.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' with: (self formatWithOneIndentation: 'Portfolio de hijos'	) with: (self formatWithTwoIndentations: 'Cuenta de Juan'	)) equals: treeFormat calculate! !
!Portfolio class methodsFor: 'initialization' stamp: 'ic&vw 5/27/2023 14:17:06'!
named: aName with: anAccount with: anotherAccount with: aThirdAccount
	
	^(self named: aName with: anAccount with: anotherAccount) add: aThirdAccount; yourself.! !
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 14:18:47' prior: 50628085!
test05PrintPortfolioWithIndentationGoingUpAndDown

	| childrenPortfolio familyPortfolio treeFormat dadAccount momAccount sonAccount |
	
	sonAccount  := ReceptiveAccount named: 'Cuenta del hijo'.
	dadAccount  := ReceptiveAccount named: 'Cuenta del padre'.
	momAccount := ReceptiveAccount named: 'Cuenta de la madre'.
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: sonAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: dadAccount with: childrenPortfolio with: momAccount.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
							     with: (self formatWithOneIndentation: 'Cuenta del padre'	)
							     with: (self formatWithOneIndentation: 'Portfolio de la familia'	)
							     with: (self formatWithTwoIndentations: 'Cuenta del hijo'	)
							     with: (self formatWithOneIndentation: 'Cuenta de la madre'	)
							) 
	
	equals: treeFormat calculate! !
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 14:18:56' prior: 50628122!
test05PrintPortfolioWithIndentationGoingUpAndDown

	| childrenPortfolio familyPortfolio treeFormat dadAccount momAccount sonAccount |
	
	sonAccount  := ReceptiveAccount named: 'Cuenta del hijo'.
	dadAccount  := ReceptiveAccount named: 'Cuenta del padre'.
	momAccount := ReceptiveAccount named: 'Cuenta de la madre'.
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: sonAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: dadAccount with: childrenPortfolio with: momAccount.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
							     with: (self formatWithOneIndentation: 'Cuenta del padre'	)
							     with: (self formatWithOneIndentation: 'Portfolio de la familia'	)
							     with: (self formatWithTwoIndentations: 'Cuenta del hijo'	)
							     with: (self formatWithOneIndentation: 'Cuenta de la madre'	)
			   ) 
	
	equals: treeFormat calculate! !
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 14:19:15' prior: 50627580!
test02PrintPortfolioNameAndAccountWithOneIndentation

	| childrenPortfolio johnsAccount treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	treeFormat := PortfolioTreeFormat on: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' 
							     with: (self formatWithOneIndentation: 'Cuenta de Juan'	)
			   ) equals: treeFormat calculate! !
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 14:19:43' prior: 50627691!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation

	| childrenPortfolio johnsAccount angiesAccount treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount  := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	treeFormat := PortfolioTreeFormat on: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' 
	  					             with: (self formatWithOneIndentation: 'Cuenta de Juan'	) 
							     with: (self formatWithOneIndentation: 'Cuenta de Angeles'	)
			   ) equals: treeFormat calculate ! !
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 14:20:06' prior: 50627932!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
							     with: (self formatWithOneIndentation: 'Portfolio de hijos'	) 
							     with: (self formatWithTwoIndentations: 'Cuenta de Juan'	)
			   ) equals: treeFormat calculate! !

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/27/2023 14:20:16'!
FAILURE!
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 5/27/2023 14:21:04' prior: 50628156!
test05PrintPortfolioWithIndentationGoingUpAndDown

	| childrenPortfolio familyPortfolio treeFormat dadAccount momAccount sonAccount |
	
	sonAccount  := ReceptiveAccount named: 'Cuenta del hijo'.
	dadAccount  := ReceptiveAccount named: 'Cuenta del padre'.
	momAccount := ReceptiveAccount named: 'Cuenta de la madre'.
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: sonAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: dadAccount with: childrenPortfolio with: momAccount.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
							     with: (self formatWithOneIndentation: 'Cuenta del padre'	)
							     with: (self formatWithOneIndentation: 'Portfolio de hijos'	)
							     with: (self formatWithTwoIndentations: 'Cuenta del hijo'	)
							     with: (self formatWithOneIndentation: 'Cuenta de la madre'	)
			   ) 
	
	equals: treeFormat calculate! !

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/27/2023 14:21:07'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/27/2023 14:21:07'!
FAILURE!
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 14:31:06' prior: 50627553 overrides: 50627566!
addNameInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addPortfolio: name.
	accounts do: [:anAccount |  anAccount addNameInTree: aPortfolioTreeFormat].
	
	! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 14:31:37'!
addPortfolio: aPortfolio

	self addName: aPortfolio name.
	indents := '    ', indents.! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 14:32:28' prior: 50628302 overrides: 50627566!
addNameInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addPortfolioName: name.
	aPortfolioTreeFormat addPortfolio: self.
	
	! !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 14:32:43'!
addAccountsInTree: aPortfolioTreeFormat

	accounts do: [:anAccount |  anAccount addNameInTree: aPortfolioTreeFormat].

	
	! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 14:33:27' prior: 50628310!
addPortfolio: aPortfolio

	indents := '    ', indents.
	aPortfolio addAccountsInTree: self.
	! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 14:33:33' prior: 50628331!
addPortfolio: aPortfolio

	indents := '    ', indents.
	aPortfolio addAccountsInTree: self.
	indents := '    ', indents.! !

!methodRemoval: PortfolioTreeFormat #addPortfolioName: stamp: 'ic&vw 5/27/2023 14:33:37'!
addPortfolioName: aPortfolioName

	self addName: aPortfolioName.
	indents := '    ', indents.!
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 14:33:50' prior: 50627602!
addReceptiveAccountName: aReceptiveAccount

	self addName: aReceptiveAccount name.
! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 14:34:02'!
addReceptiveAccount: aReceptiveAccount

	self addName: aReceptiveAccount name.
! !

!methodRemoval: PortfolioTreeFormat #addReceptiveAccountName: stamp: 'ic&vw 5/27/2023 14:34:02'!
addReceptiveAccountName: aReceptiveAccount

	self addName: aReceptiveAccount name.
!
!ReceptiveAccount methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 14:34:28'!
addInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addReceptiveAccountName: name
	
	! !

!methodRemoval: ReceptiveAccount #addNameInTree: stamp: 'ic&vw 5/27/2023 14:34:29'!
addNameInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addReceptiveAccountName: name
	
	!
!ReceptiveAccount methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 14:34:38' prior: 50628368!
addInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addReceptiveAccount: self name
	
	! !
!ReceptiveAccount methodsFor: 'accessing' stamp: 'ic&vw 5/27/2023 14:34:50' overrides: 16903442!
name

	^name! !
!Portfolio methodsFor: 'name' stamp: 'ic&vw 5/27/2023 14:35:09' overrides: 16903442!
name

	^name! !
!Account methodsFor: 'name' stamp: 'ic&vw 5/27/2023 14:35:22' overrides: 16903442!
name

	self subclassResponsibility! !
!Account methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 14:35:36'!
addInTree: aPortfolioTreeFormat

	self subclassResponsibility ! !

!methodRemoval: Account #addNameInTree: stamp: 'ic&vw 5/27/2023 14:35:36'!
addNameInTree: aPortfolioTreeFormat

	self subclassResponsibility !
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 14:35:55' overrides: 50628398!
addInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addPortfolioName: name.
	aPortfolioTreeFormat addPortfolio: self.
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/27/2023 14:35:55' prior: 50628323!
addAccountsInTree: aPortfolioTreeFormat

	accounts do: [:anAccount |  anAccount addInTree: aPortfolioTreeFormat].

	
	! !

!methodRemoval: Portfolio #addNameInTree: stamp: 'ic&vw 5/27/2023 14:35:55'!
addNameInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addPortfolioName: name.
	aPortfolioTreeFormat addPortfolio: self.
	
	!
!Portfolio methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 14:36:02' prior: 50628408 overrides: 50628398!
addInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addPortfolio: self.
	
	! !
!PortfolioTreeFormat methodsFor: 'calculate' stamp: 'ic&vw 5/27/2023 14:36:18' prior: 50627413!
calculate
	
	tree := OrderedCollection new.
	indents := ''.
	
	portfolio addInTree: self.
	
	^tree
	! !
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 14:36:52' prior: 50628338!
addPortfolio: aPortfolio

	self addName: aPortfolio name.
	indents := '    ', indents.
	aPortfolio addAccountsInTree: self.
! !

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 14:36:55'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 14:36:57'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 14:36:57'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 14:37:05'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 14:37:05'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 14:37:47'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 14:37:47'!
FAILURE!
!ReceptiveAccount methodsFor: 'tree' stamp: 'ic&vw 5/27/2023 14:38:21' prior: 50628380 overrides: 50628398!
addInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addReceptiveAccount: self
	
	! !

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 14:38:26'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 14:38:28'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 14:38:29'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 14:38:31'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/27/2023 14:38:32'!
FAILURE!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/27/2023 14:38:32'!
FAILURE!
!PortfolioTreeFormat methodsFor: 'calculate - private' stamp: 'ic&vw 5/27/2023 14:41:09' prior: 50628442!
addPortfolio: aPortfolio

	self addName: aPortfolio name.
	indents := '    ', indents.
	aPortfolio addAccountsInTree: self.
	indents := indents allButLast: 4.
! !

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/27/2023 14:41:10'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 14:41:10'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/27/2023 14:41:10'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/27/2023 14:41:10'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/27/2023 14:41:10'!
PASSED!

----SNAPSHOT----(27 May 2023 16:48:50) CuisUniversity-5799.image priorSource: 9411161!

----SNAPSHOT----(27 May 2023 18:04:05) CuisUniversity-5799.image priorSource: 9500452!

----SNAPSHOT----(27 May 2023 18:05:04) CuisUniversity-5799.image priorSource: 9500540!

----STARTUP---- (29 May 2023 11:48:35) as C:\Users\Ivo\Desktop\uba\inge1\cuises\cuis 4 - portfolio 2 (imagen nueva)\CuisUniversity-5799.image!

!Behavior method!
accountsIsEmpty
	#_coverageTracker8647_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker8647_
		cover: (21 to: 28)
		declaredAt: (21 to: 28)
		by: accounts.
	#_coverageTracker8647_
		coverAll:
			{30 to: 36}
		evaluating: [ receiver1 isEmpty ]
		thatSends: #isEmpty
		to: receiver1 ] value.! !
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker8689_ markAsExecuted.
	#_coverageTracker8689_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ [ | receiver1 |
			receiver1 _ #_coverageTracker8689_
				coverAll:
					{66 to: 69}
				byLiteralOrPseudoVariable: self.
			#_coverageTracker8689_
				coverAll:
					{71 to: 74}
				evaluating: [
					receiver1 for:
						(#_coverageTracker8689_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]
				thatSends: #for:
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker8689_
		cover: (85 to: 91)
		declaredAt: (22 to: 28)
		by: account.
	#_coverageTracker8689_
		coverAll:
			{93 to: 101}
		evaluating: [
			receiver2 register:
				(#_coverageTracker8689_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ]
		thatSends: #register:
		to: receiver2 ] value.
	^ #_coverageTracker8689_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
addedTo: aPortfolio
	#_coverageTracker8694_ markAsExecuted.! !
!Behavior method!
for: aValue
	#_coverageTracker8704_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker8704_
		coverAll:
			{17 to: 20}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8704_
		coverAll:
			{22 to: 24}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker8704_
		coverAll:
			{26 to: 39}
		evaluating: [
			receiver2 initializeFor:
				(#_coverageTracker8704_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ]
		thatSends: #initializeFor:
		to: receiver2 ] value.! !
!Behavior method!
with: anAccount with: anotherAccount
	#_coverageTracker8716_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker8716_
		coverAll:
			{41 to: 44}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8716_
		coverAll:
			{46 to: 48}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker8716_
		coverAll:
			{53 to: 56}
		evaluating: [
			receiver2 add:
				(#_coverageTracker8716_
					cover: (58 to: 66)
					declaredAt: (7 to: 15)
					by: anAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker8716_
		coverAll:
			{71 to: 74}
		evaluating: [
			receiver3 add:
				(#_coverageTracker8716_
					cover: (76 to: 89)
					declaredAt: (23 to: 36)
					by: anotherAccount) ]
		thatSends: #add:
		to: receiver3 ] value.
	[ | receiver4 |
	receiver4 _ cascadeReceiver.
	#_coverageTracker8716_
		coverAll:
			{94 to: 101}
		evaluating: [ receiver4 yourself ]
		thatSends: #yourself
		to: receiver4 ] value ] value.! !
!Behavior method!
test08PortfolioTransactionsIncludesAllItsAccountsTransactions
	| account portfolio accountDeposit anotherAccount portfolioTransactions anotherAccountWithdraw |
	#_coverageTracker8727_ markAsExecuted.
	#_coverageTracker8727_
		cover: (165 to: 171)
		declaredAt: (67 to: 73)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker8727_
				coverAll:
					{176 to: 191}
				by: ReceptiveAccount.
			#_coverageTracker8727_
				coverAll:
					{193 to: 195}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker8727_
		cover: (199 to: 212)
		declaredAt: (85 to: 98)
		by:
			(accountDeposit _ [ | receiver2 |
			receiver2 _ #_coverageTracker8727_
				coverAll:
					{217 to: 223}
				by: Deposit.
			#_coverageTracker8727_
				coverAll:
					{225 to: 233. 239 to: 241}
				evaluating: [
					receiver2
						register:
							(#_coverageTracker8727_
								coverAll:
									{235 to: 237}
								byLiteralOrPseudoVariable: 100)
						on:
							(#_coverageTracker8727_
								cover: (243 to: 249)
								declaredAt: (67 to: 73)
								by: account) ]
				thatSends: #register:on:
				to: receiver2 ] value).
	#_coverageTracker8727_
		cover: (253 to: 266)
		declaredAt: (100 to: 113)
		by:
			(anotherAccount _ [ | receiver3 |
			receiver3 _ #_coverageTracker8727_
				coverAll:
					{271 to: 286}
				by: ReceptiveAccount.
			#_coverageTracker8727_
				coverAll:
					{288 to: 290}
				evaluating: [ receiver3 new ]
				thatSends: #new
				to: receiver3 ] value).
	#_coverageTracker8727_
		cover: (294 to: 315)
		declaredAt: (137 to: 158)
		by:
			(anotherAccountWithdraw _ [ | receiver4 |
			receiver4 _ #_coverageTracker8727_
				coverAll:
					{320 to: 327}
				by: Withdraw.
			#_coverageTracker8727_
				coverAll:
					{329 to: 337. 343 to: 345}
				evaluating: [
					receiver4
						register:
							(#_coverageTracker8727_
								coverAll:
									{339 to: 341}
								byLiteralOrPseudoVariable: 100)
						on:
							(#_coverageTracker8727_
								cover: (347 to: 353)
								declaredAt: (67 to: 73)
								by: account) ]
				thatSends: #register:on:
				to: receiver4 ] value).
	#_coverageTracker8727_
		cover: (357 to: 365)
		declaredAt: (75 to: 83)
		by:
			(portfolio _ [ | receiver5 |
			receiver5 _ #_coverageTracker8727_
				coverAll:
					{370 to: 378}
				by: Portfolio.
			#_coverageTracker8727_
				coverAll:
					{380 to: 384}
				evaluating: [
					receiver5 with:
						(#_coverageTracker8727_
							cover: (386 to: 392)
							declaredAt: (67 to: 73)
							by: account) ]
				thatSends: #with:
				to: receiver5 ] value).
	#_coverageTracker8727_
		cover: (398 to: 418)
		declaredAt: (115 to: 135)
		by:
			(portfolioTransactions _ [ | receiver6 |
			receiver6 _ #_coverageTracker8727_
				cover: (423 to: 431)
				declaredAt: (75 to: 83)
				by: portfolio.
			#_coverageTracker8727_
				coverAll:
					{433 to: 444}
				evaluating: [ receiver6 transactions ]
				thatSends: #transactions
				to: receiver6 ] value).
	[ | receiver8 |
	receiver8 _ #_coverageTracker8727_
		coverAll:
			{450 to: 453}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8727_
		coverAll:
			{455 to: 461. 465 to: 471}
		evaluating: [
			receiver8
				assert:
					(#_coverageTracker8727_
						coverAll:
							{463 to: 463}
						byLiteralOrPseudoVariable: 2)
				equals:
					[ | receiver7 |
					receiver7 _ #_coverageTracker8727_
						cover: (473 to: 493)
						declaredAt: (115 to: 135)
						by: portfolioTransactions.
					#_coverageTracker8727_
						coverAll:
							{495 to: 498}
						evaluating: [ receiver7 size ]
						thatSends: #size
						to: receiver7 ] value ]
		thatSends: #assert:equals:
		to: receiver8 ] value.
	[ | receiver10 |
	receiver10 _ #_coverageTracker8727_
		coverAll:
			{502 to: 505}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8727_
		coverAll:
			{507 to: 513}
		evaluating: [
			receiver10 assert:
				[ | receiver9 |
				receiver9 _ #_coverageTracker8727_
					cover: (516 to: 536)
					declaredAt: (115 to: 135)
					by: portfolioTransactions.
				#_coverageTracker8727_
					coverAll:
						{538 to: 546}
					evaluating: [
						receiver9 includes:
							(#_coverageTracker8727_
								cover: (548 to: 561)
								declaredAt: (85 to: 98)
								by: accountDeposit) ]
					thatSends: #includes:
					to: receiver9 ] value ]
		thatSends: #assert:
		to: receiver10 ] value.
	[ | receiver12 |
	receiver12 _ #_coverageTracker8727_
		coverAll:
			{566 to: 569}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8727_
		coverAll:
			{571 to: 577}
		evaluating: [
			receiver12 assert:
				[ | receiver11 |
				receiver11 _ #_coverageTracker8727_
					cover: (580 to: 600)
					declaredAt: (115 to: 135)
					by: portfolioTransactions.
				#_coverageTracker8727_
					coverAll:
						{602 to: 610}
					evaluating: [
						receiver11 includes:
							(#_coverageTracker8727_
								cover: (612 to: 633)
								declaredAt: (137 to: 158)
								by: anotherAccountWithdraw) ]
					thatSends: #includes:
					to: receiver11 ] value ]
		thatSends: #assert:
		to: receiver12 ] value.! !
!Behavior method!
test02PrintPortfolioNameAndAccountWithOneIndentation
	| childrenPortfolio johnsAccount treeFormat |
	#_coverageTracker8760_ markAsExecuted.
	#_coverageTracker8760_
		cover: (105 to: 116)
		declaredAt: (76 to: 87)
		by:
			(johnsAccount _ [ | receiver1 |
			receiver1 _ #_coverageTracker8760_
				coverAll:
					{122 to: 137}
				by: ReceptiveAccount.
			#_coverageTracker8760_
				coverAll:
					{139 to: 144}
				evaluating: [
					receiver1 named:
						(#_coverageTracker8760_
							coverAll:
								{146 to: 161}
							byLiteralOrPseudoVariable: 'Cuenta de Juan') ]
				thatSends: #named:
				to: receiver1 ] value).
	#_coverageTracker8760_
		cover: (165 to: 181)
		declaredAt: (58 to: 74)
		by:
			(childrenPortfolio _ [ | receiver2 |
			receiver2 _ #_coverageTracker8760_
				coverAll:
					{186 to: 194}
				by: Portfolio.
			#_coverageTracker8760_
				coverAll:
					{196 to: 201. 224 to: 228}
				evaluating: [
					receiver2
						named:
							(#_coverageTracker8760_
								coverAll:
									{203 to: 222}
								byLiteralOrPseudoVariable: 'Portfolio de hijos')
						with:
							(#_coverageTracker8760_
								cover: (230 to: 241)
								declaredAt: (76 to: 87)
								by: johnsAccount) ]
				thatSends: #named:with:
				to: receiver2 ] value).
	#_coverageTracker8760_
		cover: (245 to: 254)
		declaredAt: (89 to: 98)
		by:
			(treeFormat _ [ | receiver3 |
			receiver3 _ #_coverageTracker8760_
				coverAll:
					{259 to: 277}
				by: PortfolioTreeFormat.
			#_coverageTracker8760_
				coverAll:
					{279 to: 281}
				evaluating: [
					receiver3 on:
						(#_coverageTracker8760_
							cover: (283 to: 299)
							declaredAt: (58 to: 74)
							by: childrenPortfolio) ]
				thatSends: #on:
				to: receiver3 ] value).
	[ | receiver7 |
	receiver7 _ #_coverageTracker8760_
		coverAll:
			{307 to: 310}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8760_
		coverAll:
			{312 to: 318. 444 to: 450}
		evaluating: [
			receiver7
				assert:
					[ | receiver5 |
					receiver5 _ #_coverageTracker8760_
						coverAll:
							{321 to: 337}
						by: OrderedCollection.
					#_coverageTracker8760_
						coverAll:
							{339 to: 343. 379 to: 383}
						evaluating: [
							receiver5
								with:
									(#_coverageTracker8760_
										coverAll:
											{345 to: 364}
										byLiteralOrPseudoVariable: 'Portfolio de hijos')
								with:
									[ | receiver4 |
									receiver4 _ #_coverageTracker8760_
										coverAll:
											{386 to: 389}
										byLiteralOrPseudoVariable: self.
									#_coverageTracker8760_
										coverAll:
											{391 to: 415}
										evaluating: [
											receiver4 formatWithOneIndentation:
												(#_coverageTracker8760_
													coverAll:
														{417 to: 432}
													byLiteralOrPseudoVariable: 'Cuenta de Juan') ]
										thatSends: #formatWithOneIndentation:
										to: receiver4 ] value ]
						thatSends: #with:with:
						to: receiver5 ] value
				equals:
					[ | receiver6 |
					receiver6 _ #_coverageTracker8760_
						cover: (452 to: 461)
						declaredAt: (89 to: 98)
						by: treeFormat.
					#_coverageTracker8760_
						coverAll:
							{463 to: 471}
						evaluating: [ receiver6 calculate ]
						thatSends: #calculate
						to: receiver6 ] value ]
		thatSends: #assert:equals:
		to: receiver7 ] value.! !
!Behavior method!
calculate
	#_coverageTracker8782_ markAsExecuted.
	#_coverageTracker8782_
		cover: (14 to: 17)
		declaredAt: (14 to: 17)
		by:
			(tree _ [ | receiver1 |
			receiver1 _ #_coverageTracker8782_
				coverAll:
					{22 to: 38}
				by: OrderedCollection.
			#_coverageTracker8782_
				coverAll:
					{40 to: 42}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker8782_
		cover: (46 to: 52)
		declaredAt: (46 to: 52)
		by:
			(indents _ #_coverageTracker8782_
				coverAll:
					{57 to: 58}
				byLiteralOrPseudoVariable: '').
	[ | receiver2 |
	receiver2 _ #_coverageTracker8782_
		cover: (64 to: 72)
		declaredAt: (64 to: 72)
		by: portfolio.
	#_coverageTracker8782_
		coverAll:
			{74 to: 83}
		evaluating: [
			receiver2 addInTree:
				(#_coverageTracker8782_
					coverAll:
						{85 to: 88}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addInTree:
		to: receiver2 ] value.
	^ #_coverageTracker8782_
		cover: (95 to: 98)
		declaredAt: (14 to: 17)
		by: tree.! !
!Behavior method!
test05CanNavigateFromDepositLegToWithdrawLeg
	| transfer depositLegWithdrawLeg |
	#_coverageTracker8790_ markAsExecuted.
	#_coverageTracker8790_
		cover: (85 to: 92)
		declaredAt: (50 to: 57)
		by:
			(transfer _ [ | receiver1 |
			receiver1 _ #_coverageTracker8790_
				coverAll:
					{98 to: 101}
				byLiteralOrPseudoVariable: self.
			#_coverageTracker8790_
				coverAll:
					{103 to: 134}
				evaluating: [ receiver1 createTransferBetweenTwoAccounts ]
				thatSends: #createTransferBetweenTwoAccounts
				to: receiver1 ] value).
	#_coverageTracker8790_
		cover: (140 to: 160)
		declaredAt: (59 to: 79)
		by:
			(depositLegWithdrawLeg _ [ | receiver3 |
			receiver3 _ [ | receiver2 |
			receiver2 _ #_coverageTracker8790_
				cover: (165 to: 172)
				declaredAt: (50 to: 57)
				by: transfer.
			#_coverageTracker8790_
				coverAll:
					{174 to: 183}
				evaluating: [ receiver2 depositLeg ]
				thatSends: #depositLeg
				to: receiver2 ] value.
			#_coverageTracker8790_
				coverAll:
					{185 to: 195}
				evaluating: [ receiver3 withdrawLeg ]
				thatSends: #withdrawLeg
				to: receiver3 ] value).
	[ | receiver5 |
	receiver5 _ #_coverageTracker8790_
		coverAll:
			{201 to: 204}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8790_
		coverAll:
			{206 to: 212. 235 to: 241}
		evaluating: [
			receiver5
				assert:
					[ | receiver4 |
					receiver4 _ #_coverageTracker8790_
						cover: (214 to: 221)
						declaredAt: (50 to: 57)
						by: transfer.
					#_coverageTracker8790_
						coverAll:
							{223 to: 233}
						evaluating: [ receiver4 withdrawLeg ]
						thatSends: #withdrawLeg
						to: receiver4 ] value
				equals:
					(#_coverageTracker8790_
						cover: (243 to: 263)
						declaredAt: (59 to: 79)
						by: depositLegWithdrawLeg) ]
		thatSends: #assert:equals:
		to: receiver5 ] value.! !
!Behavior method!
addAccountsInTree: aPortfolioTreeFormat
	#_coverageTracker8800_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker8800_
		cover: (43 to: 50)
		declaredAt: (43 to: 50)
		by: accounts.
	#_coverageTracker8800_
		coverAll:
			{52 to: 54}
		evaluating: [
			receiver2 do: [ :anAccount |
				[ | receiver1 |
				receiver1 _ #_coverageTracker8800_
					cover: (71 to: 79)
					declaredAt: (58 to: 66)
					by: anAccount.
				#_coverageTracker8800_
					coverAll:
						{81 to: 90}
					evaluating: [
						receiver1 addInTree:
							(#_coverageTracker8800_
								cover: (92 to: 111)
								declaredAt: (20 to: 39)
								by: aPortfolioTreeFormat) ]
					thatSends: #addInTree:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionsTo: aCollectionOfTransactions
	#_coverageTracker8811_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker8811_
		cover: (48 to: 72)
		declaredAt: (20 to: 44)
		by: aCollectionOfTransactions.
	#_coverageTracker8811_
		coverAll:
			{74 to: 80}
		evaluating: [
			receiver1 addAll:
				(#_coverageTracker8811_
					cover: (82 to: 93)
					declaredAt: (82 to: 93)
					by: transactions) ]
		thatSends: #addAll:
		to: receiver1 ] value.! !
!Behavior method!
name
	#_coverageTracker8820_ markAsExecuted.
	^ #_coverageTracker8820_
		cover: (9 to: 12)
		declaredAt: (9 to: 12)
		by: name.! !
!Behavior method!
test04WithdrawValueMustBePositive
	| account withdrawValue |
	#_coverageTracker8829_ markAsExecuted.
	#_coverageTracker8829_
		cover: (67 to: 73)
		declaredAt: (40 to: 46)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker8829_
				coverAll:
					{78 to: 93}
				by: ReceptiveAccount.
			#_coverageTracker8829_
				coverAll:
					{95 to: 97}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker8829_
		cover: (101 to: 113)
		declaredAt: (48 to: 60)
		by:
			(withdrawValue _ #_coverageTracker8829_
				coverAll:
					{118 to: 119}
				byLiteralOrPseudoVariable: 50).
	[ | receiver4 |
	receiver4 _ #_coverageTracker8829_
		coverAll:
			{125 to: 128}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8829_
		coverAll:
			{130 to: 136. 152 to: 158}
		evaluating: [
			receiver4
				assert:
					(#_coverageTracker8829_
						cover: (138 to: 150)
						declaredAt: (48 to: 60)
						by: withdrawValue)
				equals:
					[ | receiver3 |
					receiver3 _ [ | receiver2 |
					receiver2 _ #_coverageTracker8829_
						coverAll:
							{161 to: 168}
						by: Withdraw.
					#_coverageTracker8829_
						coverAll:
							{170 to: 178. 194 to: 196}
						evaluating: [
							receiver2
								register:
									(#_coverageTracker8829_
										cover: (180 to: 192)
										declaredAt: (48 to: 60)
										by: withdrawValue)
								on:
									(#_coverageTracker8829_
										cover: (198 to: 204)
										declaredAt: (40 to: 46)
										by: account) ]
						thatSends: #register:on:
						to: receiver2 ] value.
					#_coverageTracker8829_
						coverAll:
							{207 to: 211}
						evaluating: [ receiver3 value ]
						thatSends: #value
						to: receiver3 ] value ]
		thatSends: #assert:equals:
		to: receiver4 ] value.! !
!Behavior method!
isComposedBy: anAccount
	#_coverageTracker8844_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker8844_
		coverAll:
			{28 to: 31}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8844_
		coverAll:
			{33 to: 33}
		evaluating: [
			receiver1 =
				(#_coverageTracker8844_
					cover: (35 to: 43)
					declaredAt: (15 to: 23)
					by: anAccount) ]
		thatSends: #=
		to: receiver1 ] value.! !
!Behavior method!
test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount
	| receiverAccount senderAccount |
	#_coverageTracker8854_ markAsExecuted.
	#_coverageTracker8854_
		cover: (114 to: 126)
		declaredAt: (95 to: 107)
		by:
			(senderAccount _ [ | receiver1 |
			receiver1 _ #_coverageTracker8854_
				coverAll:
					{131 to: 146}
				by: ReceptiveAccount.
			#_coverageTracker8854_
				coverAll:
					{148 to: 150}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker8854_
		cover: (154 to: 168)
		declaredAt: (79 to: 93)
		by:
			(receiverAccount _ [ | receiver2 |
			receiver2 _ #_coverageTracker8854_
				coverAll:
					{173 to: 188}
				by: ReceptiveAccount.
			#_coverageTracker8854_
				coverAll:
					{190 to: 192}
				evaluating: [ receiver2 new ]
				thatSends: #new
				to: receiver2 ] value).
	[ | receiver3 |
	receiver3 _ #_coverageTracker8854_
		coverAll:
			{198 to: 205}
		by: Transfer.
	#_coverageTracker8854_
		coverAll:
			{207 to: 215. 220 to: 224. 241 to: 243}
		evaluating: [
			receiver3
				register:
					(#_coverageTracker8854_
						coverAll:
							{217 to: 218}
						byLiteralOrPseudoVariable: 50)
				from:
					(#_coverageTracker8854_
						cover: (226 to: 238)
						declaredAt: (95 to: 107)
						by: senderAccount)
				to:
					(#_coverageTracker8854_
						cover: (245 to: 259)
						declaredAt: (79 to: 93)
						by: receiverAccount) ]
		thatSends: #register:from:to:
		to: receiver3 ] value.
	[ | receiver5 |
	receiver5 _ #_coverageTracker8854_
		coverAll:
			{264 to: 267}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8854_
		coverAll:
			{269 to: 275. 281 to: 287}
		evaluating: [
			receiver5
				assert:
					(#_coverageTracker8854_
						coverAll:
							{277 to: 279}
						byLiteralOrPseudoVariable: -50)
				equals:
					[ | receiver4 |
					receiver4 _ #_coverageTracker8854_
						cover: (289 to: 301)
						declaredAt: (95 to: 107)
						by: senderAccount.
					#_coverageTracker8854_
						coverAll:
							{303 to: 309}
						evaluating: [ receiver4 balance ]
						thatSends: #balance
						to: receiver4 ] value ]
		thatSends: #assert:equals:
		to: receiver5 ] value.
	[ | receiver7 |
	receiver7 _ #_coverageTracker8854_
		coverAll:
			{314 to: 317}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8854_
		coverAll:
			{319 to: 325. 330 to: 336}
		evaluating: [
			receiver7
				assert:
					(#_coverageTracker8854_
						coverAll:
							{327 to: 328}
						byLiteralOrPseudoVariable: 50)
				equals:
					[ | receiver6 |
					receiver6 _ #_coverageTracker8854_
						cover: (338 to: 352)
						declaredAt: (79 to: 93)
						by: receiverAccount.
					#_coverageTracker8854_
						coverAll:
							{354 to: 360}
						evaluating: [ receiver6 balance ]
						thatSends: #balance
						to: receiver6 ] value ]
		thatSends: #assert:equals:
		to: receiver7 ] value.! !
!Behavior method!
createTransferBetweenTwoAccounts
	| receiverAccount senderAccount |
	#_coverageTracker8878_ markAsExecuted.
	#_coverageTracker8878_
		cover: (71 to: 83)
		declaredAt: (54 to: 66)
		by:
			(senderAccount _ [ | receiver1 |
			receiver1 _ #_coverageTracker8878_
				coverAll:
					{88 to: 103}
				by: ReceptiveAccount.
			#_coverageTracker8878_
				coverAll:
					{105 to: 107}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker8878_
		cover: (111 to: 125)
		declaredAt: (38 to: 52)
		by:
			(receiverAccount _ [ | receiver2 |
			receiver2 _ #_coverageTracker8878_
				coverAll:
					{130 to: 145}
				by: ReceptiveAccount.
			#_coverageTracker8878_
				coverAll:
					{147 to: 149}
				evaluating: [ receiver2 new ]
				thatSends: #new
				to: receiver2 ] value).
	^ [ | receiver3 |
	receiver3 _ #_coverageTracker8878_
		coverAll:
			{156 to: 163}
		by: Transfer.
	#_coverageTracker8878_
		coverAll:
			{165 to: 173. 178 to: 182. 199 to: 201}
		evaluating: [
			receiver3
				register:
					(#_coverageTracker8878_
						coverAll:
							{175 to: 176}
						byLiteralOrPseudoVariable: 50)
				from:
					(#_coverageTracker8878_
						cover: (184 to: 196)
						declaredAt: (54 to: 66)
						by: senderAccount)
				to:
					(#_coverageTracker8878_
						cover: (203 to: 217)
						declaredAt: (38 to: 52)
						by: receiverAccount) ]
		thatSends: #register:from:to:
		to: receiver3 ] value.! !
!Behavior method!
test05PortfolioHasRegisteredItsAccountsTransactions
	| account portfolio deposit |
	#_coverageTracker8888_ markAsExecuted.
	#_coverageTracker8888_
		cover: (88 to: 94)
		declaredAt: (57 to: 63)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker8888_
				coverAll:
					{99 to: 114}
				by: ReceptiveAccount.
			#_coverageTracker8888_
				coverAll:
					{116 to: 118}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker8888_
		cover: (122 to: 128)
		declaredAt: (75 to: 81)
		by:
			(deposit _ [ | receiver2 |
			receiver2 _ #_coverageTracker8888_
				coverAll:
					{133 to: 139}
				by: Deposit.
			#_coverageTracker8888_
				coverAll:
					{141 to: 149. 155 to: 157}
				evaluating: [
					receiver2
						register:
							(#_coverageTracker8888_
								coverAll:
									{151 to: 153}
								byLiteralOrPseudoVariable: 100)
						on:
							(#_coverageTracker8888_
								cover: (159 to: 165)
								declaredAt: (57 to: 63)
								by: account) ]
				thatSends: #register:on:
				to: receiver2 ] value).
	#_coverageTracker8888_
		cover: (169 to: 177)
		declaredAt: (65 to: 73)
		by:
			(portfolio _ [ | receiver3 |
			receiver3 _ #_coverageTracker8888_
				coverAll:
					{182 to: 190}
				by: Portfolio.
			#_coverageTracker8888_
				coverAll:
					{192 to: 196}
				evaluating: [
					receiver3 with:
						(#_coverageTracker8888_
							cover: (198 to: 204)
							declaredAt: (57 to: 63)
							by: account) ]
				thatSends: #with:
				to: receiver3 ] value).
	[ | receiver5 |
	receiver5 _ #_coverageTracker8888_
		coverAll:
			{210 to: 213}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8888_
		coverAll:
			{215 to: 221}
		evaluating: [
			receiver5 assert:
				[ | receiver4 |
				receiver4 _ #_coverageTracker8888_
					cover: (224 to: 232)
					declaredAt: (65 to: 73)
					by: portfolio.
				#_coverageTracker8888_
					coverAll:
						{234 to: 247}
					evaluating: [
						receiver4 hasRegistered:
							(#_coverageTracker8888_
								cover: (249 to: 255)
								declaredAt: (75 to: 81)
								by: deposit) ]
					thatSends: #hasRegistered:
					to: receiver4 ] value ]
		thatSends: #assert:
		to: receiver5 ] value.! !
!Behavior method!
named: aName
	#_coverageTracker8904_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker8904_
		coverAll:
			{19 to: 22}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8904_
		coverAll:
			{24 to: 26}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker8904_
		coverAll:
			{28 to: 46}
		evaluating: [
			receiver2 initializeWithName:
				(#_coverageTracker8904_
					cover: (48 to: 52)
					declaredAt: (8 to: 12)
					by: aName) ]
		thatSends: #initializeWithName:
		to: receiver2 ] value.! !
!Behavior method!
addRootParentsTo: rootParents
	#_coverageTracker8914_ markAsExecuted.
	[ | receiver4 |
	receiver4 _ #_coverageTracker8914_
		cover: (33 to: 39)
		declaredAt: (33 to: 39)
		by: parents.
	#_coverageTracker8914_
		coverAll:
			{44 to: 51. 82 to: 92}
		evaluating: [
			receiver4
				ifEmpty: [
					[ | receiver1 |
					receiver1 _ #_coverageTracker8914_
						cover: (55 to: 65)
						declaredAt: (19 to: 29)
						by: rootParents.
					#_coverageTracker8914_
						coverAll:
							{67 to: 70}
						evaluating: [
							receiver1 add:
								(#_coverageTracker8914_
									coverAll:
										{72 to: 75}
									byLiteralOrPseudoVariable: self) ]
						thatSends: #add:
						to: receiver1 ] value ]
				ifNotEmpty: [
					[ | receiver3 |
					receiver3 _ #_coverageTracker8914_
						cover: (96 to: 102)
						declaredAt: (33 to: 39)
						by: parents.
					#_coverageTracker8914_
						coverAll:
							{104 to: 106}
						evaluating: [
							receiver3 do: [ :aParent |
								[ | receiver2 |
								receiver2 _ #_coverageTracker8914_
									cover: (121 to: 127)
									declaredAt: (111 to: 117)
									by: aParent.
								#_coverageTracker8914_
									coverAll:
										{129 to: 145}
									evaluating: [
										receiver2 addRootParentsTo:
											(#_coverageTracker8914_
												cover: (147 to: 157)
												declaredAt: (19 to: 29)
												by: rootParents) ]
									thatSends: #addRootParentsTo:
									to: receiver2 ] value ]]
						thatSends: #do:
						to: receiver3 ] value ]]
		thatSends: #ifEmpty:ifNotEmpty:
		to: receiver4 ] value.! !
!Behavior method!
affectBalance: aBalance
	#_coverageTracker8927_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker8927_
		cover: (28 to: 35)
		declaredAt: (16 to: 23)
		by: aBalance.
	#_coverageTracker8927_
		coverAll:
			{37 to: 37}
		evaluating: [
			receiver1 -
				(#_coverageTracker8927_
					cover: (39 to: 43)
					declaredAt: (39 to: 43)
					by: value) ]
		thatSends: #-
		to: receiver1 ] value.! !
!Behavior method!
calculate
	#_coverageTracker8938_ markAsExecuted.
	#_coverageTracker8938_
		cover: (13 to: 23)
		declaredAt: (13 to: 23)
		by:
			(transferNet _ #_coverageTracker8938_
				coverAll:
					{28 to: 28}
				byLiteralOrPseudoVariable: 0).
	[ | receiver1 |
	receiver1 _ #_coverageTracker8938_
		cover: (34 to: 40)
		declaredAt: (34 to: 40)
		by: account.
	#_coverageTracker8938_
		coverAll:
			{42 to: 70}
		evaluating: [
			receiver1 addTransactionsInTransferNet:
				(#_coverageTracker8938_
					coverAll:
						{72 to: 75}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addTransactionsInTransferNet:
		to: receiver1 ] value.
	^ #_coverageTracker8938_
		cover: (84 to: 94)
		declaredAt: (13 to: 23)
		by: transferNet.! !
!Behavior method!
transactions
	| transactions |
	#_coverageTracker8950_ markAsExecuted.
	#_coverageTracker8950_
		cover: (37 to: 48)
		declaredAt: (19 to: 30)
		by:
			(transactions _ [ | receiver1 |
			receiver1 _ #_coverageTracker8950_
				coverAll:
					{53 to: 69}
				by: OrderedCollection.
			#_coverageTracker8950_
				coverAll:
					{71 to: 73}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver3 |
	receiver3 _ #_coverageTracker8950_
		cover: (77 to: 84)
		declaredAt: (77 to: 84)
		by: accounts.
	#_coverageTracker8950_
		coverAll:
			{86 to: 88}
		evaluating: [
			receiver3 do: [ :anAccount |
				[ | receiver2 |
				receiver2 _ #_coverageTracker8950_
					cover: (105 to: 113)
					declaredAt: (93 to: 101)
					by: anAccount.
				#_coverageTracker8950_
					coverAll:
						{115 to: 132}
					evaluating: [
						receiver2 addTransactionsTo:
							(#_coverageTracker8950_
								cover: (134 to: 145)
								declaredAt: (19 to: 30)
								by: transactions) ]
					thatSends: #addTransactionsTo:
					to: receiver2 ] value ]]
		thatSends: #do:
		to: receiver3 ] value.
	^ #_coverageTracker8950_
		cover: (154 to: 165)
		declaredAt: (19 to: 30)
		by: transactions.! !
!Behavior method!
test07AccountKnowsItsTransactions
	| account1 deposit1 |
	#_coverageTracker8969_ markAsExecuted.
	#_coverageTracker8969_
		cover: (63 to: 70)
		declaredAt: (40 to: 47)
		by:
			(account1 _ [ | receiver1 |
			receiver1 _ #_coverageTracker8969_
				coverAll:
					{75 to: 90}
				by: ReceptiveAccount.
			#_coverageTracker8969_
				coverAll:
					{92 to: 94}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker8969_
		cover: (100 to: 107)
		declaredAt: (49 to: 56)
		by:
			(deposit1 _ [ | receiver2 |
			receiver2 _ #_coverageTracker8969_
				coverAll:
					{112 to: 118}
				by: Deposit.
			#_coverageTracker8969_
				coverAll:
					{120 to: 128. 134 to: 136}
				evaluating: [
					receiver2
						register:
							(#_coverageTracker8969_
								coverAll:
									{130 to: 132}
								byLiteralOrPseudoVariable: 100)
						on:
							(#_coverageTracker8969_
								cover: (138 to: 145)
								declaredAt: (40 to: 47)
								by: account1) ]
				thatSends: #register:on:
				to: receiver2 ] value).
	[ | receiver5 |
	receiver5 _ #_coverageTracker8969_
		coverAll:
			{152 to: 155}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8969_
		coverAll:
			{157 to: 163. 167 to: 173}
		evaluating: [
			receiver5
				assert:
					(#_coverageTracker8969_
						coverAll:
							{165 to: 165}
						byLiteralOrPseudoVariable: 1)
				equals:
					[ | receiver4 |
					receiver4 _ [ | receiver3 |
					receiver3 _ #_coverageTracker8969_
						cover: (175 to: 182)
						declaredAt: (40 to: 47)
						by: account1.
					#_coverageTracker8969_
						coverAll:
							{184 to: 195}
						evaluating: [ receiver3 transactions ]
						thatSends: #transactions
						to: receiver3 ] value.
					#_coverageTracker8969_
						coverAll:
							{197 to: 200}
						evaluating: [ receiver4 size ]
						thatSends: #size
						to: receiver4 ] value ]
		thatSends: #assert:equals:
		to: receiver5 ] value.
	[ | receiver8 |
	receiver8 _ #_coverageTracker8969_
		coverAll:
			{205 to: 208}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8969_
		coverAll:
			{210 to: 216}
		evaluating: [
			receiver8 assert:
				[ | receiver7 |
				receiver7 _ [ | receiver6 |
				receiver6 _ #_coverageTracker8969_
					cover: (219 to: 226)
					declaredAt: (40 to: 47)
					by: account1.
				#_coverageTracker8969_
					coverAll:
						{228 to: 239}
					evaluating: [ receiver6 transactions ]
					thatSends: #transactions
					to: receiver6 ] value.
				#_coverageTracker8969_
					coverAll:
						{241 to: 249}
					evaluating: [
						receiver7 includes:
							(#_coverageTracker8969_
								cover: (251 to: 258)
								declaredAt: (49 to: 56)
								by: deposit1) ]
					thatSends: #includes:
					to: receiver7 ] value ]
		thatSends: #assert:
		to: receiver8 ] value.! !
!Behavior method!
test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance
	| account portfolio |
	#_coverageTracker8991_ markAsExecuted.
	#_coverageTracker8991_
		cover: (87 to: 93)
		declaredAt: (64 to: 70)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker8991_
				coverAll:
					{98 to: 113}
				by: ReceptiveAccount.
			#_coverageTracker8991_
				coverAll:
					{115 to: 117}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker8991_
		coverAll:
			{121 to: 127}
		by: Deposit.
	#_coverageTracker8991_
		coverAll:
			{129 to: 137. 143 to: 145}
		evaluating: [
			receiver2
				register:
					(#_coverageTracker8991_
						coverAll:
							{139 to: 141}
						byLiteralOrPseudoVariable: 100)
				on:
					(#_coverageTracker8991_
						cover: (147 to: 153)
						declaredAt: (64 to: 70)
						by: account) ]
		thatSends: #register:on:
		to: receiver2 ] value.
	#_coverageTracker8991_
		cover: (157 to: 165)
		declaredAt: (72 to: 80)
		by:
			(portfolio _ [ | receiver3 |
			receiver3 _ #_coverageTracker8991_
				coverAll:
					{170 to: 178}
				by: Portfolio.
			#_coverageTracker8991_
				coverAll:
					{180 to: 184}
				evaluating: [
					receiver3 with:
						(#_coverageTracker8991_
							cover: (186 to: 192)
							declaredAt: (64 to: 70)
							by: account) ]
				thatSends: #with:
				to: receiver3 ] value).
	[ | receiver6 |
	receiver6 _ #_coverageTracker8991_
		coverAll:
			{198 to: 201}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker8991_
		coverAll:
			{203 to: 209. 227 to: 233}
		evaluating: [
			receiver6
				assert:
					[ | receiver4 |
					receiver4 _ #_coverageTracker8991_
						cover: (211 to: 217)
						declaredAt: (64 to: 70)
						by: account.
					#_coverageTracker8991_
						coverAll:
							{219 to: 225}
						evaluating: [ receiver4 balance ]
						thatSends: #balance
						to: receiver4 ] value
				equals:
					[ | receiver5 |
					receiver5 _ #_coverageTracker8991_
						cover: (235 to: 243)
						declaredAt: (72 to: 80)
						by: portfolio.
					#_coverageTracker8991_
						coverAll:
							{245 to: 251}
						evaluating: [ receiver5 balance ]
						thatSends: #balance
						to: receiver5 ] value ]
		thatSends: #assert:equals:
		to: receiver6 ] value.! !
!Behavior method!
addTransactionsInTransferNet: aTransferNet
	#_coverageTracker9002_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker9002_
		cover: (48 to: 59)
		declaredAt: (48 to: 59)
		by: transactions.
	#_coverageTracker9002_
		coverAll:
			{61 to: 63}
		evaluating: [
			receiver2 do: [ :aTransaction |
				[ | receiver1 |
				receiver1 _ #_coverageTracker9002_
					cover: (82 to: 93)
					declaredAt: (67 to: 78)
					by: aTransaction.
				#_coverageTracker9002_
					coverAll:
						{95 to: 112}
					evaluating: [
						receiver1 affectTransferNet:
							(#_coverageTracker9002_
								cover: (114 to: 125)
								declaredAt: (31 to: 42)
								by: aTransferNet) ]
					thatSends: #affectTransferNet:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
formatWithTwoIndentations: aStringToFormat
	#_coverageTracker9010_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker9010_
		coverAll:
			{47 to: 50}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9010_
		coverAll:
			{52 to: 58. 76 to: 92}
		evaluating: [
			receiver1
				format:
					(#_coverageTracker9010_
						cover: (60 to: 74)
						declaredAt: (28 to: 42)
						by: aStringToFormat)
				withIndentations:
					(#_coverageTracker9010_
						coverAll:
							{94 to: 94}
						byLiteralOrPseudoVariable: 2) ]
		thatSends: #format:withIndentations:
		to: receiver1 ] value.! !
!Behavior method!
test01TransferNetForNewAccountReturnsZero
	| transferNet |
	#_coverageTracker9022_ markAsExecuted.
	#_coverageTracker9022_
		cover: (64 to: 74)
		declaredAt: (47 to: 57)
		by:
			(transferNet _ [ | receiver2 |
			receiver2 _ #_coverageTracker9022_
				coverAll:
					{79 to: 89}
				by: TransferNet.
			#_coverageTracker9022_
				coverAll:
					{91 to: 94}
				evaluating: [
					receiver2 for:
						[ | receiver1 |
						receiver1 _ #_coverageTracker9022_
							coverAll:
								{96 to: 111}
							by: ReceptiveAccount.
						#_coverageTracker9022_
							coverAll:
								{113 to: 115}
							evaluating: [ receiver1 new ]
							thatSends: #new
							to: receiver1 ] value ]
				thatSends: #for:
				to: receiver2 ] value).
	[ | receiver4 |
	receiver4 _ #_coverageTracker9022_
		coverAll:
			{121 to: 124}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9022_
		coverAll:
			{126 to: 132. 136 to: 142}
		evaluating: [
			receiver4
				assert:
					(#_coverageTracker9022_
						coverAll:
							{134 to: 134}
						byLiteralOrPseudoVariable: 0)
				equals:
					[ | receiver3 |
					receiver3 _ #_coverageTracker9022_
						cover: (144 to: 154)
						declaredAt: (47 to: 57)
						by: transferNet.
					#_coverageTracker9022_
						coverAll:
							{156 to: 164}
						evaluating: [ receiver3 calculate ]
						thatSends: #calculate
						to: receiver3 ] value ]
		thatSends: #assert:equals:
		to: receiver4 ] value.! !
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker9029_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker9029_
		cover: (33 to: 44)
		declaredAt: (33 to: 44)
		by: transactions.
	#_coverageTracker9029_
		coverAll:
			{46 to: 54}
		evaluating: [
			receiver1 includes:
				(#_coverageTracker9029_
					cover: (56 to: 67)
					declaredAt: (16 to: 27)
					by: aTransaction) ]
		thatSends: #includes:
		to: receiver1 ] value.! !
!Behavior method!
addInTree: aPortfolioTreeFormat
	#_coverageTracker9038_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker9038_
		cover: (35 to: 54)
		declaredAt: (12 to: 31)
		by: aPortfolioTreeFormat.
	#_coverageTracker9038_
		coverAll:
			{56 to: 75}
		evaluating: [
			receiver1 addReceptiveAccount:
				(#_coverageTracker9038_
					coverAll:
						{77 to: 80}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addReceptiveAccount:
		to: receiver1 ] value.! !
!Behavior method!
on: aPortfolio
	#_coverageTracker9047_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker9047_
		coverAll:
			{21 to: 24}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9047_
		coverAll:
			{26 to: 28}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker9047_
		coverAll:
			{30 to: 42}
		evaluating: [
			receiver2 initializeOn:
				(#_coverageTracker9047_
					cover: (44 to: 53)
					declaredAt: (5 to: 14)
					by: aPortfolio) ]
		thatSends: #initializeOn:
		to: receiver2 ] value.! !
!Behavior method!
addDepositFor: anAmount
	#_coverageTracker9058_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker9058_
		cover: (29 to: 35)
		declaredAt: (29 to: 35)
		by: summary.
	#_coverageTracker9058_
		coverAll:
			{37 to: 40}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker9058_
					coverAll:
						{43 to: 46}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker9058_
					coverAll:
						{48 to: 65}
					evaluating: [
						receiver1 depositMessageFor:
							(#_coverageTracker9058_
								cover: (67 to: 74)
								declaredAt: (16 to: 23)
								by: anAmount) ]
					thatSends: #depositMessageFor:
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
test11PortfolioCanNotIncludeAccountOfItsPortfolios
	| account simplePortfolio composedPortfolio |
	#_coverageTracker9069_ markAsExecuted.
	#_coverageTracker9069_
		cover: (103 to: 109)
		declaredAt: (56 to: 62)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker9069_
				coverAll:
					{114 to: 129}
				by: ReceptiveAccount.
			#_coverageTracker9069_
				coverAll:
					{131 to: 133}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker9069_
		cover: (137 to: 151)
		declaredAt: (64 to: 78)
		by:
			(simplePortfolio _ [ | receiver2 |
			receiver2 _ #_coverageTracker9069_
				coverAll:
					{156 to: 164}
				by: Portfolio.
			#_coverageTracker9069_
				coverAll:
					{166 to: 170}
				evaluating: [
					receiver2 with:
						(#_coverageTracker9069_
							cover: (172 to: 178)
							declaredAt: (56 to: 62)
							by: account) ]
				thatSends: #with:
				to: receiver2 ] value).
	#_coverageTracker9069_
		cover: (182 to: 198)
		declaredAt: (80 to: 96)
		by:
			(composedPortfolio _ [ | receiver3 |
			receiver3 _ #_coverageTracker9069_
				coverAll:
					{203 to: 211}
				by: Portfolio.
			#_coverageTracker9069_
				coverAll:
					{213 to: 217}
				evaluating: [
					receiver3 with:
						(#_coverageTracker9069_
							cover: (219 to: 233)
							declaredAt: (64 to: 78)
							by: simplePortfolio) ]
				thatSends: #with:
				to: receiver3 ] value).
	[ | receiver13 |
	receiver13 _ #_coverageTracker9069_
		coverAll:
			{239 to: 242}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9069_
		coverAll:
			{247 to: 253. 292 to: 297. 331 to: 346}
		evaluating: [
			receiver13
				should: [
					[ | receiver4 |
					receiver4 _ #_coverageTracker9069_
						cover: (257 to: 273)
						declaredAt: (80 to: 96)
						by: composedPortfolio.
					#_coverageTracker9069_
						coverAll:
							{275 to: 278}
						evaluating: [
							receiver4 add:
								(#_coverageTracker9069_
									cover: (280 to: 286)
									declaredAt: (56 to: 62)
									by: account) ]
						thatSends: #add:
						to: receiver4 ] value ]
				raise:
					[ | receiver5 |
					receiver5 _ #_coverageTracker9069_
						coverAll:
							{299 to: 303}
						by: Error.
					#_coverageTracker9069_
						coverAll:
							{305 to: 305}
						evaluating: [
							receiver5 -
								(#_coverageTracker9069_
									coverAll:
										{307 to: 326}
									by: MessageNotUnderstood) ]
						thatSends: #-
						to: receiver5 ] value
				withExceptionDo: [ :anError |
					[ | receiver8 |
					receiver8 _ #_coverageTracker9069_
						coverAll:
							{364 to: 367}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker9069_
						coverAll:
							{369 to: 375. 416 to: 422}
						evaluating: [
							receiver8
								assert:
									[ | receiver6 |
									receiver6 _ #_coverageTracker9069_
										coverAll:
											{377 to: 385}
										by: Portfolio.
									#_coverageTracker9069_
										coverAll:
											{387 to: 414}
										evaluating: [ receiver6 canNotAddAccountErrorMessage ]
										thatSends: #canNotAddAccountErrorMessage
										to: receiver6 ] value
								equals:
									[ | receiver7 |
									receiver7 _ #_coverageTracker9069_
										cover: (424 to: 430)
										declaredAt: (351 to: 357)
										by: anError.
									#_coverageTracker9069_
										coverAll:
											{432 to: 442}
										evaluating: [ receiver7 messageText ]
										thatSends: #messageText
										to: receiver7 ] value ]
						thatSends: #assert:equals:
						to: receiver8 ] value.
					[ | receiver10 |
					receiver10 _ #_coverageTracker9069_
						coverAll:
							{448 to: 451}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker9069_
						coverAll:
							{453 to: 459. 463 to: 469}
						evaluating: [
							receiver10
								assert:
									(#_coverageTracker9069_
										coverAll:
											{461 to: 461}
										byLiteralOrPseudoVariable: 1)
								equals:
									[ | receiver9 |
									receiver9 _ #_coverageTracker9069_
										cover: (471 to: 487)
										declaredAt: (80 to: 96)
										by: composedPortfolio.
									#_coverageTracker9069_
										coverAll:
											{489 to: 500}
										evaluating: [ receiver9 accountsSize ]
										thatSends: #accountsSize
										to: receiver9 ] value ]
						thatSends: #assert:equals:
						to: receiver10 ] value.
					[ | receiver12 |
					receiver12 _ #_coverageTracker9069_
						coverAll:
							{506 to: 509}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker9069_
						coverAll:
							{511 to: 517}
						evaluating: [
							receiver12 assert:
								[ | receiver11 |
								receiver11 _ #_coverageTracker9069_
									cover: (520 to: 536)
									declaredAt: (80 to: 96)
									by: composedPortfolio.
								#_coverageTracker9069_
									coverAll:
										{538 to: 554}
									evaluating: [
										receiver11 accountsIncludes:
											(#_coverageTracker9069_
												cover: (556 to: 570)
												declaredAt: (64 to: 78)
												by: simplePortfolio) ]
									thatSends: #accountsIncludes:
									to: receiver11 ] value ]
						thatSends: #assert:
						to: receiver12 ] value ]]
		thatSends: #should:raise:withExceptionDo:
		to: receiver13 ] value.! !
!Behavior method!
initialize
	#_coverageTracker9097_ markAsExecuted.
	#_coverageTracker9097_
		coverAll:
			{20 to: 29}
		evaluating: [ super initialize ]
		thatSends: #initialize
		to: super.
	#_coverageTracker9097_
		cover: (33 to: 44)
		declaredAt: (33 to: 44)
		by:
			(transactions _ [ | receiver1 |
			receiver1 _ #_coverageTracker9097_
				coverAll:
					{49 to: 65}
				by: OrderedCollection.
			#_coverageTracker9097_
				coverAll:
					{67 to: 69}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).! !
!Behavior method!
format: aStringToFormat withIndentations: anAmountOfIdentations
	#_coverageTracker9108_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker9108_
		cover: (67 to: 87)
		declaredAt: (43 to: 63)
		by: anAmountOfIdentations.
	#_coverageTracker9108_
		coverAll:
			{89 to: 89}
		evaluating: [
			receiver1 =
				(#_coverageTracker9108_
					coverAll:
						{91 to: 91}
					byLiteralOrPseudoVariable: 0) ]
		thatSends: #=
		to: receiver1 ] value.
	#_coverageTracker9108_
		coverAll:
			{93 to: 99}
		evaluating: [ receiver2 ifTrue: [ ^ #_coverageTracker9108_
					cover: (103 to: 117)
					declaredAt: (9 to: 23)
					by: aStringToFormat ]]
		thatSends: #ifTrue:
		to: receiver2 ] value.
	^ [ | receiver5 |
	receiver5 _ #_coverageTracker9108_
		coverAll:
			{123 to: 126}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9108_
		coverAll:
			{128 to: 134. 162 to: 178}
		evaluating: [
			receiver5
				format:
					[ | receiver3 |
					receiver3 _ #_coverageTracker9108_
						coverAll:
							{137 to: 142}
						byLiteralOrPseudoVariable: '    '.
					#_coverageTracker9108_
						coverAll:
							{143 to: 143}
						evaluating: [
							receiver3 ,
								(#_coverageTracker9108_
									cover: (145 to: 159)
									declaredAt: (9 to: 23)
									by: aStringToFormat) ]
						thatSends: #,
						to: receiver3 ] value
				withIndentations:
					[ | receiver4 |
					receiver4 _ #_coverageTracker9108_
						cover: (180 to: 200)
						declaredAt: (43 to: 63)
						by: anAmountOfIdentations.
					#_coverageTracker9108_
						coverAll:
							{201 to: 201}
						evaluating: [
							receiver4 -
								(#_coverageTracker9108_
									coverAll:
										{201 to: 202}
									byLiteralOrPseudoVariable: 1) ]
						thatSends: #-
						to: receiver4 ] value ]
		thatSends: #format:withIndentations:
		to: receiver5 ] value.! !
!Behavior method!
test01PrintPortfolioNameInEmptyPortfolio
	| childrenPortfolio treeFormat |
	#_coverageTracker9123_ markAsExecuted.
	#_coverageTracker9123_
		cover: (80 to: 96)
		declaredAt: (46 to: 62)
		by:
			(childrenPortfolio _ [ | receiver1 |
			receiver1 _ #_coverageTracker9123_
				coverAll:
					{101 to: 109}
				by: Portfolio.
			#_coverageTracker9123_
				coverAll:
					{111 to: 116}
				evaluating: [
					receiver1 named:
						(#_coverageTracker9123_
							coverAll:
								{118 to: 137}
							byLiteralOrPseudoVariable: 'Portfolio de hijos') ]
				thatSends: #named:
				to: receiver1 ] value).
	#_coverageTracker9123_
		cover: (141 to: 150)
		declaredAt: (64 to: 73)
		by:
			(treeFormat _ [ | receiver2 |
			receiver2 _ #_coverageTracker9123_
				coverAll:
					{155 to: 173}
				by: PortfolioTreeFormat.
			#_coverageTracker9123_
				coverAll:
					{175 to: 177}
				evaluating: [
					receiver2 on:
						(#_coverageTracker9123_
							cover: (179 to: 195)
							declaredAt: (46 to: 62)
							by: childrenPortfolio) ]
				thatSends: #on:
				to: receiver2 ] value).
	[ | receiver5 |
	receiver5 _ #_coverageTracker9123_
		coverAll:
			{201 to: 204}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9123_
		coverAll:
			{206 to: 212. 261 to: 267}
		evaluating: [
			receiver5
				assert:
					[ | receiver3 |
					receiver3 _ #_coverageTracker9123_
						coverAll:
							{215 to: 231}
						by: OrderedCollection.
					#_coverageTracker9123_
						coverAll:
							{233 to: 237}
						evaluating: [
							receiver3 with:
								(#_coverageTracker9123_
									coverAll:
										{239 to: 258}
									byLiteralOrPseudoVariable: 'Portfolio de hijos') ]
						thatSends: #with:
						to: receiver3 ] value
				equals:
					[ | receiver4 |
					receiver4 _ #_coverageTracker9123_
						cover: (270 to: 279)
						declaredAt: (64 to: 73)
						by: treeFormat.
					#_coverageTracker9123_
						coverAll:
							{281 to: 289}
						evaluating: [ receiver4 calculate ]
						thatSends: #calculate
						to: receiver4 ] value ]
		thatSends: #assert:equals:
		to: receiver5 ] value.! !
!Behavior method!
affectTransferNet: aTransferNet
	#_coverageTracker9133_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker9133_
		cover: (37 to: 48)
		declaredAt: (20 to: 31)
		by: aTransferNet.
	#_coverageTracker9133_
		coverAll:
			{50 to: 72}
		evaluating: [
			receiver2 addTransferWithdrawFor:
				[ | receiver1 |
				receiver1 _ #_coverageTracker9133_
					coverAll:
						{74 to: 77}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker9133_
					coverAll:
						{79 to: 83}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #addTransferWithdrawFor:
		to: receiver2 ] value.! !
!Behavior method!
test03LegsInTransferHaveSameTransfer
	| transfer depositLegTransfer withdrawLegTransfer |
	#_coverageTracker9150_ markAsExecuted.
	#_coverageTracker9150_
		cover: (94 to: 101)
		declaredAt: (42 to: 49)
		by:
			(transfer _ [ | receiver1 |
			receiver1 _ #_coverageTracker9150_
				coverAll:
					{107 to: 110}
				byLiteralOrPseudoVariable: self.
			#_coverageTracker9150_
				coverAll:
					{112 to: 143}
				evaluating: [ receiver1 createTransferBetweenTwoAccounts ]
				thatSends: #createTransferBetweenTwoAccounts
				to: receiver1 ] value).
	#_coverageTracker9150_
		cover: (149 to: 166)
		declaredAt: (51 to: 68)
		by:
			(depositLegTransfer _ [ | receiver3 |
			receiver3 _ [ | receiver2 |
			receiver2 _ #_coverageTracker9150_
				cover: (171 to: 178)
				declaredAt: (42 to: 49)
				by: transfer.
			#_coverageTracker9150_
				coverAll:
					{180 to: 189}
				evaluating: [ receiver2 depositLeg ]
				thatSends: #depositLeg
				to: receiver2 ] value.
			#_coverageTracker9150_
				coverAll:
					{191 to: 198}
				evaluating: [ receiver3 transfer ]
				thatSends: #transfer
				to: receiver3 ] value).
	#_coverageTracker9150_
		cover: (202 to: 220)
		declaredAt: (70 to: 88)
		by:
			(withdrawLegTransfer _ [ | receiver5 |
			receiver5 _ [ | receiver4 |
			receiver4 _ #_coverageTracker9150_
				cover: (225 to: 232)
				declaredAt: (42 to: 49)
				by: transfer.
			#_coverageTracker9150_
				coverAll:
					{234 to: 244}
				evaluating: [ receiver4 withdrawLeg ]
				thatSends: #withdrawLeg
				to: receiver4 ] value.
			#_coverageTracker9150_
				coverAll:
					{246 to: 253}
				evaluating: [ receiver5 transfer ]
				thatSends: #transfer
				to: receiver5 ] value).
	[ | receiver6 |
	receiver6 _ #_coverageTracker9150_
		coverAll:
			{259 to: 262}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9150_
		coverAll:
			{264 to: 270. 291 to: 297}
		evaluating: [
			receiver6
				assert:
					(#_coverageTracker9150_
						cover: (272 to: 289)
						declaredAt: (51 to: 68)
						by: depositLegTransfer)
				equals:
					(#_coverageTracker9150_
						cover: (299 to: 317)
						declaredAt: (70 to: 88)
						by: withdrawLegTransfer) ]
		thatSends: #assert:equals:
		to: receiver6 ] value.! !
!Behavior method!
test04TransferNetForAccountWithWithdrawTenIsZero
	| transferNet account |
	#_coverageTracker9160_ markAsExecuted.
	#_coverageTracker9160_
		cover: (79 to: 85)
		declaredAt: (66 to: 72)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker9160_
				coverAll:
					{90 to: 105}
				by: ReceptiveAccount.
			#_coverageTracker9160_
				coverAll:
					{107 to: 109}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker9160_
		coverAll:
			{113 to: 120}
		by: Withdraw.
	#_coverageTracker9160_
		coverAll:
			{122 to: 130. 135 to: 137}
		evaluating: [
			receiver2
				register:
					(#_coverageTracker9160_
						coverAll:
							{132 to: 133}
						byLiteralOrPseudoVariable: 10)
				on:
					(#_coverageTracker9160_
						cover: (139 to: 145)
						declaredAt: (66 to: 72)
						by: account) ]
		thatSends: #register:on:
		to: receiver2 ] value.
	#_coverageTracker9160_
		cover: (152 to: 162)
		declaredAt: (54 to: 64)
		by:
			(transferNet _ [ | receiver3 |
			receiver3 _ #_coverageTracker9160_
				coverAll:
					{167 to: 177}
				by: TransferNet.
			#_coverageTracker9160_
				coverAll:
					{179 to: 182}
				evaluating: [
					receiver3 for:
						(#_coverageTracker9160_
							cover: (184 to: 190)
							declaredAt: (66 to: 72)
							by: account) ]
				thatSends: #for:
				to: receiver3 ] value).
	[ | receiver5 |
	receiver5 _ #_coverageTracker9160_
		coverAll:
			{196 to: 199}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9160_
		coverAll:
			{201 to: 207. 211 to: 217}
		evaluating: [
			receiver5
				assert:
					(#_coverageTracker9160_
						coverAll:
							{209 to: 209}
						byLiteralOrPseudoVariable: 0)
				equals:
					[ | receiver4 |
					receiver4 _ #_coverageTracker9160_
						cover: (219 to: 229)
						declaredAt: (54 to: 64)
						by: transferNet.
					#_coverageTracker9160_
						coverAll:
							{231 to: 239}
						evaluating: [ receiver4 calculate ]
						thatSends: #calculate
						to: receiver4 ] value ]
		thatSends: #assert:equals:
		to: receiver5 ] value.! !
!Behavior method!
withdrawLeg
	#_coverageTracker9178_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker9178_
		cover: (15 to: 22)
		declaredAt: (15 to: 22)
		by: transfer.
	#_coverageTracker9178_
		coverAll:
			{24 to: 34}
		evaluating: [ receiver1 withdrawLeg ]
		thatSends: #withdrawLeg
		to: receiver1 ] value.! !
!Behavior method!
anyRootParentIsComposedBy: accountToAdd
	#_coverageTracker9182_ markAsExecuted.
	^ [ | receiver3 |
	receiver3 _ [ | receiver1 |
	receiver1 _ #_coverageTracker9182_
		coverAll:
			{44 to: 47}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9182_
		coverAll:
			{49 to: 59}
		evaluating: [ receiver1 rootParents ]
		thatSends: #rootParents
		to: receiver1 ] value.
	#_coverageTracker9182_
		coverAll:
			{61 to: 71}
		evaluating: [
			receiver3 anySatisfy: [ :aParent |
				[ | receiver2 |
				receiver2 _ #_coverageTracker9182_
					cover: (86 to: 92)
					declaredAt: (76 to: 82)
					by: aParent.
				#_coverageTracker9182_
					coverAll:
						{94 to: 106}
					evaluating: [
						receiver2 isComposedBy:
							(#_coverageTracker9182_
								cover: (108 to: 119)
								declaredAt: (28 to: 39)
								by: accountToAdd) ]
					thatSends: #isComposedBy:
					to: receiver2 ] value ]]
		thatSends: #anySatisfy:
		to: receiver3 ] value.! !
!Behavior method!
addName: anAccountName
	#_coverageTracker9192_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker9192_
		cover: (26 to: 29)
		declaredAt: (26 to: 29)
		by: tree.
	#_coverageTracker9192_
		coverAll:
			{31 to: 34}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker9192_
					cover: (36 to: 42)
					declaredAt: (36 to: 42)
					by: indents.
				#_coverageTracker9192_
					coverAll:
						{43 to: 43}
					evaluating: [
						receiver1 ,
							(#_coverageTracker9192_
								cover: (44 to: 56)
								declaredAt: (10 to: 22)
								by: anAccountName) ]
					thatSends: #,
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
depositMessageFor: anAmount
	#_coverageTracker9201_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker9201_
		coverAll:
			{33 to: 46}
		byLiteralOrPseudoVariable: 'Depósito de '.
	#_coverageTracker9201_
		coverAll:
			{47 to: 47}
		evaluating: [
			receiver2 ,
				[ | receiver1 |
				receiver1 _ #_coverageTracker9201_
					cover: (49 to: 56)
					declaredAt: (20 to: 27)
					by: anAmount.
				#_coverageTracker9201_
					coverAll:
						{58 to: 65}
					evaluating: [ receiver1 asString ]
					thatSends: #asString
					to: receiver1 ] value ]
		thatSends: #,
		to: receiver2 ] value.! !
!Behavior method!
name
	#_coverageTracker9215_ markAsExecuted.
	^ #_coverageTracker9215_
		cover: (9 to: 12)
		declaredAt: (9 to: 12)
		by: name.! !
!Behavior method!
affectBalance: aBalance
	#_coverageTracker9223_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker9223_
		cover: (28 to: 35)
		declaredAt: (16 to: 23)
		by: aBalance.
	#_coverageTracker9223_
		coverAll:
			{37 to: 37}
		evaluating: [
			receiver2 +
				[ | receiver1 |
				receiver1 _ #_coverageTracker9223_
					coverAll:
						{39 to: 42}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker9223_
					coverAll:
						{44 to: 48}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #+
		to: receiver2 ] value.! !
!Behavior method!
for: aValue
	#_coverageTracker9230_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker9230_
		coverAll:
			{17 to: 20}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9230_
		coverAll:
			{22 to: 24}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker9230_
		coverAll:
			{26 to: 39}
		evaluating: [
			receiver2 initializeFor:
				(#_coverageTracker9230_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ]
		thatSends: #initializeFor:
		to: receiver2 ] value.! !
!Behavior method!
addTransferDepositFor: anAmount
	#_coverageTracker9240_ markAsExecuted.
	#_coverageTracker9240_
		cover: (51 to: 61)
		declaredAt: (36 to: 46)
		by:
			(transferNet _ [ | receiver1 |
			receiver1 _ #_coverageTracker9240_
				cover: (36 to: 46)
				declaredAt: (36 to: 46)
				by: transferNet.
			#_coverageTracker9240_
				coverAll:
					{63 to: 63}
				evaluating: [
					receiver1 +
						(#_coverageTracker9240_
							cover: (65 to: 72)
							declaredAt: (24 to: 31)
							by: anAmount) ]
				thatSends: #+
				to: receiver1 ] value).! !
!Behavior method!
test04PortfolioWithoutAccountsHasNoRegisteredTransaction
	#_coverageTracker9253_ markAsExecuted.
	[ | receiver4 |
	receiver4 _ #_coverageTracker9253_
		coverAll:
			{60 to: 63}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9253_
		coverAll:
			{65 to: 69}
		evaluating: [
			receiver4 deny:
				[ | receiver3 |
				receiver3 _ [ | receiver1 |
				receiver1 _ #_coverageTracker9253_
					coverAll:
						{72 to: 80}
					by: Portfolio.
				#_coverageTracker9253_
					coverAll:
						{82 to: 84}
					evaluating: [ receiver1 new ]
					thatSends: #new
					to: receiver1 ] value.
				#_coverageTracker9253_
					coverAll:
						{86 to: 99}
					evaluating: [
						receiver3 hasRegistered:
							[ | receiver2 |
							receiver2 _ #_coverageTracker9253_
								coverAll:
									{102 to: 108}
								by: Deposit.
							#_coverageTracker9253_
								coverAll:
									{110 to: 113}
								evaluating: [
									receiver2 for:
										(#_coverageTracker9253_
											coverAll:
												{115 to: 117}
											byLiteralOrPseudoVariable: 100) ]
								thatSends: #for:
								to: receiver2 ] value ]
					thatSends: #hasRegistered:
					to: receiver3 ] value ]
		thatSends: #deny:
		to: receiver4 ] value.! !
!Behavior method!
addedTo: aPortfolio
	#_coverageTracker9261_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker9261_
		cover: (25 to: 31)
		declaredAt: (25 to: 31)
		by: parents.
	#_coverageTracker9261_
		coverAll:
			{33 to: 36}
		evaluating: [
			receiver1 add:
				(#_coverageTracker9261_
					cover: (38 to: 47)
					declaredAt: (10 to: 19)
					by: aPortfolio) ]
		thatSends: #add:
		to: receiver1 ] value.! !
!Behavior method!
initialize
	#_coverageTracker9271_ markAsExecuted.
	#_coverageTracker9271_
		cover: (14 to: 21)
		declaredAt: (14 to: 21)
		by:
			(accounts _ [ | receiver1 |
			receiver1 _ #_coverageTracker9271_
				coverAll:
					{26 to: 42}
				by: OrderedCollection.
			#_coverageTracker9271_
				coverAll:
					{44 to: 46}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker9271_
		cover: (50 to: 56)
		declaredAt: (50 to: 56)
		by:
			(parents _ [ | receiver2 |
			receiver2 _ #_coverageTracker9271_
				coverAll:
					{61 to: 77}
				by: OrderedCollection.
			#_coverageTracker9271_
				coverAll:
					{79 to: 81}
				evaluating: [ receiver2 new ]
				thatSends: #new
				to: receiver2 ] value).! !
!Behavior method!
test06TransferNetForPortfolioWithTwoTransferAccountsIsZero
	| senderAccount receiverAccount portfolio transferNet |
	#_coverageTracker9282_ markAsExecuted.
	#_coverageTracker9282_
		cover: (121 to: 133)
		declaredAt: (64 to: 76)
		by:
			(senderAccount _ [ | receiver1 |
			receiver1 _ #_coverageTracker9282_
				coverAll:
					{138 to: 153}
				by: ReceptiveAccount.
			#_coverageTracker9282_
				coverAll:
					{155 to: 157}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker9282_
		cover: (161 to: 175)
		declaredAt: (78 to: 92)
		by:
			(receiverAccount _ [ | receiver2 |
			receiver2 _ #_coverageTracker9282_
				coverAll:
					{180 to: 195}
				by: ReceptiveAccount.
			#_coverageTracker9282_
				coverAll:
					{197 to: 199}
				evaluating: [ receiver2 new ]
				thatSends: #new
				to: receiver2 ] value).
	#_coverageTracker9282_
		cover: (203 to: 211)
		declaredAt: (94 to: 102)
		by:
			(portfolio _ [ | receiver3 |
			receiver3 _ #_coverageTracker9282_
				coverAll:
					{216 to: 224}
				by: Portfolio.
			#_coverageTracker9282_
				coverAll:
					{226 to: 230. 246 to: 250}
				evaluating: [
					receiver3
						with:
							(#_coverageTracker9282_
								cover: (232 to: 244)
								declaredAt: (64 to: 76)
								by: senderAccount)
						with:
							(#_coverageTracker9282_
								cover: (252 to: 266)
								declaredAt: (78 to: 92)
								by: receiverAccount) ]
				thatSends: #with:with:
				to: receiver3 ] value).
	[ | receiver4 |
	receiver4 _ #_coverageTracker9282_
		coverAll:
			{272 to: 279}
		by: Transfer.
	#_coverageTracker9282_
		coverAll:
			{281 to: 289. 295 to: 299. 315 to: 317}
		evaluating: [
			receiver4
				register:
					(#_coverageTracker9282_
						coverAll:
							{291 to: 293}
						byLiteralOrPseudoVariable: 100)
				from:
					(#_coverageTracker9282_
						cover: (301 to: 313)
						declaredAt: (64 to: 76)
						by: senderAccount)
				to:
					(#_coverageTracker9282_
						cover: (319 to: 333)
						declaredAt: (78 to: 92)
						by: receiverAccount) ]
		thatSends: #register:from:to:
		to: receiver4 ] value.
	#_coverageTracker9282_
		cover: (339 to: 349)
		declaredAt: (104 to: 114)
		by:
			(transferNet _ [ | receiver5 |
			receiver5 _ #_coverageTracker9282_
				coverAll:
					{354 to: 364}
				by: TransferNet.
			#_coverageTracker9282_
				coverAll:
					{366 to: 369}
				evaluating: [
					receiver5 for:
						(#_coverageTracker9282_
							cover: (371 to: 379)
							declaredAt: (94 to: 102)
							by: portfolio) ]
				thatSends: #for:
				to: receiver5 ] value).
	[ | receiver7 |
	receiver7 _ #_coverageTracker9282_
		coverAll:
			{385 to: 388}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9282_
		coverAll:
			{390 to: 396. 400 to: 406}
		evaluating: [
			receiver7
				assert:
					(#_coverageTracker9282_
						coverAll:
							{398 to: 398}
						byLiteralOrPseudoVariable: 0)
				equals:
					[ | receiver6 |
					receiver6 _ #_coverageTracker9282_
						cover: (408 to: 418)
						declaredAt: (104 to: 114)
						by: transferNet.
					#_coverageTracker9282_
						coverAll:
							{420 to: 428}
						evaluating: [ receiver6 calculate ]
						thatSends: #calculate
						to: receiver6 ] value ]
		thatSends: #assert:equals:
		to: receiver7 ] value.! !
!Behavior method!
withdrawMessageFor: anAmount
	#_coverageTracker9301_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker9301_
		coverAll:
			{34 to: 49}
		byLiteralOrPseudoVariable: 'Extracción de '.
	#_coverageTracker9301_
		coverAll:
			{50 to: 50}
		evaluating: [
			receiver2 ,
				[ | receiver1 |
				receiver1 _ #_coverageTracker9301_
					cover: (52 to: 59)
					declaredAt: (21 to: 28)
					by: anAmount.
				#_coverageTracker9301_
					coverAll:
						{61 to: 68}
					evaluating: [ receiver1 asString ]
					thatSends: #asString
					to: receiver1 ] value ]
		thatSends: #,
		to: receiver2 ] value.! !
!Behavior method!
test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd
	| portfolioToAdd portfolioToModify rootPortfolio sharedAccount |
	#_coverageTracker9313_ markAsExecuted.
	#_coverageTracker9313_
		cover: (139 to: 151)
		declaredAt: (120 to: 132)
		by:
			(sharedAccount _ [ | receiver1 |
			receiver1 _ #_coverageTracker9313_
				coverAll:
					{156 to: 171}
				by: ReceptiveAccount.
			#_coverageTracker9313_
				coverAll:
					{173 to: 175}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker9313_
		cover: (179 to: 195)
		declaredAt: (88 to: 104)
		by:
			(portfolioToModify _ [ | receiver2 |
			receiver2 _ #_coverageTracker9313_
				coverAll:
					{200 to: 208}
				by: Portfolio.
			#_coverageTracker9313_
				coverAll:
					{210 to: 212}
				evaluating: [ receiver2 new ]
				thatSends: #new
				to: receiver2 ] value).
	#_coverageTracker9313_
		cover: (216 to: 228)
		declaredAt: (106 to: 118)
		by:
			(rootPortfolio _ [ | receiver3 |
			receiver3 _ #_coverageTracker9313_
				coverAll:
					{233 to: 241}
				by: Portfolio.
			#_coverageTracker9313_
				coverAll:
					{243 to: 247. 263 to: 267}
				evaluating: [
					receiver3
						with:
							(#_coverageTracker9313_
								cover: (249 to: 261)
								declaredAt: (120 to: 132)
								by: sharedAccount)
						with:
							(#_coverageTracker9313_
								cover: (269 to: 285)
								declaredAt: (88 to: 104)
								by: portfolioToModify) ]
				thatSends: #with:with:
				to: receiver3 ] value).
	#_coverageTracker9313_
		cover: (289 to: 302)
		declaredAt: (73 to: 86)
		by:
			(portfolioToAdd _ [ | receiver4 |
			receiver4 _ #_coverageTracker9313_
				coverAll:
					{307 to: 315}
				by: Portfolio.
			#_coverageTracker9313_
				coverAll:
					{317 to: 321}
				evaluating: [
					receiver4 with:
						(#_coverageTracker9313_
							cover: (323 to: 335)
							declaredAt: (120 to: 132)
							by: sharedAccount) ]
				thatSends: #with:
				to: receiver4 ] value).
	[ | receiver12 |
	receiver12 _ #_coverageTracker9313_
		coverAll:
			{341 to: 344}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9313_
		coverAll:
			{349 to: 355. 401 to: 406. 440 to: 455}
		evaluating: [
			receiver12
				should: [
					[ | receiver5 |
					receiver5 _ #_coverageTracker9313_
						cover: (359 to: 375)
						declaredAt: (88 to: 104)
						by: portfolioToModify.
					#_coverageTracker9313_
						coverAll:
							{377 to: 380}
						evaluating: [
							receiver5 add:
								(#_coverageTracker9313_
									cover: (382 to: 395)
									declaredAt: (73 to: 86)
									by: portfolioToAdd) ]
						thatSends: #add:
						to: receiver5 ] value ]
				raise:
					[ | receiver6 |
					receiver6 _ #_coverageTracker9313_
						coverAll:
							{408 to: 412}
						by: Error.
					#_coverageTracker9313_
						coverAll:
							{414 to: 414}
						evaluating: [
							receiver6 -
								(#_coverageTracker9313_
									coverAll:
										{416 to: 435}
									by: MessageNotUnderstood) ]
						thatSends: #-
						to: receiver6 ] value
				withExceptionDo: [ :anError |
					[ | receiver9 |
					receiver9 _ #_coverageTracker9313_
						coverAll:
							{474 to: 477}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker9313_
						coverAll:
							{479 to: 485. 526 to: 532}
						evaluating: [
							receiver9
								assert:
									[ | receiver7 |
									receiver7 _ #_coverageTracker9313_
										coverAll:
											{487 to: 495}
										by: Portfolio.
									#_coverageTracker9313_
										coverAll:
											{497 to: 524}
										evaluating: [ receiver7 canNotAddAccountErrorMessage ]
										thatSends: #canNotAddAccountErrorMessage
										to: receiver7 ] value
								equals:
									[ | receiver8 |
									receiver8 _ #_coverageTracker9313_
										cover: (534 to: 540)
										declaredAt: (460 to: 466)
										by: anError.
									#_coverageTracker9313_
										coverAll:
											{542 to: 552}
										evaluating: [ receiver8 messageText ]
										thatSends: #messageText
										to: receiver8 ] value ]
						thatSends: #assert:equals:
						to: receiver9 ] value.
					[ | receiver11 |
					receiver11 _ #_coverageTracker9313_
						coverAll:
							{558 to: 561}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker9313_
						coverAll:
							{563 to: 569}
						evaluating: [
							receiver11 assert:
								[ | receiver10 |
								receiver10 _ #_coverageTracker9313_
									cover: (571 to: 587)
									declaredAt: (88 to: 104)
									by: portfolioToModify.
								#_coverageTracker9313_
									coverAll:
										{589 to: 603}
									evaluating: [ receiver10 accountsIsEmpty ]
									thatSends: #accountsIsEmpty
									to: receiver10 ] value ]
						thatSends: #assert:
						to: receiver11 ] value ]]
		thatSends: #should:raise:withExceptionDo:
		to: receiver12 ] value.! !
!Behavior method!
addTransferDepositFor: anAmount
	#_coverageTracker9341_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker9341_
		cover: (37 to: 43)
		declaredAt: (37 to: 43)
		by: summary.
	#_coverageTracker9341_
		coverAll:
			{45 to: 48}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker9341_
					coverAll:
						{51 to: 54}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker9341_
					coverAll:
						{56 to: 81}
					evaluating: [
						receiver1 transferDepositMessageFor:
							(#_coverageTracker9341_
								cover: (83 to: 90)
								declaredAt: (24 to: 31)
								by: anAmount) ]
					thatSends: #transferDepositMessageFor:
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
initializeWithName: aName
	#_coverageTracker9350_ markAsExecuted.
	#_coverageTracker9350_
		cover: (30 to: 33)
		declaredAt: (30 to: 33)
		by:
			(name _ #_coverageTracker9350_
				cover: (38 to: 42)
				declaredAt: (21 to: 25)
				by: aName).
	[ | receiver1 |
	receiver1 _ #_coverageTracker9350_
		coverAll:
			{46 to: 49}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9350_
		coverAll:
			{51 to: 60}
		evaluating: [ receiver1 initialize ]
		thatSends: #initialize
		to: receiver1 ] value.! !
!Behavior method!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions
	| account deposit withdraw |
	#_coverageTracker9359_ markAsExecuted.
	#_coverageTracker9359_
		cover: (92 to: 98)
		declaredAt: (62 to: 68)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker9359_
				coverAll:
					{103 to: 118}
				by: ReceptiveAccount.
			#_coverageTracker9359_
				coverAll:
					{120 to: 122}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker9359_
		cover: (126 to: 132)
		declaredAt: (70 to: 76)
		by:
			(deposit _ [ | receiver2 |
			receiver2 _ #_coverageTracker9359_
				coverAll:
					{138 to: 144}
				by: Deposit.
			#_coverageTracker9359_
				coverAll:
					{146 to: 149}
				evaluating: [
					receiver2 for:
						(#_coverageTracker9359_
							coverAll:
								{151 to: 153}
							byLiteralOrPseudoVariable: 100) ]
				thatSends: #for:
				to: receiver2 ] value).
	#_coverageTracker9359_
		cover: (157 to: 164)
		declaredAt: (78 to: 85)
		by:
			(withdraw _ [ | receiver3 |
			receiver3 _ #_coverageTracker9359_
				coverAll:
					{169 to: 176}
				by: Withdraw.
			#_coverageTracker9359_
				coverAll:
					{178 to: 181}
				evaluating: [
					receiver3 for:
						(#_coverageTracker9359_
							coverAll:
								{183 to: 184}
							byLiteralOrPseudoVariable: 50) ]
				thatSends: #for:
				to: receiver3 ] value).
	[ | receiver5 |
	receiver5 _ #_coverageTracker9359_
		coverAll:
			{191 to: 194}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9359_
		coverAll:
			{196 to: 200}
		evaluating: [
			receiver5 deny:
				[ | receiver4 |
				receiver4 _ #_coverageTracker9359_
					cover: (203 to: 209)
					declaredAt: (62 to: 68)
					by: account.
				#_coverageTracker9359_
					coverAll:
						{211 to: 224}
					evaluating: [
						receiver4 hasRegistered:
							(#_coverageTracker9359_
								cover: (226 to: 232)
								declaredAt: (70 to: 76)
								by: deposit) ]
					thatSends: #hasRegistered:
					to: receiver4 ] value ]
		thatSends: #deny:
		to: receiver5 ] value.
	[ | receiver7 |
	receiver7 _ #_coverageTracker9359_
		coverAll:
			{237 to: 240}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9359_
		coverAll:
			{242 to: 246}
		evaluating: [
			receiver7 deny:
				[ | receiver6 |
				receiver6 _ #_coverageTracker9359_
					cover: (249 to: 255)
					declaredAt: (62 to: 68)
					by: account.
				#_coverageTracker9359_
					coverAll:
						{257 to: 270}
					evaluating: [
						receiver6 hasRegistered:
							(#_coverageTracker9359_
								cover: (271 to: 278)
								declaredAt: (78 to: 85)
								by: withdraw) ]
					thatSends: #hasRegistered:
					to: receiver6 ] value ]
		thatSends: #deny:
		to: receiver7 ] value.! !
!Behavior method!
initializeWithName: aName
	#_coverageTracker9370_ markAsExecuted.
	#_coverageTracker9370_
		cover: (30 to: 33)
		declaredAt: (30 to: 33)
		by:
			(name _ #_coverageTracker9370_
				cover: (38 to: 42)
				declaredAt: (21 to: 25)
				by: aName).
	[ | receiver1 |
	receiver1 _ #_coverageTracker9370_
		coverAll:
			{46 to: 49}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9370_
		coverAll:
			{51 to: 60}
		evaluating: [ receiver1 initialize ]
		thatSends: #initialize
		to: receiver1 ] value.! !
!Behavior method!
test03WithdrawDecreasesBalanceOnTransactionValue
	| account |
	#_coverageTracker9385_ markAsExecuted.
	#_coverageTracker9385_
		cover: (68 to: 74)
		declaredAt: (55 to: 61)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker9385_
				coverAll:
					{79 to: 94}
				by: ReceptiveAccount.
			#_coverageTracker9385_
				coverAll:
					{96 to: 98}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker9385_
		coverAll:
			{102 to: 108}
		by: Deposit.
	#_coverageTracker9385_
		coverAll:
			{110 to: 118. 124 to: 126}
		evaluating: [
			receiver2
				register:
					(#_coverageTracker9385_
						coverAll:
							{120 to: 122}
						byLiteralOrPseudoVariable: 100)
				on:
					(#_coverageTracker9385_
						cover: (128 to: 134)
						declaredAt: (55 to: 61)
						by: account) ]
		thatSends: #register:on:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ #_coverageTracker9385_
		coverAll:
			{138 to: 145}
		by: Withdraw.
	#_coverageTracker9385_
		coverAll:
			{147 to: 155. 160 to: 162}
		evaluating: [
			receiver3
				register:
					(#_coverageTracker9385_
						coverAll:
							{157 to: 158}
						byLiteralOrPseudoVariable: 50)
				on:
					(#_coverageTracker9385_
						cover: (164 to: 170)
						declaredAt: (55 to: 61)
						by: account) ]
		thatSends: #register:on:
		to: receiver3 ] value.
	[ | receiver5 |
	receiver5 _ #_coverageTracker9385_
		coverAll:
			{177 to: 180}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9385_
		coverAll:
			{182 to: 188. 193 to: 199}
		evaluating: [
			receiver5
				assert:
					(#_coverageTracker9385_
						coverAll:
							{190 to: 191}
						byLiteralOrPseudoVariable: 50)
				equals:
					[ | receiver4 |
					receiver4 _ #_coverageTracker9385_
						cover: (201 to: 207)
						declaredAt: (55 to: 61)
						by: account.
					#_coverageTracker9385_
						coverAll:
							{209 to: 215}
						evaluating: [ receiver4 balance ]
						thatSends: #balance
						to: receiver4 ] value ]
		thatSends: #assert:equals:
		to: receiver5 ] value.! !
!Behavior method!
addTransactionInSummary: aSummary
	#_coverageTracker9394_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker9394_
		cover: (37 to: 44)
		declaredAt: (26 to: 33)
		by: aSummary.
	#_coverageTracker9394_
		coverAll:
			{46 to: 60}
		evaluating: [
			receiver1 addWithdrawFor:
				(#_coverageTracker9394_
					cover: (62 to: 66)
					declaredAt: (62 to: 66)
					by: value) ]
		thatSends: #addWithdrawFor:
		to: receiver1 ] value.! !
!Behavior method!
isComposedBy: anAccount
	#_coverageTracker9406_ markAsExecuted.
	^ [ | receiver6 |
	receiver6 _ [ | receiver1 |
	receiver1 _ #_coverageTracker9406_
		coverAll:
			{29 to: 32}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9406_
		coverAll:
			{34 to: 34}
		evaluating: [
			receiver1 =
				(#_coverageTracker9406_
					cover: (36 to: 44)
					declaredAt: (15 to: 23)
					by: anAccount) ]
		thatSends: #=
		to: receiver1 ] value.
	#_coverageTracker9406_
		coverAll:
			{46 to: 48}
		evaluating: [
			receiver6 or: [
				[ | receiver5 |
				receiver5 _ #_coverageTracker9406_
					cover: (52 to: 59)
					declaredAt: (52 to: 59)
					by: accounts.
				#_coverageTracker9406_
					coverAll:
						{61 to: 71}
					evaluating: [
						receiver5 anySatisfy: [ :composedAccount |
							[ | receiver4 |
							receiver4 _ [ | receiver2 |
							receiver2 _ #_coverageTracker9406_
								cover: (95 to: 109)
								declaredAt: (76 to: 90)
								by: composedAccount.
							#_coverageTracker9406_
								coverAll:
									{111 to: 123}
								evaluating: [
									receiver2 isComposedBy:
										(#_coverageTracker9406_
											cover: (125 to: 133)
											declaredAt: (15 to: 23)
											by: anAccount) ]
								thatSends: #isComposedBy:
								to: receiver2 ] value.
							#_coverageTracker9406_
								coverAll:
									{136 to: 138}
								evaluating: [
									receiver4 or: [
										[ | receiver3 |
										receiver3 _ #_coverageTracker9406_
											cover: (142 to: 150)
											declaredAt: (15 to: 23)
											by: anAccount.
										#_coverageTracker9406_
											coverAll:
												{152 to: 164}
											evaluating: [
												receiver3 isComposedBy:
													(#_coverageTracker9406_
														cover: (166 to: 180)
														declaredAt: (76 to: 90)
														by: composedAccount) ]
											thatSends: #isComposedBy:
											to: receiver3 ] value ]]
								thatSends: #or:
								to: receiver4 ] value ]]
					thatSends: #anySatisfy:
					to: receiver5 ] value ]]
		thatSends: #or:
		to: receiver6 ] value.! !
!Behavior method!
initializeFor: anAccount
	#_coverageTracker9422_ markAsExecuted.
	#_coverageTracker9422_
		cover: (30 to: 36)
		declaredAt: (30 to: 36)
		by:
			(account _ #_coverageTracker9422_
				cover: (41 to: 49)
				declaredAt: (16 to: 24)
				by: anAccount).! !
!Behavior method!
named: aName with: anAccount with: anotherAccount with: aThirdAccount
	#_coverageTracker9427_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker9427_
		coverAll:
			{76 to: 79}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9427_
		coverAll:
			{81 to: 86. 94 to: 98. 110 to: 114}
		evaluating: [
			receiver1
				named:
					(#_coverageTracker9427_
						cover: (88 to: 92)
						declaredAt: (8 to: 12)
						by: aName)
				with:
					(#_coverageTracker9427_
						cover: (100 to: 108)
						declaredAt: (20 to: 28)
						by: anAccount)
				with:
					(#_coverageTracker9427_
						cover: (116 to: 129)
						declaredAt: (36 to: 49)
						by: anotherAccount) ]
		thatSends: #named:with:with:
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker9427_
		coverAll:
			{132 to: 135}
		evaluating: [
			receiver2 add:
				(#_coverageTracker9427_
					cover: (137 to: 149)
					declaredAt: (57 to: 69)
					by: aThirdAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker9427_
		coverAll:
			{152 to: 159}
		evaluating: [ receiver3 yourself ]
		thatSends: #yourself
		to: receiver3 ] value ] value.! !
!Behavior method!
test09PortfolioTransactionsAreCalculatedRecursively
	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortfolio composedPortfolioAccountWithdraw simplePortfolioAccountDeposit composedPortfolioTransactions |
	#_coverageTracker9441_ markAsExecuted.
	#_coverageTracker9441_
		cover: (237 to: 258)
		declaredAt: (57 to: 78)
		by:
			(simplePortfolioAccount _ [ | receiver1 |
			receiver1 _ #_coverageTracker9441_
				coverAll:
					{263 to: 278}
				by: ReceptiveAccount.
			#_coverageTracker9441_
				coverAll:
					{280 to: 282}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker9441_
		cover: (286 to: 314)
		declaredAt: (172 to: 200)
		by:
			(simplePortfolioAccountDeposit _ [ | receiver2 |
			receiver2 _ #_coverageTracker9441_
				coverAll:
					{319 to: 325}
				by: Deposit.
			#_coverageTracker9441_
				coverAll:
					{327 to: 335. 341 to: 343}
				evaluating: [
					receiver2
						register:
							(#_coverageTracker9441_
								coverAll:
									{337 to: 339}
								byLiteralOrPseudoVariable: 100)
						on:
							(#_coverageTracker9441_
								cover: (345 to: 366)
								declaredAt: (57 to: 78)
								by: simplePortfolioAccount) ]
				thatSends: #register:on:
				to: receiver2 ] value).
	#_coverageTracker9441_
		cover: (370 to: 384)
		declaredAt: (80 to: 94)
		by:
			(simplePortfolio _ [ | receiver3 |
			receiver3 _ #_coverageTracker9441_
				coverAll:
					{389 to: 397}
				by: Portfolio.
			#_coverageTracker9441_
				coverAll:
					{399 to: 403}
				evaluating: [
					receiver3 with:
						(#_coverageTracker9441_
							cover: (405 to: 426)
							declaredAt: (57 to: 78)
							by: simplePortfolioAccount) ]
				thatSends: #with:
				to: receiver3 ] value).
	#_coverageTracker9441_
		cover: (432 to: 455)
		declaredAt: (96 to: 119)
		by:
			(composedPortfolioAccount _ [ | receiver4 |
			receiver4 _ #_coverageTracker9441_
				coverAll:
					{460 to: 475}
				by: ReceptiveAccount.
			#_coverageTracker9441_
				coverAll:
					{477 to: 479}
				evaluating: [ receiver4 new ]
				thatSends: #new
				to: receiver4 ] value).
	#_coverageTracker9441_
		cover: (483 to: 514)
		declaredAt: (139 to: 170)
		by:
			(composedPortfolioAccountWithdraw _ [ | receiver5 |
			receiver5 _ #_coverageTracker9441_
				coverAll:
					{519 to: 526}
				by: Withdraw.
			#_coverageTracker9441_
				coverAll:
					{528 to: 536. 541 to: 543}
				evaluating: [
					receiver5
						register:
							(#_coverageTracker9441_
								coverAll:
									{538 to: 539}
								byLiteralOrPseudoVariable: 50)
						on:
							(#_coverageTracker9441_
								cover: (545 to: 568)
								declaredAt: (96 to: 119)
								by: composedPortfolioAccount) ]
				thatSends: #register:on:
				to: receiver5 ] value).
	#_coverageTracker9441_
		cover: (572 to: 588)
		declaredAt: (121 to: 137)
		by:
			(composedPortfolio _ [ | receiver6 |
			receiver6 _ #_coverageTracker9441_
				coverAll:
					{593 to: 601}
				by: Portfolio.
			#_coverageTracker9441_
				coverAll:
					{603 to: 607. 625 to: 629}
				evaluating: [
					receiver6
						with:
							(#_coverageTracker9441_
								cover: (609 to: 623)
								declaredAt: (80 to: 94)
								by: simplePortfolio)
						with:
							(#_coverageTracker9441_
								cover: (631 to: 654)
								declaredAt: (96 to: 119)
								by: composedPortfolioAccount) ]
				thatSends: #with:with:
				to: receiver6 ] value).
	#_coverageTracker9441_
		cover: (660 to: 688)
		declaredAt: (202 to: 230)
		by:
			(composedPortfolioTransactions _ [ | receiver7 |
			receiver7 _ #_coverageTracker9441_
				cover: (693 to: 709)
				declaredAt: (121 to: 137)
				by: composedPortfolio.
			#_coverageTracker9441_
				coverAll:
					{711 to: 722}
				evaluating: [ receiver7 transactions ]
				thatSends: #transactions
				to: receiver7 ] value).
	[ | receiver9 |
	receiver9 _ #_coverageTracker9441_
		coverAll:
			{726 to: 729}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9441_
		coverAll:
			{731 to: 737. 741 to: 747}
		evaluating: [
			receiver9
				assert:
					(#_coverageTracker9441_
						coverAll:
							{739 to: 739}
						byLiteralOrPseudoVariable: 2)
				equals:
					[ | receiver8 |
					receiver8 _ #_coverageTracker9441_
						cover: (749 to: 777)
						declaredAt: (202 to: 230)
						by: composedPortfolioTransactions.
					#_coverageTracker9441_
						coverAll:
							{779 to: 782}
						evaluating: [ receiver8 size ]
						thatSends: #size
						to: receiver8 ] value ]
		thatSends: #assert:equals:
		to: receiver9 ] value.
	[ | receiver11 |
	receiver11 _ #_coverageTracker9441_
		coverAll:
			{786 to: 789}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9441_
		coverAll:
			{791 to: 797}
		evaluating: [
			receiver11 assert:
				[ | receiver10 |
				receiver10 _ #_coverageTracker9441_
					cover: (800 to: 828)
					declaredAt: (202 to: 230)
					by: composedPortfolioTransactions.
				#_coverageTracker9441_
					coverAll:
						{830 to: 838}
					evaluating: [
						receiver10 includes:
							(#_coverageTracker9441_
								cover: (840 to: 868)
								declaredAt: (172 to: 200)
								by: simplePortfolioAccountDeposit) ]
					thatSends: #includes:
					to: receiver10 ] value ]
		thatSends: #assert:
		to: receiver11 ] value.
	[ | receiver13 |
	receiver13 _ #_coverageTracker9441_
		coverAll:
			{873 to: 876}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9441_
		coverAll:
			{878 to: 884}
		evaluating: [
			receiver13 assert:
				[ | receiver12 |
				receiver12 _ #_coverageTracker9441_
					cover: (887 to: 915)
					declaredAt: (202 to: 230)
					by: composedPortfolioTransactions.
				#_coverageTracker9441_
					coverAll:
						{917 to: 925}
					evaluating: [
						receiver12 includes:
							(#_coverageTracker9441_
								cover: (927 to: 958)
								declaredAt: (139 to: 170)
								by: composedPortfolioAccountWithdraw) ]
					thatSends: #includes:
					to: receiver12 ] value ]
		thatSends: #assert:
		to: receiver13 ] value.! !
!Behavior method!
transfer
	#_coverageTracker9479_ markAsExecuted.
	^ #_coverageTracker9479_
		cover: (13 to: 20)
		declaredAt: (13 to: 20)
		by: transfer.! !
!Behavior method!
affectTransferNet: aTransferNet
	#_coverageTracker9495_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker9495_
		cover: (37 to: 48)
		declaredAt: (20 to: 31)
		by: aTransferNet.
	#_coverageTracker9495_
		coverAll:
			{50 to: 64}
		evaluating: [
			receiver1 addWithdrawFor:
				(#_coverageTracker9495_
					cover: (66 to: 70)
					declaredAt: (66 to: 70)
					by: value) ]
		thatSends: #addWithdrawFor:
		to: receiver1 ] value.! !
!Behavior method!
transactions
	#_coverageTracker9501_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker9501_
		cover: (19 to: 30)
		declaredAt: (19 to: 30)
		by: transactions.
	#_coverageTracker9501_
		coverAll:
			{32 to: 35}
		evaluating: [ receiver1 copy ]
		thatSends: #copy
		to: receiver1 ] value.! !
!Behavior method!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated
	| account |
	#_coverageTracker9512_ markAsExecuted.
	#_coverageTracker9512_
		cover: (70 to: 76)
		declaredAt: (57 to: 63)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker9512_
				coverAll:
					{81 to: 96}
				by: ReceptiveAccount.
			#_coverageTracker9512_
				coverAll:
					{98 to: 100}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver3 |
	receiver3 _ #_coverageTracker9512_
		coverAll:
			{105 to: 108}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9512_
		coverAll:
			{110 to: 116. 120 to: 126}
		evaluating: [
			receiver3
				assert:
					(#_coverageTracker9512_
						coverAll:
							{118 to: 118}
						byLiteralOrPseudoVariable: 0)
				equals:
					[ | receiver2 |
					receiver2 _ #_coverageTracker9512_
						cover: (128 to: 134)
						declaredAt: (57 to: 63)
						by: account.
					#_coverageTracker9512_
						coverAll:
							{136 to: 142}
						evaluating: [ receiver2 balance ]
						thatSends: #balance
						to: receiver2 ] value ]
		thatSends: #assert:equals:
		to: receiver3 ] value.! !
!Behavior method!
withdrawLeg
	#_coverageTracker9521_ markAsExecuted.
	^ #_coverageTracker9521_
		cover: (17 to: 27)
		declaredAt: (17 to: 27)
		by: withdrawLeg.! !
!Behavior method!
rootParents
	| rootParents |
	#_coverageTracker9530_ markAsExecuted.
	#_coverageTracker9530_
		cover: (35 to: 45)
		declaredAt: (18 to: 28)
		by:
			(rootParents _ [ | receiver1 |
			receiver1 _ #_coverageTracker9530_
				coverAll:
					{50 to: 52}
				by: Set.
			#_coverageTracker9530_
				coverAll:
					{54 to: 56}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker9530_
		coverAll:
			{60 to: 63}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9530_
		coverAll:
			{65 to: 81}
		evaluating: [
			receiver2 addRootParentsTo:
				(#_coverageTracker9530_
					cover: (83 to: 93)
					declaredAt: (18 to: 28)
					by: rootParents) ]
		thatSends: #addRootParentsTo:
		to: receiver2 ] value.
	^ #_coverageTracker9530_
		cover: (101 to: 111)
		declaredAt: (18 to: 28)
		by: rootParents.! !
!Behavior method!
named: aName with: anAccount
	#_coverageTracker9542_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker9542_
		coverAll:
			{35 to: 38}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9542_
		coverAll:
			{40 to: 45}
		evaluating: [
			receiver1 named:
				(#_coverageTracker9542_
					cover: (47 to: 51)
					declaredAt: (8 to: 12)
					by: aName) ]
		thatSends: #named:
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker9542_
		coverAll:
			{54 to: 57}
		evaluating: [
			receiver2 add:
				(#_coverageTracker9542_
					cover: (59 to: 67)
					declaredAt: (20 to: 28)
					by: anAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker9542_
		coverAll:
			{70 to: 77}
		evaluating: [ receiver3 yourself ]
		thatSends: #yourself
		to: receiver3 ] value ] value.! !
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker9549_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker9549_
		cover: (32 to: 39)
		declaredAt: (32 to: 39)
		by: accounts.
	#_coverageTracker9549_
		coverAll:
			{41 to: 51}
		evaluating: [
			receiver2 anySatisfy: [ :anAccount |
				[ | receiver1 |
				receiver1 _ #_coverageTracker9549_
					cover: (68 to: 76)
					declaredAt: (56 to: 64)
					by: anAccount.
				#_coverageTracker9549_
					coverAll:
						{78 to: 91}
					evaluating: [
						receiver1 hasRegistered:
							(#_coverageTracker9549_
								cover: (93 to: 104)
								declaredAt: (16 to: 27)
								by: aTransaction) ]
					thatSends: #hasRegistered:
					to: receiver1 ] value ]]
		thatSends: #anySatisfy:
		to: receiver2 ] value.! !
!Behavior method!
value
	#_coverageTracker9560_ markAsExecuted.
	^ #_coverageTracker9560_
		cover: (11 to: 15)
		declaredAt: (11 to: 15)
		by: value.! !
!Behavior method!
test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce
	| account portfolio |
	#_coverageTracker9571_ markAsExecuted.
	#_coverageTracker9571_
		cover: (83 to: 89)
		declaredAt: (60 to: 66)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker9571_
				coverAll:
					{94 to: 109}
				by: ReceptiveAccount.
			#_coverageTracker9571_
				coverAll:
					{111 to: 113}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker9571_
		cover: (117 to: 125)
		declaredAt: (68 to: 76)
		by:
			(portfolio _ [ | receiver2 |
			receiver2 _ #_coverageTracker9571_
				coverAll:
					{130 to: 138}
				by: Portfolio.
			#_coverageTracker9571_
				coverAll:
					{140 to: 144}
				evaluating: [
					receiver2 with:
						(#_coverageTracker9571_
							cover: (146 to: 152)
							declaredAt: (60 to: 66)
							by: account) ]
				thatSends: #with:
				to: receiver2 ] value).
	[ | receiver12 |
	receiver12 _ #_coverageTracker9571_
		coverAll:
			{158 to: 161}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9571_
		coverAll:
			{166 to: 172. 203 to: 208. 242 to: 257}
		evaluating: [
			receiver12
				should: [
					[ | receiver3 |
					receiver3 _ #_coverageTracker9571_
						cover: (176 to: 184)
						declaredAt: (68 to: 76)
						by: portfolio.
					#_coverageTracker9571_
						coverAll:
							{186 to: 189}
						evaluating: [
							receiver3 add:
								(#_coverageTracker9571_
									cover: (191 to: 197)
									declaredAt: (60 to: 66)
									by: account) ]
						thatSends: #add:
						to: receiver3 ] value ]
				raise:
					[ | receiver4 |
					receiver4 _ #_coverageTracker9571_
						coverAll:
							{210 to: 214}
						by: Error.
					#_coverageTracker9571_
						coverAll:
							{216 to: 216}
						evaluating: [
							receiver4 -
								(#_coverageTracker9571_
									coverAll:
										{218 to: 237}
									by: MessageNotUnderstood) ]
						thatSends: #-
						to: receiver4 ] value
				withExceptionDo: [ :anError |
					[ | receiver7 |
					receiver7 _ #_coverageTracker9571_
						coverAll:
							{275 to: 278}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker9571_
						coverAll:
							{280 to: 286. 327 to: 333}
						evaluating: [
							receiver7
								assert:
									[ | receiver5 |
									receiver5 _ #_coverageTracker9571_
										coverAll:
											{288 to: 296}
										by: Portfolio.
									#_coverageTracker9571_
										coverAll:
											{298 to: 325}
										evaluating: [ receiver5 canNotAddAccountErrorMessage ]
										thatSends: #canNotAddAccountErrorMessage
										to: receiver5 ] value
								equals:
									[ | receiver6 |
									receiver6 _ #_coverageTracker9571_
										cover: (335 to: 341)
										declaredAt: (262 to: 268)
										by: anError.
									#_coverageTracker9571_
										coverAll:
											{343 to: 353}
										evaluating: [ receiver6 messageText ]
										thatSends: #messageText
										to: receiver6 ] value ]
						thatSends: #assert:equals:
						to: receiver7 ] value.
					[ | receiver9 |
					receiver9 _ #_coverageTracker9571_
						coverAll:
							{359 to: 362}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker9571_
						coverAll:
							{364 to: 370. 374 to: 380}
						evaluating: [
							receiver9
								assert:
									(#_coverageTracker9571_
										coverAll:
											{372 to: 372}
										byLiteralOrPseudoVariable: 1)
								equals:
									[ | receiver8 |
									receiver8 _ #_coverageTracker9571_
										cover: (382 to: 390)
										declaredAt: (68 to: 76)
										by: portfolio.
									#_coverageTracker9571_
										coverAll:
											{392 to: 403}
										evaluating: [ receiver8 accountsSize ]
										thatSends: #accountsSize
										to: receiver8 ] value ]
						thatSends: #assert:equals:
						to: receiver9 ] value.
					[ | receiver11 |
					receiver11 _ #_coverageTracker9571_
						coverAll:
							{409 to: 412}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker9571_
						coverAll:
							{414 to: 420}
						evaluating: [
							receiver11 assert:
								[ | receiver10 |
								receiver10 _ #_coverageTracker9571_
									cover: (423 to: 431)
									declaredAt: (68 to: 76)
									by: portfolio.
								#_coverageTracker9571_
									coverAll:
										{433 to: 449}
									evaluating: [
										receiver10 accountsIncludes:
											(#_coverageTracker9571_
												cover: (451 to: 457)
												declaredAt: (60 to: 66)
												by: account) ]
									thatSends: #accountsIncludes:
									to: receiver10 ] value ]
						thatSends: #assert:
						to: receiver11 ] value ]]
		thatSends: #should:raise:withExceptionDo:
		to: receiver12 ] value.! !
!Behavior method!
addTransactionsTo: aCollectionOfTransactions
	#_coverageTracker9598_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker9598_
		cover: (48 to: 55)
		declaredAt: (48 to: 55)
		by: accounts.
	#_coverageTracker9598_
		coverAll:
			{57 to: 59}
		evaluating: [
			receiver2 do: [ :anAccount |
				[ | receiver1 |
				receiver1 _ #_coverageTracker9598_
					cover: (76 to: 84)
					declaredAt: (64 to: 72)
					by: anAccount.
				#_coverageTracker9598_
					coverAll:
						{86 to: 103}
					evaluating: [
						receiver1 addTransactionsTo:
							(#_coverageTracker9598_
								cover: (105 to: 129)
								declaredAt: (20 to: 44)
								by: aCollectionOfTransactions) ]
					thatSends: #addTransactionsTo:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
affectBalance: aBalance
	#_coverageTracker9606_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker9606_
		cover: (28 to: 35)
		declaredAt: (16 to: 23)
		by: aBalance.
	#_coverageTracker9606_
		coverAll:
			{37 to: 37}
		evaluating: [
			receiver2 -
				[ | receiver1 |
				receiver1 _ #_coverageTracker9606_
					coverAll:
						{39 to: 42}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker9606_
					coverAll:
						{44 to: 48}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #-
		to: receiver2 ] value.! !
!Behavior method!
canNotAddAccountErrorMessage
	#_coverageTracker9613_ markAsExecuted.
	^ #_coverageTracker9613_
		coverAll:
			{34 to: 78}
		byLiteralOrPseudoVariable: 'Can not add repeated account to a portfolio'.! !
!Behavior method!
addTransactionsInTransferNet: aTransferNet
	#_coverageTracker9627_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker9627_
		cover: (48 to: 55)
		declaredAt: (48 to: 55)
		by: accounts.
	#_coverageTracker9627_
		coverAll:
			{57 to: 59}
		evaluating: [
			receiver2 do: [ :account |
				[ | receiver1 |
				receiver1 _ #_coverageTracker9627_
					cover: (73 to: 79)
					declaredAt: (63 to: 69)
					by: account.
				#_coverageTracker9627_
					coverAll:
						{81 to: 109}
					evaluating: [
						receiver1 addTransactionsInTransferNet:
							(#_coverageTracker9627_
								cover: (111 to: 122)
								declaredAt: (31 to: 42)
								by: aTransferNet) ]
					thatSends: #addTransactionsInTransferNet:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionInSummary: aSummary
	#_coverageTracker9634_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker9634_
		cover: (37 to: 44)
		declaredAt: (26 to: 33)
		by: aSummary.
	#_coverageTracker9634_
		coverAll:
			{46 to: 59}
		evaluating: [
			receiver1 addDepositFor:
				(#_coverageTracker9634_
					cover: (61 to: 65)
					declaredAt: (61 to: 65)
					by: value) ]
		thatSends: #addDepositFor:
		to: receiver1 ] value.! !
!Behavior method!
addTransactionsInSummary: anAccountSummary
	#_coverageTracker9644_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker9644_
		cover: (48 to: 55)
		declaredAt: (48 to: 55)
		by: accounts.
	#_coverageTracker9644_
		coverAll:
			{57 to: 59}
		evaluating: [
			receiver2 do: [ :anAccount |
				[ | receiver1 |
				receiver1 _ #_coverageTracker9644_
					cover: (76 to: 84)
					declaredAt: (64 to: 72)
					by: anAccount.
				#_coverageTracker9644_
					coverAll:
						{86 to: 110}
					evaluating: [
						receiver1 addTransactionsInSummary:
							(#_coverageTracker9644_
								cover: (112 to: 127)
								declaredAt: (27 to: 42)
								by: anAccountSummary) ]
					thatSends: #addTransactionsInSummary:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
transferDepositMessageFor: anAmount
	#_coverageTracker9653_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker9653_
		coverAll:
			{41 to: 71}
		byLiteralOrPseudoVariable: 'Entrada por transferencia de '.
	#_coverageTracker9653_
		coverAll:
			{72 to: 72}
		evaluating: [
			receiver2 ,
				[ | receiver1 |
				receiver1 _ #_coverageTracker9653_
					cover: (74 to: 81)
					declaredAt: (28 to: 35)
					by: anAmount.
				#_coverageTracker9653_
					coverAll:
						{83 to: 90}
					evaluating: [ receiver1 asString ]
					thatSends: #asString
					to: receiver1 ] value ]
		thatSends: #,
		to: receiver2 ] value.! !
!Behavior method!
addTransactionInSummary: aSummary
	#_coverageTracker9660_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker9660_
		cover: (37 to: 44)
		declaredAt: (26 to: 33)
		by: aSummary.
	#_coverageTracker9660_
		coverAll:
			{46 to: 67}
		evaluating: [
			receiver2 addTransferDepositFor:
				[ | receiver1 |
				receiver1 _ #_coverageTracker9660_
					coverAll:
						{69 to: 72}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker9660_
					coverAll:
						{74 to: 78}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #addTransferDepositFor:
		to: receiver2 ] value.! !
!Behavior method!
accountsSize
	#_coverageTracker9669_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker9669_
		cover: (18 to: 25)
		declaredAt: (18 to: 25)
		by: accounts.
	#_coverageTracker9669_
		coverAll:
			{27 to: 30}
		evaluating: [ receiver1 size ]
		thatSends: #size
		to: receiver1 ] value.! !
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker9683_ markAsExecuted.
	#_coverageTracker9683_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ [ | receiver1 |
			receiver1 _ #_coverageTracker9683_
				coverAll:
					{66 to: 69}
				byLiteralOrPseudoVariable: self.
			#_coverageTracker9683_
				coverAll:
					{71 to: 74}
				evaluating: [
					receiver1 for:
						(#_coverageTracker9683_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]
				thatSends: #for:
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker9683_
		cover: (85 to: 91)
		declaredAt: (22 to: 28)
		by: account.
	#_coverageTracker9683_
		coverAll:
			{93 to: 101}
		evaluating: [
			receiver2 register:
				(#_coverageTracker9683_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ]
		thatSends: #register:
		to: receiver2 ] value.
	^ #_coverageTracker9683_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
addDepositFor: anAmount
	#_coverageTracker9694_ markAsExecuted.! !
!Behavior method!
test05ReceptiveAccountKnowsRegisteredTransactions
	| account deposit withdraw |
	#_coverageTracker9711_ markAsExecuted.
	#_coverageTracker9711_
		cover: (86 to: 92)
		declaredAt: (56 to: 62)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker9711_
				coverAll:
					{97 to: 112}
				by: ReceptiveAccount.
			#_coverageTracker9711_
				coverAll:
					{114 to: 116}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker9711_
		cover: (120 to: 126)
		declaredAt: (64 to: 70)
		by:
			(deposit _ [ | receiver2 |
			receiver2 _ #_coverageTracker9711_
				coverAll:
					{131 to: 137}
				by: Deposit.
			#_coverageTracker9711_
				coverAll:
					{139 to: 147. 153 to: 155}
				evaluating: [
					receiver2
						register:
							(#_coverageTracker9711_
								coverAll:
									{149 to: 151}
								byLiteralOrPseudoVariable: 100)
						on:
							(#_coverageTracker9711_
								cover: (157 to: 163)
								declaredAt: (56 to: 62)
								by: account) ]
				thatSends: #register:on:
				to: receiver2 ] value).
	#_coverageTracker9711_
		cover: (167 to: 174)
		declaredAt: (72 to: 79)
		by:
			(withdraw _ [ | receiver3 |
			receiver3 _ #_coverageTracker9711_
				coverAll:
					{179 to: 186}
				by: Withdraw.
			#_coverageTracker9711_
				coverAll:
					{188 to: 196. 201 to: 203}
				evaluating: [
					receiver3
						register:
							(#_coverageTracker9711_
								coverAll:
									{198 to: 199}
								byLiteralOrPseudoVariable: 50)
						on:
							(#_coverageTracker9711_
								cover: (205 to: 211)
								declaredAt: (56 to: 62)
								by: account) ]
				thatSends: #register:on:
				to: receiver3 ] value).
	[ | receiver5 |
	receiver5 _ #_coverageTracker9711_
		coverAll:
			{218 to: 221}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9711_
		coverAll:
			{223 to: 229}
		evaluating: [
			receiver5 assert:
				[ | receiver4 |
				receiver4 _ #_coverageTracker9711_
					cover: (232 to: 238)
					declaredAt: (56 to: 62)
					by: account.
				#_coverageTracker9711_
					coverAll:
						{240 to: 253}
					evaluating: [
						receiver4 hasRegistered:
							(#_coverageTracker9711_
								cover: (255 to: 261)
								declaredAt: (64 to: 70)
								by: deposit) ]
					thatSends: #hasRegistered:
					to: receiver4 ] value ]
		thatSends: #assert:
		to: receiver5 ] value.
	[ | receiver7 |
	receiver7 _ #_coverageTracker9711_
		coverAll:
			{266 to: 269}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9711_
		coverAll:
			{271 to: 277}
		evaluating: [
			receiver7 assert:
				[ | receiver6 |
				receiver6 _ #_coverageTracker9711_
					cover: (280 to: 286)
					declaredAt: (56 to: 62)
					by: account.
				#_coverageTracker9711_
					coverAll:
						{288 to: 301}
					evaluating: [
						receiver6 hasRegistered:
							(#_coverageTracker9711_
								cover: (303 to: 310)
								declaredAt: (72 to: 79)
								by: withdraw) ]
					thatSends: #hasRegistered:
					to: receiver6 ] value ]
		thatSends: #assert:
		to: receiver7 ] value.! !
!Behavior method!
formatWithOneIndentation: aStringToFormat
	#_coverageTracker9734_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker9734_
		coverAll:
			{46 to: 49}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9734_
		coverAll:
			{51 to: 57. 75 to: 91}
		evaluating: [
			receiver1
				format:
					(#_coverageTracker9734_
						cover: (59 to: 73)
						declaredAt: (27 to: 41)
						by: aStringToFormat)
				withIndentations:
					(#_coverageTracker9734_
						coverAll:
							{93 to: 93}
						byLiteralOrPseudoVariable: 1) ]
		thatSends: #format:withIndentations:
		to: receiver1 ] value.! !
!Behavior method!
add: accountToAdd
	#_coverageTracker9744_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker9744_
		coverAll:
			{21 to: 24}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9744_
		coverAll:
			{26 to: 38}
		evaluating: [
			receiver1 assertCanAdd:
				(#_coverageTracker9744_
					cover: (40 to: 51)
					declaredAt: (6 to: 17)
					by: accountToAdd) ]
		thatSends: #assertCanAdd:
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ #_coverageTracker9744_
		cover: (58 to: 65)
		declaredAt: (58 to: 65)
		by: accounts.
	#_coverageTracker9744_
		coverAll:
			{67 to: 70}
		evaluating: [
			receiver2 add:
				(#_coverageTracker9744_
					cover: (72 to: 83)
					declaredAt: (6 to: 17)
					by: accountToAdd) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ #_coverageTracker9744_
		cover: (87 to: 98)
		declaredAt: (6 to: 17)
		by: accountToAdd.
	#_coverageTracker9744_
		coverAll:
			{100 to: 107}
		evaluating: [
			receiver3 addedTo:
				(#_coverageTracker9744_
					coverAll:
						{109 to: 112}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addedTo:
		to: receiver3 ] value.! !
!Behavior method!
assertCanAdd: accountToAdd
	#_coverageTracker9755_ markAsExecuted.
	[ | receiver3 |
	receiver3 _ [ | receiver1 |
	receiver1 _ #_coverageTracker9755_
		coverAll:
			{31 to: 34}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9755_
		coverAll:
			{36 to: 61}
		evaluating: [
			receiver1 anyRootParentIsComposedBy:
				(#_coverageTracker9755_
					cover: (63 to: 74)
					declaredAt: (15 to: 26)
					by: accountToAdd) ]
		thatSends: #anyRootParentIsComposedBy:
		to: receiver1 ] value.
	#_coverageTracker9755_
		coverAll:
			{77 to: 83}
		evaluating: [
			receiver3 ifTrue: [
				[ | receiver2 |
				receiver2 _ #_coverageTracker9755_
					coverAll:
						{87 to: 90}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker9755_
					coverAll:
						{92 to: 113}
					evaluating: [ receiver2 signalCanNotAddAccount ]
					thatSends: #signalCanNotAddAccount
					to: receiver2 ] value ]]
		thatSends: #ifTrue:
		to: receiver3 ] value.! !
!Behavior method!
test05PrintPortfolioWithIndentationGoingUpAndDown
	| childrenPortfolio familyPortfolio treeFormat dadAccount momAccount sonAccount |
	#_coverageTracker9768_ markAsExecuted.
	#_coverageTracker9768_
		cover: (138 to: 147)
		declaredAt: (122 to: 131)
		by:
			(sonAccount _ [ | receiver1 |
			receiver1 _ #_coverageTracker9768_
				coverAll:
					{153 to: 168}
				by: ReceptiveAccount.
			#_coverageTracker9768_
				coverAll:
					{170 to: 175}
				evaluating: [
					receiver1 named:
						(#_coverageTracker9768_
							coverAll:
								{177 to: 193}
							byLiteralOrPseudoVariable: 'Cuenta del hijo') ]
				thatSends: #named:
				to: receiver1 ] value).
	#_coverageTracker9768_
		cover: (197 to: 206)
		declaredAt: (100 to: 109)
		by:
			(dadAccount _ [ | receiver2 |
			receiver2 _ #_coverageTracker9768_
				coverAll:
					{212 to: 227}
				by: ReceptiveAccount.
			#_coverageTracker9768_
				coverAll:
					{229 to: 234}
				evaluating: [
					receiver2 named:
						(#_coverageTracker9768_
							coverAll:
								{236 to: 253}
							byLiteralOrPseudoVariable: 'Cuenta del padre') ]
				thatSends: #named:
				to: receiver2 ] value).
	#_coverageTracker9768_
		cover: (257 to: 266)
		declaredAt: (111 to: 120)
		by:
			(momAccount _ [ | receiver3 |
			receiver3 _ #_coverageTracker9768_
				coverAll:
					{271 to: 286}
				by: ReceptiveAccount.
			#_coverageTracker9768_
				coverAll:
					{288 to: 293}
				evaluating: [
					receiver3 named:
						(#_coverageTracker9768_
							coverAll:
								{295 to: 314}
							byLiteralOrPseudoVariable: 'Cuenta de la madre') ]
				thatSends: #named:
				to: receiver3 ] value).
	#_coverageTracker9768_
		cover: (320 to: 336)
		declaredAt: (55 to: 71)
		by:
			(childrenPortfolio _ [ | receiver4 |
			receiver4 _ #_coverageTracker9768_
				coverAll:
					{341 to: 349}
				by: Portfolio.
			#_coverageTracker9768_
				coverAll:
					{351 to: 356. 379 to: 383}
				evaluating: [
					receiver4
						named:
							(#_coverageTracker9768_
								coverAll:
									{358 to: 377}
								byLiteralOrPseudoVariable: 'Portfolio de hijos')
						with:
							(#_coverageTracker9768_
								cover: (385 to: 394)
								declaredAt: (122 to: 131)
								by: sonAccount) ]
				thatSends: #named:with:
				to: receiver4 ] value).
	#_coverageTracker9768_
		cover: (398 to: 412)
		declaredAt: (73 to: 87)
		by:
			(familyPortfolio _ [ | receiver5 |
			receiver5 _ #_coverageTracker9768_
				coverAll:
					{417 to: 425}
				by: Portfolio.
			#_coverageTracker9768_
				coverAll:
					{427 to: 432. 460 to: 464. 477 to: 481. 501 to: 505}
				evaluating: [
					receiver5
						named:
							(#_coverageTracker9768_
								coverAll:
									{434 to: 458}
								byLiteralOrPseudoVariable: 'Portfolio de la familia')
						with:
							(#_coverageTracker9768_
								cover: (466 to: 475)
								declaredAt: (100 to: 109)
								by: dadAccount)
						with:
							(#_coverageTracker9768_
								cover: (483 to: 499)
								declaredAt: (55 to: 71)
								by: childrenPortfolio)
						with:
							(#_coverageTracker9768_
								cover: (507 to: 516)
								declaredAt: (111 to: 120)
								by: momAccount) ]
				thatSends: #named:with:with:with:
				to: receiver5 ] value).
	#_coverageTracker9768_
		cover: (520 to: 529)
		declaredAt: (89 to: 98)
		by:
			(treeFormat _ [ | receiver6 |
			receiver6 _ #_coverageTracker9768_
				coverAll:
					{534 to: 552}
				by: PortfolioTreeFormat.
			#_coverageTracker9768_
				coverAll:
					{554 to: 556}
				evaluating: [
					receiver6 on:
						(#_coverageTracker9768_
							cover: (558 to: 572)
							declaredAt: (73 to: 87)
							by: familyPortfolio) ]
				thatSends: #on:
				to: receiver6 ] value).
	[ | receiver13 |
	receiver13 _ #_coverageTracker9768_
		coverAll:
			{579 to: 582}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9768_
		coverAll:
			{584 to: 590. 944 to: 950}
		evaluating: [
			receiver13
				assert:
					[ | receiver11 |
					receiver11 _ #_coverageTracker9768_
						coverAll:
							{593 to: 609}
						by: OrderedCollection.
					#_coverageTracker9768_
						coverAll:
							{611 to: 615. 656 to: 660. 727 to: 731. 800 to: 804. 871 to: 875}
						evaluating: [
							receiver11
								with:
									(#_coverageTracker9768_
										coverAll:
											{617 to: 641}
										byLiteralOrPseudoVariable: 'Portfolio de la familia')
								with:
									[ | receiver7 |
									receiver7 _ #_coverageTracker9768_
										coverAll:
											{663 to: 666}
										byLiteralOrPseudoVariable: self.
									#_coverageTracker9768_
										coverAll:
											{668 to: 692}
										evaluating: [
											receiver7 formatWithOneIndentation:
												(#_coverageTracker9768_
													coverAll:
														{694 to: 711}
													byLiteralOrPseudoVariable: 'Cuenta del padre') ]
										thatSends: #formatWithOneIndentation:
										to: receiver7 ] value
								with:
									[ | receiver8 |
									receiver8 _ #_coverageTracker9768_
										coverAll:
											{734 to: 737}
										byLiteralOrPseudoVariable: self.
									#_coverageTracker9768_
										coverAll:
											{739 to: 763}
										evaluating: [
											receiver8 formatWithOneIndentation:
												(#_coverageTracker9768_
													coverAll:
														{765 to: 784}
													byLiteralOrPseudoVariable: 'Portfolio de hijos') ]
										thatSends: #formatWithOneIndentation:
										to: receiver8 ] value
								with:
									[ | receiver9 |
									receiver9 _ #_coverageTracker9768_
										coverAll:
											{807 to: 810}
										byLiteralOrPseudoVariable: self.
									#_coverageTracker9768_
										coverAll:
											{812 to: 837}
										evaluating: [
											receiver9 formatWithTwoIndentations:
												(#_coverageTracker9768_
													coverAll:
														{839 to: 855}
													byLiteralOrPseudoVariable: 'Cuenta del hijo') ]
										thatSends: #formatWithTwoIndentations:
										to: receiver9 ] value
								with:
									[ | receiver10 |
									receiver10 _ #_coverageTracker9768_
										coverAll:
											{878 to: 881}
										byLiteralOrPseudoVariable: self.
									#_coverageTracker9768_
										coverAll:
											{883 to: 907}
										evaluating: [
											receiver10 formatWithOneIndentation:
												(#_coverageTracker9768_
													coverAll:
														{909 to: 928}
													byLiteralOrPseudoVariable: 'Cuenta de la madre') ]
										thatSends: #formatWithOneIndentation:
										to: receiver10 ] value ]
						thatSends: #with:with:with:with:with:
						to: receiver11 ] value
				equals:
					[ | receiver12 |
					receiver12 _ #_coverageTracker9768_
						cover: (952 to: 961)
						declaredAt: (89 to: 98)
						by: treeFormat.
					#_coverageTracker9768_
						coverAll:
							{963 to: 971}
						evaluating: [ receiver12 calculate ]
						thatSends: #calculate
						to: receiver12 ] value ]
		thatSends: #assert:equals:
		to: receiver13 ] value.! !
!Behavior method!
balance
	#_coverageTracker9804_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker9804_
		cover: (12 to: 23)
		declaredAt: (12 to: 23)
		by: transactions.
	#_coverageTracker9804_
		coverAll:
			{28 to: 34. 40 to: 44}
		evaluating: [
			receiver2
				inject:
					(#_coverageTracker9804_
						coverAll:
							{36 to: 36}
						byLiteralOrPseudoVariable: 0)
				into: [ :currentBalance :transaction |
					[ | receiver1 |
					receiver1 _ #_coverageTracker9804_
						cover: (79 to: 89)
						declaredAt: (65 to: 75)
						by: transaction.
					#_coverageTracker9804_
						coverAll:
							{91 to: 104}
						evaluating: [
							receiver1 affectBalance:
								(#_coverageTracker9804_
									cover: (106 to: 119)
									declaredAt: (49 to: 62)
									by: currentBalance) ]
						thatSends: #affectBalance:
						to: receiver1 ] value ]]
		thatSends: #inject:into:
		to: receiver2 ] value.! !
!Behavior method!
with: anAccount
	#_coverageTracker9814_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker9814_
		coverAll:
			{20 to: 23}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9814_
		coverAll:
			{25 to: 27}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker9814_
		coverAll:
			{32 to: 35}
		evaluating: [
			receiver2 add:
				(#_coverageTracker9814_
					cover: (37 to: 45)
					declaredAt: (7 to: 15)
					by: anAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker9814_
		coverAll:
			{50 to: 57}
		evaluating: [ receiver3 yourself ]
		thatSends: #yourself
		to: receiver3 ] value ] value.! !
!Behavior method!
addTransferWithdrawFor: anAmount
	#_coverageTracker9823_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker9823_
		cover: (38 to: 44)
		declaredAt: (38 to: 44)
		by: summary.
	#_coverageTracker9823_
		coverAll:
			{46 to: 49}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker9823_
					coverAll:
						{52 to: 55}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker9823_
					coverAll:
						{57 to: 83}
					evaluating: [
						receiver1 transferWithdrawMessageFor:
							(#_coverageTracker9823_
								cover: (85 to: 92)
								declaredAt: (25 to: 32)
								by: anAmount) ]
					thatSends: #transferWithdrawMessageFor:
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation
	| childrenPortfolio johnsAccount familyPortfolio treeFormat |
	#_coverageTracker9842_ markAsExecuted.
	#_coverageTracker9842_
		cover: (134 to: 145)
		declaredAt: (89 to: 100)
		by:
			(johnsAccount _ [ | receiver1 |
			receiver1 _ #_coverageTracker9842_
				coverAll:
					{151 to: 166}
				by: ReceptiveAccount.
			#_coverageTracker9842_
				coverAll:
					{168 to: 173}
				evaluating: [
					receiver1 named:
						(#_coverageTracker9842_
							coverAll:
								{175 to: 190}
							byLiteralOrPseudoVariable: 'Cuenta de Juan') ]
				thatSends: #named:
				to: receiver1 ] value).
	#_coverageTracker9842_
		cover: (194 to: 210)
		declaredAt: (71 to: 87)
		by:
			(childrenPortfolio _ [ | receiver2 |
			receiver2 _ #_coverageTracker9842_
				coverAll:
					{215 to: 223}
				by: Portfolio.
			#_coverageTracker9842_
				coverAll:
					{225 to: 230. 253 to: 257}
				evaluating: [
					receiver2
						named:
							(#_coverageTracker9842_
								coverAll:
									{232 to: 251}
								byLiteralOrPseudoVariable: 'Portfolio de hijos')
						with:
							(#_coverageTracker9842_
								cover: (259 to: 270)
								declaredAt: (89 to: 100)
								by: johnsAccount) ]
				thatSends: #named:with:
				to: receiver2 ] value).
	#_coverageTracker9842_
		cover: (274 to: 288)
		declaredAt: (102 to: 116)
		by:
			(familyPortfolio _ [ | receiver3 |
			receiver3 _ #_coverageTracker9842_
				coverAll:
					{293 to: 301}
				by: Portfolio.
			#_coverageTracker9842_
				coverAll:
					{303 to: 308. 336 to: 340}
				evaluating: [
					receiver3
						named:
							(#_coverageTracker9842_
								coverAll:
									{310 to: 334}
								byLiteralOrPseudoVariable: 'Portfolio de la familia')
						with:
							(#_coverageTracker9842_
								cover: (342 to: 358)
								declaredAt: (71 to: 87)
								by: childrenPortfolio) ]
				thatSends: #named:with:
				to: receiver3 ] value).
	#_coverageTracker9842_
		cover: (362 to: 371)
		declaredAt: (118 to: 127)
		by:
			(treeFormat _ [ | receiver4 |
			receiver4 _ #_coverageTracker9842_
				coverAll:
					{376 to: 394}
				by: PortfolioTreeFormat.
			#_coverageTracker9842_
				coverAll:
					{396 to: 398}
				evaluating: [
					receiver4 on:
						(#_coverageTracker9842_
							cover: (400 to: 414)
							declaredAt: (102 to: 116)
							by: familyPortfolio) ]
				thatSends: #on:
				to: receiver4 ] value).
	[ | receiver9 |
	receiver9 _ #_coverageTracker9842_
		coverAll:
			{421 to: 424}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9842_
		coverAll:
			{426 to: 432. 638 to: 644}
		evaluating: [
			receiver9
				assert:
					[ | receiver7 |
					receiver7 _ #_coverageTracker9842_
						coverAll:
							{435 to: 451}
						by: OrderedCollection.
					#_coverageTracker9842_
						coverAll:
							{453 to: 457. 498 to: 502. 572 to: 576}
						evaluating: [
							receiver7
								with:
									(#_coverageTracker9842_
										coverAll:
											{459 to: 483}
										byLiteralOrPseudoVariable: 'Portfolio de la familia')
								with:
									[ | receiver5 |
									receiver5 _ #_coverageTracker9842_
										coverAll:
											{505 to: 508}
										byLiteralOrPseudoVariable: self.
									#_coverageTracker9842_
										coverAll:
											{510 to: 534}
										evaluating: [
											receiver5 formatWithOneIndentation:
												(#_coverageTracker9842_
													coverAll:
														{536 to: 555}
													byLiteralOrPseudoVariable: 'Portfolio de hijos') ]
										thatSends: #formatWithOneIndentation:
										to: receiver5 ] value
								with:
									[ | receiver6 |
									receiver6 _ #_coverageTracker9842_
										coverAll:
											{579 to: 582}
										byLiteralOrPseudoVariable: self.
									#_coverageTracker9842_
										coverAll:
											{584 to: 609}
										evaluating: [
											receiver6 formatWithTwoIndentations:
												(#_coverageTracker9842_
													coverAll:
														{611 to: 626}
													byLiteralOrPseudoVariable: 'Cuenta de Juan') ]
										thatSends: #formatWithTwoIndentations:
										to: receiver6 ] value ]
						thatSends: #with:with:with:
						to: receiver7 ] value
				equals:
					[ | receiver8 |
					receiver8 _ #_coverageTracker9842_
						cover: (646 to: 655)
						declaredAt: (118 to: 127)
						by: treeFormat.
					#_coverageTracker9842_
						coverAll:
							{657 to: 665}
						evaluating: [ receiver8 calculate ]
						thatSends: #calculate
						to: receiver8 ] value ]
		thatSends: #assert:equals:
		to: receiver9 ] value.! !
!Behavior method!
test03TransferNetForAccountWithDepositTenIsZero
	| transferNet account |
	#_coverageTracker9860_ markAsExecuted.
	#_coverageTracker9860_
		cover: (78 to: 84)
		declaredAt: (65 to: 71)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker9860_
				coverAll:
					{89 to: 104}
				by: ReceptiveAccount.
			#_coverageTracker9860_
				coverAll:
					{106 to: 108}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker9860_
		coverAll:
			{112 to: 118}
		by: Deposit.
	#_coverageTracker9860_
		coverAll:
			{120 to: 128. 133 to: 135}
		evaluating: [
			receiver2
				register:
					(#_coverageTracker9860_
						coverAll:
							{130 to: 131}
						byLiteralOrPseudoVariable: 10)
				on:
					(#_coverageTracker9860_
						cover: (137 to: 143)
						declaredAt: (65 to: 71)
						by: account) ]
		thatSends: #register:on:
		to: receiver2 ] value.
	#_coverageTracker9860_
		cover: (149 to: 159)
		declaredAt: (53 to: 63)
		by:
			(transferNet _ [ | receiver3 |
			receiver3 _ #_coverageTracker9860_
				coverAll:
					{164 to: 174}
				by: TransferNet.
			#_coverageTracker9860_
				coverAll:
					{176 to: 179}
				evaluating: [
					receiver3 for:
						(#_coverageTracker9860_
							cover: (181 to: 187)
							declaredAt: (65 to: 71)
							by: account) ]
				thatSends: #for:
				to: receiver3 ] value).
	[ | receiver5 |
	receiver5 _ #_coverageTracker9860_
		coverAll:
			{193 to: 196}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9860_
		coverAll:
			{198 to: 204. 208 to: 214}
		evaluating: [
			receiver5
				assert:
					(#_coverageTracker9860_
						coverAll:
							{206 to: 206}
						byLiteralOrPseudoVariable: 0)
				equals:
					[ | receiver4 |
					receiver4 _ #_coverageTracker9860_
						cover: (216 to: 226)
						declaredAt: (53 to: 63)
						by: transferNet.
					#_coverageTracker9860_
						coverAll:
							{228 to: 236}
						evaluating: [ receiver4 calculate ]
						thatSends: #calculate
						to: receiver4 ] value ]
		thatSends: #assert:equals:
		to: receiver5 ] value.! !
!Behavior method!
balanceMessage
	#_coverageTracker9870_ markAsExecuted.
	^ [ | receiver3 |
	receiver3 _ #_coverageTracker9870_
		coverAll:
			{20 to: 31}
		byLiteralOrPseudoVariable: 'Balance = '.
	#_coverageTracker9870_
		coverAll:
			{32 to: 32}
		evaluating: [
			receiver3 ,
				[ | receiver2 |
				receiver2 _ [ | receiver1 |
				receiver1 _ #_coverageTracker9870_
					cover: (34 to: 40)
					declaredAt: (34 to: 40)
					by: account.
				#_coverageTracker9870_
					coverAll:
						{42 to: 48}
					evaluating: [ receiver1 balance ]
					thatSends: #balance
					to: receiver1 ] value.
				#_coverageTracker9870_
					coverAll:
						{50 to: 57}
					evaluating: [ receiver2 asString ]
					thatSends: #asString
					to: receiver2 ] value ]
		thatSends: #,
		to: receiver3 ] value.! !
!Behavior method!
value
	#_coverageTracker9876_ markAsExecuted.
	^ #_coverageTracker9876_
		cover: (11 to: 15)
		declaredAt: (11 to: 15)
		by: value.! !
!Behavior method!
accountsIncludes: anAccount
	#_coverageTracker9887_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker9887_
		cover: (32 to: 39)
		declaredAt: (32 to: 39)
		by: accounts.
	#_coverageTracker9887_
		coverAll:
			{41 to: 49}
		evaluating: [
			receiver1 includes:
				(#_coverageTracker9887_
					cover: (51 to: 59)
					declaredAt: (19 to: 27)
					by: anAccount) ]
		thatSends: #includes:
		to: receiver1 ] value.! !
!Behavior method!
named: aName with: anAccount with: anotherAccount
	#_coverageTracker9907_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker9907_
		coverAll:
			{57 to: 60}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9907_
		coverAll:
			{62 to: 67. 75 to: 79}
		evaluating: [
			receiver1
				named:
					(#_coverageTracker9907_
						cover: (69 to: 73)
						declaredAt: (8 to: 12)
						by: aName)
				with:
					(#_coverageTracker9907_
						cover: (81 to: 89)
						declaredAt: (20 to: 28)
						by: anAccount) ]
		thatSends: #named:with:
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker9907_
		coverAll:
			{92 to: 95}
		evaluating: [
			receiver2 add:
				(#_coverageTracker9907_
					cover: (97 to: 110)
					declaredAt: (36 to: 49)
					by: anotherAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker9907_
		coverAll:
			{113 to: 120}
		evaluating: [ receiver3 yourself ]
		thatSends: #yourself
		to: receiver3 ] value ] value.! !
!Behavior method!
addNameInTreeFormatInPortfolio: aPortfolio
	#_coverageTracker9916_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker9916_
		cover: (46 to: 55)
		declaredAt: (33 to: 42)
		by: aPortfolio.
	#_coverageTracker9916_
		coverAll:
			{57 to: 66}
		evaluating: [
			receiver1 addToTree:
				(#_coverageTracker9916_
					cover: (68 to: 71)
					declaredAt: (68 to: 71)
					by: name) ]
		thatSends: #addToTree:
		to: receiver1 ] value.! !
!Behavior method!
addReceptiveAccount: aReceptiveAccount
	#_coverageTracker9924_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker9924_
		coverAll:
			{42 to: 45}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9924_
		coverAll:
			{47 to: 54}
		evaluating: [
			receiver2 addName:
				[ | receiver1 |
				receiver1 _ #_coverageTracker9924_
					cover: (56 to: 72)
					declaredAt: (22 to: 38)
					by: aReceptiveAccount.
				#_coverageTracker9924_
					coverAll:
						{74 to: 77}
					evaluating: [ receiver1 name ]
					thatSends: #name
					to: receiver1 ] value ]
		thatSends: #addName:
		to: receiver2 ] value.! !
!Behavior method!
initializeFor: aTransfer
	#_coverageTracker9933_ markAsExecuted.
	#_coverageTracker9933_
		cover: (28 to: 35)
		declaredAt: (28 to: 35)
		by:
			(transfer _ #_coverageTracker9933_
				cover: (40 to: 48)
				declaredAt: (16 to: 24)
				by: aTransfer).! !
!Behavior method!
test02DepositIncreasesBalanceOnTransactionValue
	| account |
	#_coverageTracker9943_ markAsExecuted.
	#_coverageTracker9943_
		cover: (67 to: 73)
		declaredAt: (54 to: 60)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker9943_
				coverAll:
					{78 to: 93}
				by: ReceptiveAccount.
			#_coverageTracker9943_
				coverAll:
					{96 to: 98}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker9943_
		coverAll:
			{102 to: 108}
		by: Deposit.
	#_coverageTracker9943_
		coverAll:
			{110 to: 118. 124 to: 126}
		evaluating: [
			receiver2
				register:
					(#_coverageTracker9943_
						coverAll:
							{120 to: 122}
						byLiteralOrPseudoVariable: 100)
				on:
					(#_coverageTracker9943_
						cover: (128 to: 134)
						declaredAt: (54 to: 60)
						by: account) ]
		thatSends: #register:on:
		to: receiver2 ] value.
	[ | receiver4 |
	receiver4 _ #_coverageTracker9943_
		coverAll:
			{141 to: 144}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9943_
		coverAll:
			{146 to: 152. 158 to: 164}
		evaluating: [
			receiver4
				assert:
					(#_coverageTracker9943_
						coverAll:
							{154 to: 156}
						byLiteralOrPseudoVariable: 100)
				equals:
					[ | receiver3 |
					receiver3 _ #_coverageTracker9943_
						cover: (166 to: 172)
						declaredAt: (54 to: 60)
						by: account.
					#_coverageTracker9943_
						coverAll:
							{174 to: 180}
						evaluating: [ receiver3 balance ]
						thatSends: #balance
						to: receiver3 ] value ]
		thatSends: #assert:equals:
		to: receiver4 ] value.! !
!Behavior method!
transferWithdrawMessageFor: anAmount
	#_coverageTracker9957_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker9957_
		coverAll:
			{42 to: 71}
		byLiteralOrPseudoVariable: 'Salida por transferencia de '.
	#_coverageTracker9957_
		coverAll:
			{72 to: 72}
		evaluating: [
			receiver2 ,
				[ | receiver1 |
				receiver1 _ #_coverageTracker9957_
					cover: (74 to: 81)
					declaredAt: (29 to: 36)
					by: anAmount.
				#_coverageTracker9957_
					coverAll:
						{83 to: 90}
					evaluating: [ receiver1 asString ]
					thatSends: #asString
					to: receiver1 ] value ]
		thatSends: #,
		to: receiver2 ] value.! !
!Behavior method!
calculate
	#_coverageTracker9966_ markAsExecuted.
	#_coverageTracker9966_
		cover: (14 to: 20)
		declaredAt: (14 to: 20)
		by:
			(summary _ [ | receiver1 |
			receiver1 _ #_coverageTracker9966_
				coverAll:
					{25 to: 41}
				by: OrderedCollection.
			#_coverageTracker9966_
				coverAll:
					{43 to: 45}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker9966_
		cover: (51 to: 57)
		declaredAt: (51 to: 57)
		by: account.
	#_coverageTracker9966_
		coverAll:
			{59 to: 83}
		evaluating: [
			receiver2 addTransactionsInSummary:
				(#_coverageTracker9966_
					coverAll:
						{85 to: 88}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addTransactionsInSummary:
		to: receiver2 ] value.
	[ | receiver4 |
	receiver4 _ #_coverageTracker9966_
		cover: (95 to: 101)
		declaredAt: (14 to: 20)
		by: summary.
	#_coverageTracker9966_
		coverAll:
			{103 to: 106}
		evaluating: [
			receiver4 add:
				[ | receiver3 |
				receiver3 _ #_coverageTracker9966_
					coverAll:
						{109 to: 112}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker9966_
					coverAll:
						{114 to: 127}
					evaluating: [ receiver3 balanceMessage ]
					thatSends: #balanceMessage
					to: receiver3 ] value ]
		thatSends: #add:
		to: receiver4 ] value.
	^ #_coverageTracker9966_
		cover: (135 to: 141)
		declaredAt: (14 to: 20)
		by: summary.! !
!Behavior method!
signalCanNotAddAccount
	#_coverageTracker9975_ markAsExecuted.
	[ | receiver3 |
	receiver3 _ #_coverageTracker9975_
		coverAll:
			{27 to: 30}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker9975_
		coverAll:
			{32 to: 37}
		evaluating: [
			receiver3 error:
				[ | receiver2 |
				receiver2 _ [ | receiver1 |
				receiver1 _ #_coverageTracker9975_
					coverAll:
						{39 to: 42}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker9975_
					coverAll:
						{44 to: 48}
					evaluating: [ receiver1 class ]
					thatSends: #class
					to: receiver1 ] value.
				#_coverageTracker9975_
					coverAll:
						{50 to: 77}
					evaluating: [ receiver2 canNotAddAccountErrorMessage ]
					thatSends: #canNotAddAccountErrorMessage
					to: receiver2 ] value ]
		thatSends: #error:
		to: receiver3 ] value.! !
!Behavior method!
value
	#_coverageTracker9990_ markAsExecuted.
	^ #_coverageTracker9990_
		cover: (10 to: 14)
		declaredAt: (10 to: 14)
		by: value.! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker10000_ markAsExecuted.
	#_coverageTracker10000_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker10000_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation
	| childrenPortfolio johnsAccount angiesAccount treeFormat |
	#_coverageTracker10011_ markAsExecuted.
	#_coverageTracker10011_
		cover: (130 to: 141)
		declaredAt: (87 to: 98)
		by:
			(johnsAccount _ [ | receiver1 |
			receiver1 _ #_coverageTracker10011_
				coverAll:
					{147 to: 162}
				by: ReceptiveAccount.
			#_coverageTracker10011_
				coverAll:
					{164 to: 169}
				evaluating: [
					receiver1 named:
						(#_coverageTracker10011_
							coverAll:
								{171 to: 186}
							byLiteralOrPseudoVariable: 'Cuenta de Juan') ]
				thatSends: #named:
				to: receiver1 ] value).
	#_coverageTracker10011_
		cover: (190 to: 202)
		declaredAt: (100 to: 112)
		by:
			(angiesAccount _ [ | receiver2 |
			receiver2 _ #_coverageTracker10011_
				coverAll:
					{208 to: 223}
				by: ReceptiveAccount.
			#_coverageTracker10011_
				coverAll:
					{225 to: 230}
				evaluating: [
					receiver2 named:
						(#_coverageTracker10011_
							coverAll:
								{232 to: 250}
							byLiteralOrPseudoVariable: 'Cuenta de Angeles') ]
				thatSends: #named:
				to: receiver2 ] value).
	#_coverageTracker10011_
		cover: (254 to: 270)
		declaredAt: (69 to: 85)
		by:
			(childrenPortfolio _ [ | receiver3 |
			receiver3 _ #_coverageTracker10011_
				coverAll:
					{275 to: 283}
				by: Portfolio.
			#_coverageTracker10011_
				coverAll:
					{285 to: 290. 313 to: 317. 332 to: 336}
				evaluating: [
					receiver3
						named:
							(#_coverageTracker10011_
								coverAll:
									{292 to: 311}
								byLiteralOrPseudoVariable: 'Portfolio de hijos')
						with:
							(#_coverageTracker10011_
								cover: (319 to: 330)
								declaredAt: (87 to: 98)
								by: johnsAccount)
						with:
							(#_coverageTracker10011_
								cover: (338 to: 350)
								declaredAt: (100 to: 112)
								by: angiesAccount) ]
				thatSends: #named:with:with:
				to: receiver3 ] value).
	#_coverageTracker10011_
		cover: (354 to: 363)
		declaredAt: (114 to: 123)
		by:
			(treeFormat _ [ | receiver4 |
			receiver4 _ #_coverageTracker10011_
				coverAll:
					{368 to: 386}
				by: PortfolioTreeFormat.
			#_coverageTracker10011_
				coverAll:
					{388 to: 390}
				evaluating: [
					receiver4 on:
						(#_coverageTracker10011_
							cover: (392 to: 408)
							declaredAt: (69 to: 85)
							by: childrenPortfolio) ]
				thatSends: #on:
				to: receiver4 ] value).
	[ | receiver9 |
	receiver9 _ #_coverageTracker10011_
		coverAll:
			{414 to: 417}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10011_
		coverAll:
			{419 to: 425. 633 to: 639}
		evaluating: [
			receiver9
				assert:
					[ | receiver7 |
					receiver7 _ #_coverageTracker10011_
						coverAll:
							{428 to: 444}
						by: OrderedCollection.
					#_coverageTracker10011_
						coverAll:
							{446 to: 450. 495 to: 499. 565 to: 569}
						evaluating: [
							receiver7
								with:
									(#_coverageTracker10011_
										coverAll:
											{452 to: 471}
										byLiteralOrPseudoVariable: 'Portfolio de hijos')
								with:
									[ | receiver5 |
									receiver5 _ #_coverageTracker10011_
										coverAll:
											{502 to: 505}
										byLiteralOrPseudoVariable: self.
									#_coverageTracker10011_
										coverAll:
											{507 to: 531}
										evaluating: [
											receiver5 formatWithOneIndentation:
												(#_coverageTracker10011_
													coverAll:
														{533 to: 548}
													byLiteralOrPseudoVariable: 'Cuenta de Juan') ]
										thatSends: #formatWithOneIndentation:
										to: receiver5 ] value
								with:
									[ | receiver6 |
									receiver6 _ #_coverageTracker10011_
										coverAll:
											{572 to: 575}
										byLiteralOrPseudoVariable: self.
									#_coverageTracker10011_
										coverAll:
											{577 to: 601}
										evaluating: [
											receiver6 formatWithOneIndentation:
												(#_coverageTracker10011_
													coverAll:
														{603 to: 621}
													byLiteralOrPseudoVariable: 'Cuenta de Angeles') ]
										thatSends: #formatWithOneIndentation:
										to: receiver6 ] value ]
						thatSends: #with:with:with:
						to: receiver7 ] value
				equals:
					[ | receiver8 |
					receiver8 _ #_coverageTracker10011_
						cover: (641 to: 650)
						declaredAt: (114 to: 123)
						by: treeFormat.
					#_coverageTracker10011_
						coverAll:
							{652 to: 660}
						evaluating: [ receiver8 calculate ]
						thatSends: #calculate
						to: receiver8 ] value ]
		thatSends: #assert:equals:
		to: receiver9 ] value.! !
!Behavior method!
registerOn: aTransfer
	#_coverageTracker10028_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker10028_
		coverAll:
			{27 to: 30}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10028_
		coverAll:
			{32 to: 34}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker10028_
		coverAll:
			{36 to: 49}
		evaluating: [
			receiver2 initializeFor:
				(#_coverageTracker10028_
					cover: (51 to: 59)
					declaredAt: (13 to: 21)
					by: aTransfer) ]
		thatSends: #initializeFor:
		to: receiver2 ] value.! !
!Behavior method!
addWithdrawFor: anAmount
	#_coverageTracker10036_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker10036_
		cover: (28 to: 34)
		declaredAt: (28 to: 34)
		by: summary.
	#_coverageTracker10036_
		coverAll:
			{36 to: 39}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker10036_
					coverAll:
						{42 to: 45}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker10036_
					coverAll:
						{47 to: 65}
					evaluating: [
						receiver1 withdrawMessageFor:
							(#_coverageTracker10036_
								cover: (67 to: 74)
								declaredAt: (17 to: 24)
								by: anAmount) ]
					thatSends: #withdrawMessageFor:
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionInSummary: aSummary
	#_coverageTracker10048_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker10048_
		cover: (37 to: 44)
		declaredAt: (26 to: 33)
		by: aSummary.
	#_coverageTracker10048_
		coverAll:
			{46 to: 68}
		evaluating: [
			receiver2 addTransferWithdrawFor:
				[ | receiver1 |
				receiver1 _ #_coverageTracker10048_
					coverAll:
						{70 to: 73}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker10048_
					coverAll:
						{75 to: 79}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #addTransferWithdrawFor:
		to: receiver2 ] value.! !
!Behavior method!
register: aTransaction
	#_coverageTracker10057_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker10057_
		cover: (26 to: 37)
		declaredAt: (26 to: 37)
		by: transactions.
	#_coverageTracker10057_
		coverAll:
			{39 to: 42}
		evaluating: [
			receiver1 add:
				(#_coverageTracker10057_
					cover: (44 to: 55)
					declaredAt: (11 to: 22)
					by: aTransaction) ]
		thatSends: #add:
		to: receiver1 ] value.! !
!Behavior method!
addTransferWithdrawFor: anAmount
	#_coverageTracker10065_ markAsExecuted.
	#_coverageTracker10065_
		cover: (53 to: 63)
		declaredAt: (38 to: 48)
		by:
			(transferNet _ [ | receiver1 |
			receiver1 _ #_coverageTracker10065_
				cover: (38 to: 48)
				declaredAt: (38 to: 48)
				by: transferNet.
			#_coverageTracker10065_
				coverAll:
					{65 to: 65}
				evaluating: [
					receiver1 -
						(#_coverageTracker10065_
							cover: (67 to: 74)
							declaredAt: (25 to: 32)
							by: anAmount) ]
				thatSends: #-
				to: receiver1 ] value).! !
!Behavior method!
test07PortfolioHasNoTransactionWhenHasNoAccounts
	#_coverageTracker10073_ markAsExecuted.
	[ | receiver4 |
	receiver4 _ #_coverageTracker10073_
		coverAll:
			{52 to: 55}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10073_
		coverAll:
			{57 to: 63}
		evaluating: [
			receiver4 assert:
				[ | receiver3 |
				receiver3 _ [ | receiver2 |
				receiver2 _ [ | receiver1 |
				receiver1 _ #_coverageTracker10073_
					coverAll:
						{65 to: 73}
					by: Portfolio.
				#_coverageTracker10073_
					coverAll:
						{75 to: 77}
					evaluating: [ receiver1 new ]
					thatSends: #new
					to: receiver1 ] value.
				#_coverageTracker10073_
					coverAll:
						{79 to: 90}
					evaluating: [ receiver2 transactions ]
					thatSends: #transactions
					to: receiver2 ] value.
				#_coverageTracker10073_
					coverAll:
						{92 to: 98}
					evaluating: [ receiver3 isEmpty ]
					thatSends: #isEmpty
					to: receiver3 ] value ]
		thatSends: #assert:
		to: receiver4 ] value.! !
!Behavior method!
test02TransferIsRegisteredInBothAccounts
	| receiverAccount senderAccount transfer |
	#_coverageTracker10083_ markAsExecuted.
	#_coverageTracker10083_
		cover: (88 to: 100)
		declaredAt: (62 to: 74)
		by:
			(senderAccount _ [ | receiver1 |
			receiver1 _ #_coverageTracker10083_
				coverAll:
					{105 to: 120}
				by: ReceptiveAccount.
			#_coverageTracker10083_
				coverAll:
					{122 to: 124}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker10083_
		cover: (128 to: 142)
		declaredAt: (46 to: 60)
		by:
			(receiverAccount _ [ | receiver2 |
			receiver2 _ #_coverageTracker10083_
				coverAll:
					{147 to: 162}
				by: ReceptiveAccount.
			#_coverageTracker10083_
				coverAll:
					{164 to: 166}
				evaluating: [ receiver2 new ]
				thatSends: #new
				to: receiver2 ] value).
	#_coverageTracker10083_
		cover: (172 to: 179)
		declaredAt: (76 to: 83)
		by:
			(transfer _ [ | receiver3 |
			receiver3 _ #_coverageTracker10083_
				coverAll:
					{185 to: 192}
				by: Transfer.
			#_coverageTracker10083_
				coverAll:
					{194 to: 202. 207 to: 211. 228 to: 230}
				evaluating: [
					receiver3
						register:
							(#_coverageTracker10083_
								coverAll:
									{204 to: 205}
								byLiteralOrPseudoVariable: 50)
						from:
							(#_coverageTracker10083_
								cover: (213 to: 225)
								declaredAt: (62 to: 74)
								by: senderAccount)
						to:
							(#_coverageTracker10083_
								cover: (232 to: 246)
								declaredAt: (46 to: 60)
								by: receiverAccount) ]
				thatSends: #register:from:to:
				to: receiver3 ] value).
	[ | receiver6 |
	receiver6 _ #_coverageTracker10083_
		coverAll:
			{251 to: 254}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10083_
		coverAll:
			{256 to: 262}
		evaluating: [
			receiver6 assert:
				[ | receiver5 |
				receiver5 _ #_coverageTracker10083_
					cover: (265 to: 277)
					declaredAt: (62 to: 74)
					by: senderAccount.
				#_coverageTracker10083_
					coverAll:
						{279 to: 292}
					evaluating: [
						receiver5 hasRegistered:
							[ | receiver4 |
							receiver4 _ #_coverageTracker10083_
								cover: (294 to: 301)
								declaredAt: (76 to: 83)
								by: transfer.
							#_coverageTracker10083_
								coverAll:
									{303 to: 313}
								evaluating: [ receiver4 withdrawLeg ]
								thatSends: #withdrawLeg
								to: receiver4 ] value ]
					thatSends: #hasRegistered:
					to: receiver5 ] value ]
		thatSends: #assert:
		to: receiver6 ] value.
	[ | receiver9 |
	receiver9 _ #_coverageTracker10083_
		coverAll:
			{318 to: 321}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10083_
		coverAll:
			{323 to: 329}
		evaluating: [
			receiver9 assert:
				[ | receiver8 |
				receiver8 _ #_coverageTracker10083_
					cover: (332 to: 346)
					declaredAt: (46 to: 60)
					by: receiverAccount.
				#_coverageTracker10083_
					coverAll:
						{348 to: 361}
					evaluating: [
						receiver8 hasRegistered:
							[ | receiver7 |
							receiver7 _ #_coverageTracker10083_
								cover: (363 to: 370)
								declaredAt: (76 to: 83)
								by: transfer.
							#_coverageTracker10083_
								coverAll:
									{372 to: 381}
								evaluating: [ receiver7 depositLeg ]
								thatSends: #depositLeg
								to: receiver7 ] value ]
					thatSends: #hasRegistered:
					to: receiver8 ] value ]
		thatSends: #assert:
		to: receiver9 ] value.! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker10098_ markAsExecuted.
	#_coverageTracker10098_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker10098_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
test13ComposedPortfolioCanNotHaveParentPortfolioAccount
	| account simplePortfolio composedPortfolio |
	#_coverageTracker10113_ markAsExecuted.
	#_coverageTracker10113_
		cover: (108 to: 114)
		declaredAt: (61 to: 67)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker10113_
				coverAll:
					{119 to: 134}
				by: ReceptiveAccount.
			#_coverageTracker10113_
				coverAll:
					{136 to: 138}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker10113_
		cover: (142 to: 156)
		declaredAt: (69 to: 83)
		by:
			(simplePortfolio _ [ | receiver2 |
			receiver2 _ #_coverageTracker10113_
				coverAll:
					{161 to: 169}
				by: Portfolio.
			#_coverageTracker10113_
				coverAll:
					{171 to: 173}
				evaluating: [ receiver2 new ]
				thatSends: #new
				to: receiver2 ] value).
	#_coverageTracker10113_
		cover: (177 to: 193)
		declaredAt: (85 to: 101)
		by:
			(composedPortfolio _ [ | receiver3 |
			receiver3 _ #_coverageTracker10113_
				coverAll:
					{198 to: 206}
				by: Portfolio.
			#_coverageTracker10113_
				coverAll:
					{208 to: 212}
				evaluating: [
					receiver3 with:
						(#_coverageTracker10113_
							cover: (214 to: 228)
							declaredAt: (69 to: 83)
							by: simplePortfolio) ]
				thatSends: #with:
				to: receiver3 ] value).
	[ | receiver4 |
	receiver4 _ #_coverageTracker10113_
		cover: (232 to: 248)
		declaredAt: (85 to: 101)
		by: composedPortfolio.
	#_coverageTracker10113_
		coverAll:
			{250 to: 253}
		evaluating: [
			receiver4 add:
				(#_coverageTracker10113_
					cover: (255 to: 261)
					declaredAt: (61 to: 67)
					by: account) ]
		thatSends: #add:
		to: receiver4 ] value.
	[ | receiver12 |
	receiver12 _ #_coverageTracker10113_
		coverAll:
			{267 to: 270}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10113_
		coverAll:
			{275 to: 281. 318 to: 323. 357 to: 372}
		evaluating: [
			receiver12
				should: [
					[ | receiver5 |
					receiver5 _ #_coverageTracker10113_
						cover: (285 to: 299)
						declaredAt: (69 to: 83)
						by: simplePortfolio.
					#_coverageTracker10113_
						coverAll:
							{301 to: 304}
						evaluating: [
							receiver5 add:
								(#_coverageTracker10113_
									cover: (306 to: 312)
									declaredAt: (61 to: 67)
									by: account) ]
						thatSends: #add:
						to: receiver5 ] value ]
				raise:
					[ | receiver6 |
					receiver6 _ #_coverageTracker10113_
						coverAll:
							{325 to: 329}
						by: Error.
					#_coverageTracker10113_
						coverAll:
							{331 to: 331}
						evaluating: [
							receiver6 -
								(#_coverageTracker10113_
									coverAll:
										{333 to: 352}
									by: MessageNotUnderstood) ]
						thatSends: #-
						to: receiver6 ] value
				withExceptionDo: [ :anError |
					[ | receiver9 |
					receiver9 _ #_coverageTracker10113_
						coverAll:
							{390 to: 393}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker10113_
						coverAll:
							{395 to: 401. 442 to: 448}
						evaluating: [
							receiver9
								assert:
									[ | receiver7 |
									receiver7 _ #_coverageTracker10113_
										coverAll:
											{403 to: 411}
										by: Portfolio.
									#_coverageTracker10113_
										coverAll:
											{413 to: 440}
										evaluating: [ receiver7 canNotAddAccountErrorMessage ]
										thatSends: #canNotAddAccountErrorMessage
										to: receiver7 ] value
								equals:
									[ | receiver8 |
									receiver8 _ #_coverageTracker10113_
										cover: (450 to: 456)
										declaredAt: (377 to: 383)
										by: anError.
									#_coverageTracker10113_
										coverAll:
											{458 to: 468}
										evaluating: [ receiver8 messageText ]
										thatSends: #messageText
										to: receiver8 ] value ]
						thatSends: #assert:equals:
						to: receiver9 ] value.
					[ | receiver11 |
					receiver11 _ #_coverageTracker10113_
						coverAll:
							{474 to: 477}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker10113_
						coverAll:
							{479 to: 485}
						evaluating: [
							receiver11 assert:
								[ | receiver10 |
								receiver10 _ #_coverageTracker10113_
									cover: (487 to: 501)
									declaredAt: (69 to: 83)
									by: simplePortfolio.
								#_coverageTracker10113_
									coverAll:
										{503 to: 517}
									evaluating: [ receiver10 accountsIsEmpty ]
									thatSends: #accountsIsEmpty
									to: receiver10 ] value ]
						thatSends: #assert:
						to: receiver11 ] value ]]
		thatSends: #should:raise:withExceptionDo:
		to: receiver12 ] value.! !
!Behavior method!
test06PortfolioLooksForRegisteredTransactionsRecursively
	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortfolio composedPortfolioAccountWithdraw simplePortfolioAccountDeposit |
	#_coverageTracker10135_ markAsExecuted.
	#_coverageTracker10135_
		cover: (212 to: 233)
		declaredAt: (62 to: 83)
		by:
			(simplePortfolioAccount _ [ | receiver1 |
			receiver1 _ #_coverageTracker10135_
				coverAll:
					{238 to: 253}
				by: ReceptiveAccount.
			#_coverageTracker10135_
				coverAll:
					{255 to: 257}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker10135_
		cover: (261 to: 289)
		declaredAt: (177 to: 205)
		by:
			(simplePortfolioAccountDeposit _ [ | receiver2 |
			receiver2 _ #_coverageTracker10135_
				coverAll:
					{294 to: 300}
				by: Deposit.
			#_coverageTracker10135_
				coverAll:
					{302 to: 310. 316 to: 318}
				evaluating: [
					receiver2
						register:
							(#_coverageTracker10135_
								coverAll:
									{312 to: 314}
								byLiteralOrPseudoVariable: 100)
						on:
							(#_coverageTracker10135_
								cover: (320 to: 341)
								declaredAt: (62 to: 83)
								by: simplePortfolioAccount) ]
				thatSends: #register:on:
				to: receiver2 ] value).
	#_coverageTracker10135_
		cover: (345 to: 359)
		declaredAt: (85 to: 99)
		by:
			(simplePortfolio _ [ | receiver3 |
			receiver3 _ #_coverageTracker10135_
				coverAll:
					{364 to: 372}
				by: Portfolio.
			#_coverageTracker10135_
				coverAll:
					{374 to: 378}
				evaluating: [
					receiver3 with:
						(#_coverageTracker10135_
							cover: (380 to: 401)
							declaredAt: (62 to: 83)
							by: simplePortfolioAccount) ]
				thatSends: #with:
				to: receiver3 ] value).
	#_coverageTracker10135_
		cover: (407 to: 430)
		declaredAt: (101 to: 124)
		by:
			(composedPortfolioAccount _ [ | receiver4 |
			receiver4 _ #_coverageTracker10135_
				coverAll:
					{435 to: 450}
				by: ReceptiveAccount.
			#_coverageTracker10135_
				coverAll:
					{452 to: 454}
				evaluating: [ receiver4 new ]
				thatSends: #new
				to: receiver4 ] value).
	#_coverageTracker10135_
		cover: (458 to: 489)
		declaredAt: (144 to: 175)
		by:
			(composedPortfolioAccountWithdraw _ [ | receiver5 |
			receiver5 _ #_coverageTracker10135_
				coverAll:
					{494 to: 501}
				by: Withdraw.
			#_coverageTracker10135_
				coverAll:
					{503 to: 511. 516 to: 518}
				evaluating: [
					receiver5
						register:
							(#_coverageTracker10135_
								coverAll:
									{513 to: 514}
								byLiteralOrPseudoVariable: 50)
						on:
							(#_coverageTracker10135_
								cover: (520 to: 543)
								declaredAt: (101 to: 124)
								by: composedPortfolioAccount) ]
				thatSends: #register:on:
				to: receiver5 ] value).
	#_coverageTracker10135_
		cover: (547 to: 563)
		declaredAt: (126 to: 142)
		by:
			(composedPortfolio _ [ | receiver6 |
			receiver6 _ #_coverageTracker10135_
				coverAll:
					{568 to: 576}
				by: Portfolio.
			#_coverageTracker10135_
				coverAll:
					{578 to: 582. 600 to: 604}
				evaluating: [
					receiver6
						with:
							(#_coverageTracker10135_
								cover: (584 to: 598)
								declaredAt: (85 to: 99)
								by: simplePortfolio)
						with:
							(#_coverageTracker10135_
								cover: (606 to: 629)
								declaredAt: (101 to: 124)
								by: composedPortfolioAccount) ]
				thatSends: #with:with:
				to: receiver6 ] value).
	[ | receiver8 |
	receiver8 _ #_coverageTracker10135_
		coverAll:
			{635 to: 638}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10135_
		coverAll:
			{640 to: 646}
		evaluating: [
			receiver8 assert:
				[ | receiver7 |
				receiver7 _ #_coverageTracker10135_
					cover: (649 to: 665)
					declaredAt: (126 to: 142)
					by: composedPortfolio.
				#_coverageTracker10135_
					coverAll:
						{667 to: 680}
					evaluating: [
						receiver7 hasRegistered:
							(#_coverageTracker10135_
								cover: (682 to: 710)
								declaredAt: (177 to: 205)
								by: simplePortfolioAccountDeposit) ]
					thatSends: #hasRegistered:
					to: receiver7 ] value ]
		thatSends: #assert:
		to: receiver8 ] value.
	[ | receiver10 |
	receiver10 _ #_coverageTracker10135_
		coverAll:
			{715 to: 718}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10135_
		coverAll:
			{720 to: 726}
		evaluating: [
			receiver10 assert:
				[ | receiver9 |
				receiver9 _ #_coverageTracker10135_
					cover: (729 to: 745)
					declaredAt: (126 to: 142)
					by: composedPortfolio.
				#_coverageTracker10135_
					coverAll:
						{747 to: 760}
					evaluating: [
						receiver9 hasRegistered:
							(#_coverageTracker10135_
								cover: (762 to: 793)
								declaredAt: (144 to: 175)
								by: composedPortfolioAccountWithdraw) ]
					thatSends: #hasRegistered:
					to: receiver9 ] value ]
		thatSends: #assert:
		to: receiver10 ] value.! !
!Behavior method!
affectTransferNet: aTransferNet
	#_coverageTracker10156_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker10156_
		cover: (37 to: 48)
		declaredAt: (20 to: 31)
		by: aTransferNet.
	#_coverageTracker10156_
		coverAll:
			{50 to: 63}
		evaluating: [
			receiver1 addDepositFor:
				(#_coverageTracker10156_
					cover: (65 to: 69)
					declaredAt: (65 to: 69)
					by: value) ]
		thatSends: #addDepositFor:
		to: receiver1 ] value.! !
!Behavior method!
addPortfolio: aPortfolio
	#_coverageTracker10166_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker10166_
		coverAll:
			{28 to: 31}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10166_
		coverAll:
			{33 to: 40}
		evaluating: [
			receiver2 addName:
				[ | receiver1 |
				receiver1 _ #_coverageTracker10166_
					cover: (42 to: 51)
					declaredAt: (15 to: 24)
					by: aPortfolio.
				#_coverageTracker10166_
					coverAll:
						{53 to: 56}
					evaluating: [ receiver1 name ]
					thatSends: #name
					to: receiver1 ] value ]
		thatSends: #addName:
		to: receiver2 ] value.
	#_coverageTracker10166_
		cover: (79 to: 85)
		declaredAt: (60 to: 66)
		by:
			(indents _ [ | receiver3 |
			receiver3 _ #_coverageTracker10166_
				coverAll:
					{71 to: 76}
				byLiteralOrPseudoVariable: '    '.
			#_coverageTracker10166_
				coverAll:
					{77 to: 77}
				evaluating: [
					receiver3 ,
						(#_coverageTracker10166_
							cover: (60 to: 66)
							declaredAt: (60 to: 66)
							by: indents) ]
				thatSends: #,
				to: receiver3 ] value).
	[ | receiver4 |
	receiver4 _ #_coverageTracker10166_
		cover: (89 to: 98)
		declaredAt: (15 to: 24)
		by: aPortfolio.
	#_coverageTracker10166_
		coverAll:
			{100 to: 117}
		evaluating: [
			receiver4 addAccountsInTree:
				(#_coverageTracker10166_
					coverAll:
						{119 to: 122}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addAccountsInTree:
		to: receiver4 ] value.
	#_coverageTracker10166_
		cover: (137 to: 143)
		declaredAt: (60 to: 66)
		by:
			(indents _ [ | receiver5 |
			receiver5 _ #_coverageTracker10166_
				cover: (126 to: 132)
				declaredAt: (60 to: 66)
				by: indents.
			#_coverageTracker10166_
				coverAll:
					{145 to: 155}
				evaluating: [
					receiver5 allButLast:
						(#_coverageTracker10166_
							coverAll:
								{157 to: 157}
							byLiteralOrPseudoVariable: 4) ]
				thatSends: #allButLast:
				to: receiver5 ] value).! !
!Behavior method!
addWithdrawFor: anAmount
	#_coverageTracker10183_ markAsExecuted.! !
!Behavior method!
depositLeg
	#_coverageTracker10191_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker10191_
		cover: (15 to: 22)
		declaredAt: (15 to: 22)
		by: transfer.
	#_coverageTracker10191_
		coverAll:
			{24 to: 33}
		evaluating: [ receiver1 depositLeg ]
		thatSends: #depositLeg
		to: receiver1 ] value.! !
!Behavior method!
test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios
	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortofolio |
	#_coverageTracker10201_ markAsExecuted.
	#_coverageTracker10201_
		cover: (153 to: 174)
		declaredAt: (65 to: 86)
		by:
			(simplePortfolioAccount _ [ | receiver1 |
			receiver1 _ #_coverageTracker10201_
				coverAll:
					{179 to: 194}
				by: ReceptiveAccount.
			#_coverageTracker10201_
				coverAll:
					{196 to: 198}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker10201_
		coverAll:
			{202 to: 208}
		by: Deposit.
	#_coverageTracker10201_
		coverAll:
			{210 to: 218. 224 to: 226}
		evaluating: [
			receiver2
				register:
					(#_coverageTracker10201_
						coverAll:
							{220 to: 222}
						byLiteralOrPseudoVariable: 100)
				on:
					(#_coverageTracker10201_
						cover: (228 to: 249)
						declaredAt: (65 to: 86)
						by: simplePortfolioAccount) ]
		thatSends: #register:on:
		to: receiver2 ] value.
	#_coverageTracker10201_
		cover: (253 to: 267)
		declaredAt: (88 to: 102)
		by:
			(simplePortfolio _ [ | receiver3 |
			receiver3 _ #_coverageTracker10201_
				coverAll:
					{272 to: 280}
				by: Portfolio.
			#_coverageTracker10201_
				coverAll:
					{282 to: 286}
				evaluating: [
					receiver3 with:
						(#_coverageTracker10201_
							cover: (288 to: 309)
							declaredAt: (65 to: 86)
							by: simplePortfolioAccount) ]
				thatSends: #with:
				to: receiver3 ] value).
	#_coverageTracker10201_
		cover: (315 to: 338)
		declaredAt: (104 to: 127)
		by:
			(composedPortfolioAccount _ [ | receiver4 |
			receiver4 _ #_coverageTracker10201_
				coverAll:
					{343 to: 358}
				by: ReceptiveAccount.
			#_coverageTracker10201_
				coverAll:
					{360 to: 362}
				evaluating: [ receiver4 new ]
				thatSends: #new
				to: receiver4 ] value).
	[ | receiver5 |
	receiver5 _ #_coverageTracker10201_
		coverAll:
			{366 to: 373}
		by: Withdraw.
	#_coverageTracker10201_
		coverAll:
			{375 to: 383. 388 to: 390}
		evaluating: [
			receiver5
				register:
					(#_coverageTracker10201_
						coverAll:
							{385 to: 386}
						byLiteralOrPseudoVariable: 50)
				on:
					(#_coverageTracker10201_
						cover: (392 to: 415)
						declaredAt: (104 to: 127)
						by: composedPortfolioAccount) ]
		thatSends: #register:on:
		to: receiver5 ] value.
	#_coverageTracker10201_
		cover: (419 to: 436)
		declaredAt: (129 to: 146)
		by:
			(composedPortofolio _ [ | receiver6 |
			receiver6 _ #_coverageTracker10201_
				coverAll:
					{441 to: 449}
				by: Portfolio.
			#_coverageTracker10201_
				coverAll:
					{451 to: 455. 473 to: 477}
				evaluating: [
					receiver6
						with:
							(#_coverageTracker10201_
								cover: (457 to: 471)
								declaredAt: (88 to: 102)
								by: simplePortfolio)
						with:
							(#_coverageTracker10201_
								cover: (479 to: 502)
								declaredAt: (104 to: 127)
								by: composedPortfolioAccount) ]
				thatSends: #with:with:
				to: receiver6 ] value).
	[ | receiver11 |
	receiver11 _ #_coverageTracker10201_
		coverAll:
			{508 to: 511}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10201_
		coverAll:
			{513 to: 519. 582 to: 588}
		evaluating: [
			receiver11
				assert:
					[ | receiver9 |
					receiver9 _ [ | receiver7 |
					receiver7 _ #_coverageTracker10201_
						cover: (522 to: 545)
						declaredAt: (104 to: 127)
						by: composedPortfolioAccount.
					#_coverageTracker10201_
						coverAll:
							{547 to: 553}
						evaluating: [ receiver7 balance ]
						thatSends: #balance
						to: receiver7 ] value.
					#_coverageTracker10201_
						coverAll:
							{555 to: 555}
						evaluating: [
							receiver9 +
								[ | receiver8 |
								receiver8 _ #_coverageTracker10201_
									cover: (557 to: 571)
									declaredAt: (88 to: 102)
									by: simplePortfolio.
								#_coverageTracker10201_
									coverAll:
										{573 to: 579}
									evaluating: [ receiver8 balance ]
									thatSends: #balance
									to: receiver8 ] value ]
						thatSends: #+
						to: receiver9 ] value
				equals:
					[ | receiver10 |
					receiver10 _ #_coverageTracker10201_
						cover: (590 to: 607)
						declaredAt: (129 to: 146)
						by: composedPortofolio.
					#_coverageTracker10201_
						coverAll:
							{609 to: 615}
						evaluating: [ receiver10 balance ]
						thatSends: #balance
						to: receiver10 ] value ]
		thatSends: #assert:equals:
		to: receiver11 ] value.! !
!Behavior method!
depositLeg
	#_coverageTracker10220_ markAsExecuted.
	^ #_coverageTracker10220_
		cover: (16 to: 25)
		declaredAt: (16 to: 25)
		by: depositLeg.! !
!Behavior method!
initializeOn: aPortfolio
	#_coverageTracker10228_ markAsExecuted.
	#_coverageTracker10228_
		cover: (30 to: 38)
		declaredAt: (30 to: 38)
		by:
			(portfolio _ #_coverageTracker10228_
				cover: (43 to: 52)
				declaredAt: (15 to: 24)
				by: aPortfolio).! !
!Behavior method!
test04CanNavigateFromWithdrawLegToDepositLeg
	| transfer withdrawLegDepositLeg |
	#_coverageTracker10237_ markAsExecuted.
	#_coverageTracker10237_
		cover: (85 to: 92)
		declaredAt: (50 to: 57)
		by:
			(transfer _ [ | receiver1 |
			receiver1 _ #_coverageTracker10237_
				coverAll:
					{98 to: 101}
				byLiteralOrPseudoVariable: self.
			#_coverageTracker10237_
				coverAll:
					{103 to: 134}
				evaluating: [ receiver1 createTransferBetweenTwoAccounts ]
				thatSends: #createTransferBetweenTwoAccounts
				to: receiver1 ] value).
	#_coverageTracker10237_
		cover: (140 to: 160)
		declaredAt: (59 to: 79)
		by:
			(withdrawLegDepositLeg _ [ | receiver3 |
			receiver3 _ [ | receiver2 |
			receiver2 _ #_coverageTracker10237_
				cover: (165 to: 172)
				declaredAt: (50 to: 57)
				by: transfer.
			#_coverageTracker10237_
				coverAll:
					{174 to: 184}
				evaluating: [ receiver2 withdrawLeg ]
				thatSends: #withdrawLeg
				to: receiver2 ] value.
			#_coverageTracker10237_
				coverAll:
					{186 to: 195}
				evaluating: [ receiver3 depositLeg ]
				thatSends: #depositLeg
				to: receiver3 ] value).
	[ | receiver5 |
	receiver5 _ #_coverageTracker10237_
		coverAll:
			{201 to: 204}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10237_
		coverAll:
			{206 to: 212. 234 to: 240}
		evaluating: [
			receiver5
				assert:
					[ | receiver4 |
					receiver4 _ #_coverageTracker10237_
						cover: (214 to: 221)
						declaredAt: (50 to: 57)
						by: transfer.
					#_coverageTracker10237_
						coverAll:
							{223 to: 232}
						evaluating: [ receiver4 depositLeg ]
						thatSends: #depositLeg
						to: receiver4 ] value
				equals:
					(#_coverageTracker10237_
						cover: (242 to: 262)
						declaredAt: (59 to: 79)
						by: withdrawLegDepositLeg) ]
		thatSends: #assert:equals:
		to: receiver5 ] value.! !
!Behavior method!
named: aName
	#_coverageTracker10251_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker10251_
		coverAll:
			{19 to: 22}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10251_
		coverAll:
			{24 to: 26}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker10251_
		coverAll:
			{28 to: 46}
		evaluating: [
			receiver2 initializeWithName:
				(#_coverageTracker10251_
					cover: (48 to: 52)
					declaredAt: (8 to: 12)
					by: aName) ]
		thatSends: #initializeWithName:
		to: receiver2 ] value.! !
!Behavior method!
register: anAmount from: senderAccount to: receiverAccount
	| transfer |
	#_coverageTracker10260_ markAsExecuted.
	#_coverageTracker10260_
		cover: (80 to: 87)
		declaredAt: (66 to: 73)
		by:
			(transfer _ [ | receiver2 |
			receiver2 _ [ | receiver1 |
			receiver1 _ #_coverageTracker10260_
				coverAll:
					{92 to: 95}
				byLiteralOrPseudoVariable: self.
			#_coverageTracker10260_
				coverAll:
					{97 to: 99}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value.
			#_coverageTracker10260_
				coverAll:
					{101 to: 114}
				evaluating: [
					receiver2 initializeFor:
						(#_coverageTracker10260_
							cover: (116 to: 123)
							declaredAt: (11 to: 18)
							by: anAmount) ]
				thatSends: #initializeFor:
				to: receiver2 ] value).
	[ | receiver4 |
	receiver4 _ #_coverageTracker10260_
		cover: (128 to: 140)
		declaredAt: (26 to: 38)
		by: senderAccount.
	#_coverageTracker10260_
		coverAll:
			{142 to: 150}
		evaluating: [
			receiver4 register:
				[ | receiver3 |
				receiver3 _ #_coverageTracker10260_
					cover: (152 to: 159)
					declaredAt: (66 to: 73)
					by: transfer.
				#_coverageTracker10260_
					coverAll:
						{161 to: 171}
					evaluating: [ receiver3 withdrawLeg ]
					thatSends: #withdrawLeg
					to: receiver3 ] value ]
		thatSends: #register:
		to: receiver4 ] value.
	[ | receiver6 |
	receiver6 _ #_coverageTracker10260_
		cover: (175 to: 189)
		declaredAt: (44 to: 58)
		by: receiverAccount.
	#_coverageTracker10260_
		coverAll:
			{191 to: 199}
		evaluating: [
			receiver6 register:
				[ | receiver5 |
				receiver5 _ #_coverageTracker10260_
					cover: (201 to: 208)
					declaredAt: (66 to: 73)
					by: transfer.
				#_coverageTracker10260_
					coverAll:
						{210 to: 219}
					evaluating: [ receiver5 depositLeg ]
					thatSends: #depositLeg
					to: receiver5 ] value ]
		thatSends: #register:
		to: receiver6 ] value.
	^ #_coverageTracker10260_
		cover: (226 to: 233)
		declaredAt: (66 to: 73)
		by: transfer.! !
!Behavior method!
test01BalanceOfPortfolioWithoutAccountsIsZero
	#_coverageTracker10269_ markAsExecuted.
	[ | receiver3 |
	receiver3 _ #_coverageTracker10269_
		coverAll:
			{49 to: 52}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10269_
		coverAll:
			{54 to: 60. 64 to: 70}
		evaluating: [
			receiver3
				assert:
					(#_coverageTracker10269_
						coverAll:
							{62 to: 62}
						byLiteralOrPseudoVariable: 0)
				equals:
					[ | receiver2 |
					receiver2 _ [ | receiver1 |
					receiver1 _ #_coverageTracker10269_
						coverAll:
							{72 to: 80}
						by: Portfolio.
					#_coverageTracker10269_
						coverAll:
							{82 to: 84}
						evaluating: [ receiver1 new ]
						thatSends: #new
						to: receiver1 ] value.
					#_coverageTracker10269_
						coverAll:
							{86 to: 92}
						evaluating: [ receiver2 balance ]
						thatSends: #balance
						to: receiver2 ] value ]
		thatSends: #assert:equals:
		to: receiver3 ] value.! !
!Behavior method!
initializeFor: anAmount
	#_coverageTracker10277_ markAsExecuted.
	#_coverageTracker10277_
		cover: (27 to: 36)
		declaredAt: (27 to: 36)
		by:
			(depositLeg _ [ | receiver1 |
			receiver1 _ #_coverageTracker10277_
				coverAll:
					{41 to: 55}
				by: TransferDeposit.
			#_coverageTracker10277_
				coverAll:
					{57 to: 67}
				evaluating: [
					receiver1 registerOn:
						(#_coverageTracker10277_
							coverAll:
								{69 to: 72}
							byLiteralOrPseudoVariable: self) ]
				thatSends: #registerOn:
				to: receiver1 ] value).
	#_coverageTracker10277_
		cover: (76 to: 86)
		declaredAt: (76 to: 86)
		by:
			(withdrawLeg _ [ | receiver2 |
			receiver2 _ #_coverageTracker10277_
				coverAll:
					{91 to: 106}
				by: TransferWithdraw.
			#_coverageTracker10277_
				coverAll:
					{108 to: 118}
				evaluating: [
					receiver2 registerOn:
						(#_coverageTracker10277_
							coverAll:
								{120 to: 123}
							byLiteralOrPseudoVariable: self) ]
				thatSends: #registerOn:
				to: receiver2 ] value).
	#_coverageTracker10277_
		cover: (129 to: 133)
		declaredAt: (129 to: 133)
		by:
			(value _ #_coverageTracker10277_
				cover: (139 to: 146)
				declaredAt: (16 to: 23)
				by: anAmount).! !
!Behavior method!
test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen
	| transferNet account |
	#_coverageTracker10287_ markAsExecuted.
	#_coverageTracker10287_
		cover: (94 to: 100)
		declaredAt: (81 to: 87)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker10287_
				coverAll:
					{105 to: 120}
				by: ReceptiveAccount.
			#_coverageTracker10287_
				coverAll:
					{122 to: 124}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver3 |
	receiver3 _ #_coverageTracker10287_
		coverAll:
			{128 to: 135}
		by: Transfer.
	#_coverageTracker10287_
		coverAll:
			{137 to: 145. 150 to: 154. 164 to: 166}
		evaluating: [
			receiver3
				register:
					(#_coverageTracker10287_
						coverAll:
							{147 to: 148}
						byLiteralOrPseudoVariable: 10)
				from:
					(#_coverageTracker10287_
						cover: (156 to: 162)
						declaredAt: (81 to: 87)
						by: account)
				to:
					[ | receiver2 |
					receiver2 _ #_coverageTracker10287_
						coverAll:
							{168 to: 183}
						by: ReceptiveAccount.
					#_coverageTracker10287_
						coverAll:
							{185 to: 187}
						evaluating: [ receiver2 new ]
						thatSends: #new
						to: receiver2 ] value ]
		thatSends: #register:from:to:
		to: receiver3 ] value.
	#_coverageTracker10287_
		cover: (194 to: 204)
		declaredAt: (69 to: 79)
		by:
			(transferNet _ [ | receiver4 |
			receiver4 _ #_coverageTracker10287_
				coverAll:
					{209 to: 219}
				by: TransferNet.
			#_coverageTracker10287_
				coverAll:
					{221 to: 224}
				evaluating: [
					receiver4 for:
						(#_coverageTracker10287_
							cover: (226 to: 232)
							declaredAt: (81 to: 87)
							by: account) ]
				thatSends: #for:
				to: receiver4 ] value).
	[ | receiver6 |
	receiver6 _ #_coverageTracker10287_
		coverAll:
			{238 to: 241}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10287_
		coverAll:
			{243 to: 249. 255 to: 261}
		evaluating: [
			receiver6
				assert:
					(#_coverageTracker10287_
						coverAll:
							{251 to: 253}
						byLiteralOrPseudoVariable: -10)
				equals:
					[ | receiver5 |
					receiver5 _ #_coverageTracker10287_
						cover: (263 to: 273)
						declaredAt: (69 to: 79)
						by: transferNet.
					#_coverageTracker10287_
						coverAll:
							{275 to: 283}
						evaluating: [ receiver5 calculate ]
						thatSends: #calculate
						to: receiver5 ] value ]
		thatSends: #assert:equals:
		to: receiver6 ] value.! !
!Behavior method!
addTransactionsInSummary: aSummary
	#_coverageTracker10297_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker10297_
		cover: (38 to: 49)
		declaredAt: (38 to: 49)
		by: transactions.
	#_coverageTracker10297_
		coverAll:
			{51 to: 53}
		evaluating: [
			receiver2 do: [ :aTransaction |
				[ | receiver1 |
				receiver1 _ #_coverageTracker10297_
					cover: (72 to: 83)
					declaredAt: (57 to: 68)
					by: aTransaction.
				#_coverageTracker10297_
					coverAll:
						{85 to: 108}
					evaluating: [
						receiver1 addTransactionInSummary:
							(#_coverageTracker10297_
								cover: (110 to: 117)
								declaredAt: (27 to: 34)
								by: aSummary) ]
					thatSends: #addTransactionInSummary:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
affectTransferNet: aTransferNet
	#_coverageTracker10306_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker10306_
		cover: (37 to: 48)
		declaredAt: (20 to: 31)
		by: aTransferNet.
	#_coverageTracker10306_
		coverAll:
			{50 to: 71}
		evaluating: [
			receiver2 addTransferDepositFor:
				[ | receiver1 |
				receiver1 _ #_coverageTracker10306_
					coverAll:
						{73 to: 76}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker10306_
					coverAll:
						{78 to: 82}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #addTransferDepositFor:
		to: receiver2 ] value.! !
!Behavior method!
addInTree: aPortfolioTreeFormat
	#_coverageTracker10322_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker10322_
		cover: (35 to: 54)
		declaredAt: (12 to: 31)
		by: aPortfolioTreeFormat.
	#_coverageTracker10322_
		coverAll:
			{56 to: 68}
		evaluating: [
			receiver1 addPortfolio:
				(#_coverageTracker10322_
					coverAll:
						{70 to: 73}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addPortfolio:
		to: receiver1 ] value.! !
!Behavior method!
test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively
	| account leftParentPortfolio leftRootParentPortfolio portfolio rightParentPortfolio rightRootParentPortfolio |
	#_coverageTracker10330_ markAsExecuted.
	#_coverageTracker10330_
		cover: (185 to: 191)
		declaredAt: (72 to: 78)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker10330_
				coverAll:
					{196 to: 211}
				by: ReceptiveAccount.
			#_coverageTracker10330_
				coverAll:
					{213 to: 215}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker10330_
		cover: (219 to: 227)
		declaredAt: (124 to: 132)
		by:
			(portfolio _ [ | receiver2 |
			receiver2 _ #_coverageTracker10330_
				coverAll:
					{232 to: 240}
				by: Portfolio.
			#_coverageTracker10330_
				coverAll:
					{242 to: 244}
				evaluating: [ receiver2 new ]
				thatSends: #new
				to: receiver2 ] value).
	#_coverageTracker10330_
		cover: (248 to: 266)
		declaredAt: (80 to: 98)
		by:
			(leftParentPortfolio _ [ | receiver3 |
			receiver3 _ #_coverageTracker10330_
				coverAll:
					{271 to: 279}
				by: Portfolio.
			#_coverageTracker10330_
				coverAll:
					{281 to: 285}
				evaluating: [
					receiver3 with:
						(#_coverageTracker10330_
							cover: (287 to: 295)
							declaredAt: (124 to: 132)
							by: portfolio) ]
				thatSends: #with:
				to: receiver3 ] value).
	#_coverageTracker10330_
		cover: (300 to: 322)
		declaredAt: (100 to: 122)
		by:
			(leftRootParentPortfolio _ [ | receiver4 |
			receiver4 _ #_coverageTracker10330_
				coverAll:
					{327 to: 335}
				by: Portfolio.
			#_coverageTracker10330_
				coverAll:
					{337 to: 341}
				evaluating: [
					receiver4 with:
						(#_coverageTracker10330_
							cover: (343 to: 361)
							declaredAt: (80 to: 98)
							by: leftParentPortfolio) ]
				thatSends: #with:
				to: receiver4 ] value).
	[ | receiver5 |
	receiver5 _ #_coverageTracker10330_
		cover: (365 to: 387)
		declaredAt: (100 to: 122)
		by: leftRootParentPortfolio.
	#_coverageTracker10330_
		coverAll:
			{389 to: 392}
		evaluating: [
			receiver5 add:
				(#_coverageTracker10330_
					cover: (394 to: 400)
					declaredAt: (72 to: 78)
					by: account) ]
		thatSends: #add:
		to: receiver5 ] value.
	#_coverageTracker10330_
		cover: (406 to: 425)
		declaredAt: (134 to: 153)
		by:
			(rightParentPortfolio _ [ | receiver6 |
			receiver6 _ #_coverageTracker10330_
				coverAll:
					{430 to: 438}
				by: Portfolio.
			#_coverageTracker10330_
				coverAll:
					{440 to: 444}
				evaluating: [
					receiver6 with:
						(#_coverageTracker10330_
							cover: (446 to: 454)
							declaredAt: (124 to: 132)
							by: portfolio) ]
				thatSends: #with:
				to: receiver6 ] value).
	#_coverageTracker10330_
		cover: (459 to: 482)
		declaredAt: (155 to: 178)
		by:
			(rightRootParentPortfolio _ [ | receiver7 |
			receiver7 _ #_coverageTracker10330_
				coverAll:
					{487 to: 495}
				by: Portfolio.
			#_coverageTracker10330_
				coverAll:
					{497 to: 501}
				evaluating: [
					receiver7 with:
						(#_coverageTracker10330_
							cover: (503 to: 522)
							declaredAt: (134 to: 153)
							by: rightParentPortfolio) ]
				thatSends: #with:
				to: receiver7 ] value).
	[ | receiver8 |
	receiver8 _ #_coverageTracker10330_
		cover: (526 to: 549)
		declaredAt: (155 to: 178)
		by: rightRootParentPortfolio.
	#_coverageTracker10330_
		coverAll:
			{551 to: 554}
		evaluating: [
			receiver8 add:
				(#_coverageTracker10330_
					cover: (556 to: 562)
					declaredAt: (72 to: 78)
					by: account) ]
		thatSends: #add:
		to: receiver8 ] value.
	[ | receiver16 |
	receiver16 _ #_coverageTracker10330_
		coverAll:
			{567 to: 570}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10330_
		coverAll:
			{575 to: 581. 612 to: 617. 651 to: 666}
		evaluating: [
			receiver16
				should: [
					[ | receiver9 |
					receiver9 _ #_coverageTracker10330_
						cover: (585 to: 593)
						declaredAt: (124 to: 132)
						by: portfolio.
					#_coverageTracker10330_
						coverAll:
							{595 to: 598}
						evaluating: [
							receiver9 add:
								(#_coverageTracker10330_
									cover: (600 to: 606)
									declaredAt: (72 to: 78)
									by: account) ]
						thatSends: #add:
						to: receiver9 ] value ]
				raise:
					[ | receiver10 |
					receiver10 _ #_coverageTracker10330_
						coverAll:
							{619 to: 623}
						by: Error.
					#_coverageTracker10330_
						coverAll:
							{625 to: 625}
						evaluating: [
							receiver10 -
								(#_coverageTracker10330_
									coverAll:
										{627 to: 646}
									by: MessageNotUnderstood) ]
						thatSends: #-
						to: receiver10 ] value
				withExceptionDo: [ :anError |
					[ | receiver13 |
					receiver13 _ #_coverageTracker10330_
						coverAll:
							{684 to: 687}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker10330_
						coverAll:
							{689 to: 695. 736 to: 742}
						evaluating: [
							receiver13
								assert:
									[ | receiver11 |
									receiver11 _ #_coverageTracker10330_
										coverAll:
											{697 to: 705}
										by: Portfolio.
									#_coverageTracker10330_
										coverAll:
											{707 to: 734}
										evaluating: [ receiver11 canNotAddAccountErrorMessage ]
										thatSends: #canNotAddAccountErrorMessage
										to: receiver11 ] value
								equals:
									[ | receiver12 |
									receiver12 _ #_coverageTracker10330_
										cover: (744 to: 750)
										declaredAt: (671 to: 677)
										by: anError.
									#_coverageTracker10330_
										coverAll:
											{752 to: 762}
										evaluating: [ receiver12 messageText ]
										thatSends: #messageText
										to: receiver12 ] value ]
						thatSends: #assert:equals:
						to: receiver13 ] value.
					[ | receiver15 |
					receiver15 _ #_coverageTracker10330_
						coverAll:
							{768 to: 771}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker10330_
						coverAll:
							{773 to: 779}
						evaluating: [
							receiver15 assert:
								[ | receiver14 |
								receiver14 _ #_coverageTracker10330_
									cover: (781 to: 789)
									declaredAt: (124 to: 132)
									by: portfolio.
								#_coverageTracker10330_
									coverAll:
										{791 to: 805}
									evaluating: [ receiver14 accountsIsEmpty ]
									thatSends: #accountsIsEmpty
									to: receiver14 ] value ]
						thatSends: #assert:
						to: receiver15 ] value ]]
		thatSends: #should:raise:withExceptionDo:
		to: receiver16 ] value.! !
!Behavior method!
test02TransferNetForAccountWithTransferDepositTenIsTen
	| transferNet account |
	#_coverageTracker10361_ markAsExecuted.
	#_coverageTracker10361_
		cover: (85 to: 91)
		declaredAt: (72 to: 78)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker10361_
				coverAll:
					{96 to: 111}
				by: ReceptiveAccount.
			#_coverageTracker10361_
				coverAll:
					{113 to: 115}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver3 |
	receiver3 _ #_coverageTracker10361_
		coverAll:
			{119 to: 126}
		by: Transfer.
	#_coverageTracker10361_
		coverAll:
			{128 to: 136. 141 to: 145. 168 to: 170}
		evaluating: [
			receiver3
				register:
					(#_coverageTracker10361_
						coverAll:
							{138 to: 139}
						byLiteralOrPseudoVariable: 10)
				from:
					[ | receiver2 |
					receiver2 _ #_coverageTracker10361_
						coverAll:
							{147 to: 162}
						by: ReceptiveAccount.
					#_coverageTracker10361_
						coverAll:
							{164 to: 166}
						evaluating: [ receiver2 new ]
						thatSends: #new
						to: receiver2 ] value
				to:
					(#_coverageTracker10361_
						cover: (172 to: 178)
						declaredAt: (72 to: 78)
						by: account) ]
		thatSends: #register:from:to:
		to: receiver3 ] value.
	#_coverageTracker10361_
		cover: (185 to: 195)
		declaredAt: (60 to: 70)
		by:
			(transferNet _ [ | receiver4 |
			receiver4 _ #_coverageTracker10361_
				coverAll:
					{200 to: 210}
				by: TransferNet.
			#_coverageTracker10361_
				coverAll:
					{212 to: 215}
				evaluating: [
					receiver4 for:
						(#_coverageTracker10361_
							cover: (217 to: 223)
							declaredAt: (72 to: 78)
							by: account) ]
				thatSends: #for:
				to: receiver4 ] value).
	[ | receiver6 |
	receiver6 _ #_coverageTracker10361_
		coverAll:
			{229 to: 232}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10361_
		coverAll:
			{234 to: 240. 245 to: 251}
		evaluating: [
			receiver6
				assert:
					(#_coverageTracker10361_
						coverAll:
							{242 to: 243}
						byLiteralOrPseudoVariable: 10)
				equals:
					[ | receiver5 |
					receiver5 _ #_coverageTracker10361_
						cover: (253 to: 263)
						declaredAt: (60 to: 70)
						by: transferNet.
					#_coverageTracker10361_
						coverAll:
							{265 to: 273}
						evaluating: [ receiver5 calculate ]
						thatSends: #calculate
						to: receiver5 ] value ]
		thatSends: #assert:equals:
		to: receiver6 ] value.! !
!Behavior method!
test12PortfolioCanNotIncludeItself
	| account simplePortfolio |
	#_coverageTracker10376_ markAsExecuted.
	#_coverageTracker10376_
		cover: (69 to: 75)
		declaredAt: (40 to: 46)
		by:
			(account _ [ | receiver1 |
			receiver1 _ #_coverageTracker10376_
				coverAll:
					{80 to: 95}
				by: ReceptiveAccount.
			#_coverageTracker10376_
				coverAll:
					{97 to: 99}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker10376_
		cover: (103 to: 117)
		declaredAt: (48 to: 62)
		by:
			(simplePortfolio _ [ | receiver2 |
			receiver2 _ #_coverageTracker10376_
				coverAll:
					{122 to: 130}
				by: Portfolio.
			#_coverageTracker10376_
				coverAll:
					{132 to: 136}
				evaluating: [
					receiver2 with:
						(#_coverageTracker10376_
							cover: (138 to: 144)
							declaredAt: (40 to: 46)
							by: account) ]
				thatSends: #with:
				to: receiver2 ] value).
	[ | receiver12 |
	receiver12 _ #_coverageTracker10376_
		coverAll:
			{150 to: 153}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10376_
		coverAll:
			{158 to: 164. 209 to: 214. 248 to: 263}
		evaluating: [
			receiver12
				should: [
					[ | receiver3 |
					receiver3 _ #_coverageTracker10376_
						cover: (168 to: 182)
						declaredAt: (48 to: 62)
						by: simplePortfolio.
					#_coverageTracker10376_
						coverAll:
							{184 to: 187}
						evaluating: [
							receiver3 add:
								(#_coverageTracker10376_
									cover: (189 to: 203)
									declaredAt: (48 to: 62)
									by: simplePortfolio) ]
						thatSends: #add:
						to: receiver3 ] value ]
				raise:
					[ | receiver4 |
					receiver4 _ #_coverageTracker10376_
						coverAll:
							{216 to: 220}
						by: Error.
					#_coverageTracker10376_
						coverAll:
							{222 to: 222}
						evaluating: [
							receiver4 -
								(#_coverageTracker10376_
									coverAll:
										{224 to: 243}
									by: MessageNotUnderstood) ]
						thatSends: #-
						to: receiver4 ] value
				withExceptionDo: [ :anError |
					[ | receiver7 |
					receiver7 _ #_coverageTracker10376_
						coverAll:
							{281 to: 284}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker10376_
						coverAll:
							{286 to: 292. 333 to: 339}
						evaluating: [
							receiver7
								assert:
									[ | receiver5 |
									receiver5 _ #_coverageTracker10376_
										coverAll:
											{294 to: 302}
										by: Portfolio.
									#_coverageTracker10376_
										coverAll:
											{304 to: 331}
										evaluating: [ receiver5 canNotAddAccountErrorMessage ]
										thatSends: #canNotAddAccountErrorMessage
										to: receiver5 ] value
								equals:
									[ | receiver6 |
									receiver6 _ #_coverageTracker10376_
										cover: (341 to: 347)
										declaredAt: (268 to: 274)
										by: anError.
									#_coverageTracker10376_
										coverAll:
											{349 to: 359}
										evaluating: [ receiver6 messageText ]
										thatSends: #messageText
										to: receiver6 ] value ]
						thatSends: #assert:equals:
						to: receiver7 ] value.
					[ | receiver9 |
					receiver9 _ #_coverageTracker10376_
						coverAll:
							{365 to: 368}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker10376_
						coverAll:
							{370 to: 376. 380 to: 386}
						evaluating: [
							receiver9
								assert:
									(#_coverageTracker10376_
										coverAll:
											{378 to: 378}
										byLiteralOrPseudoVariable: 1)
								equals:
									[ | receiver8 |
									receiver8 _ #_coverageTracker10376_
										cover: (388 to: 402)
										declaredAt: (48 to: 62)
										by: simplePortfolio.
									#_coverageTracker10376_
										coverAll:
											{404 to: 415}
										evaluating: [ receiver8 accountsSize ]
										thatSends: #accountsSize
										to: receiver8 ] value ]
						thatSends: #assert:equals:
						to: receiver9 ] value.
					[ | receiver11 |
					receiver11 _ #_coverageTracker10376_
						coverAll:
							{421 to: 424}
						byLiteralOrPseudoVariable: self.
					#_coverageTracker10376_
						coverAll:
							{426 to: 432}
						evaluating: [
							receiver11 assert:
								[ | receiver10 |
								receiver10 _ #_coverageTracker10376_
									cover: (435 to: 449)
									declaredAt: (48 to: 62)
									by: simplePortfolio.
								#_coverageTracker10376_
									coverAll:
										{451 to: 467}
									evaluating: [
										receiver10 accountsIncludes:
											(#_coverageTracker10376_
												cover: (469 to: 475)
												declaredAt: (40 to: 46)
												by: account) ]
									thatSends: #accountsIncludes:
									to: receiver10 ] value ]
						thatSends: #assert:
						to: receiver11 ] value ]]
		thatSends: #should:raise:withExceptionDo:
		to: receiver12 ] value.! !
!Behavior method!
for: anAccount
	#_coverageTracker10407_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker10407_
		coverAll:
			{21 to: 24}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker10407_
		coverAll:
			{26 to: 28}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker10407_
		coverAll:
			{30 to: 43}
		evaluating: [
			receiver2 initializeFor:
				(#_coverageTracker10407_
					cover: (45 to: 53)
					declaredAt: (6 to: 14)
					by: anAccount) ]
		thatSends: #initializeFor:
		to: receiver2 ] value.! !
!Behavior method!
balance
	#_coverageTracker10419_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker10419_
		cover: (13 to: 20)
		declaredAt: (13 to: 20)
		by: accounts.
	#_coverageTracker10419_
		coverAll:
			{22 to: 25. 62 to: 69}
		evaluating: [
			receiver2
				sum: [ :anAccount |
					[ | receiver1 |
					receiver1 _ #_coverageTracker10419_
						cover: (42 to: 50)
						declaredAt: (30 to: 38)
						by: anAccount.
					#_coverageTracker10419_
						coverAll:
							{52 to: 58}
						evaluating: [ receiver1 balance ]
						thatSends: #balance
						to: receiver1 ] value ]
				ifEmpty: [
					#_coverageTracker10419_
						coverAll:
							{73 to: 73}
						byLiteralOrPseudoVariable: 0 ]]
		thatSends: #sum:ifEmpty:
		to: receiver2 ] value.! !
!Behavior method!
value
	#_coverageTracker10433_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker10433_
		cover: (10 to: 17)
		declaredAt: (10 to: 17)
		by: transfer.
	#_coverageTracker10433_
		coverAll:
			{19 to: 23}
		evaluating: [ receiver1 value ]
		thatSends: #value
		to: receiver1 ] value.! !
!Behavior method!
affectBalance: aBalance
	#_coverageTracker10465_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker10465_
		cover: (28 to: 35)
		declaredAt: (16 to: 23)
		by: aBalance.
	#_coverageTracker10465_
		coverAll:
			{37 to: 37}
		evaluating: [
			receiver1 +
				(#_coverageTracker10465_
					cover: (39 to: 43)
					declaredAt: (39 to: 43)
					by: value) ]
		thatSends: #+
		to: receiver1 ] value.! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/29/2023 11:48:45'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/29/2023 11:48:45'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/29/2023 11:48:45'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/29/2023 11:48:46'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/29/2023 11:48:46'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/29/2023 11:48:46'!
PASSED!
!Behavior method!
accountsIsEmpty
	#_coverageTracker19389_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker19389_
		cover: (21 to: 28)
		declaredAt: (21 to: 28)
		by: accounts.
	#_coverageTracker19389_
		coverAll:
			{30 to: 36}
		evaluating: [ receiver1 isEmpty ]
		thatSends: #isEmpty
		to: receiver1 ] value.! !
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker19405_ markAsExecuted.
	#_coverageTracker19405_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ [ | receiver1 |
			receiver1 _ #_coverageTracker19405_
				coverAll:
					{66 to: 69}
				byLiteralOrPseudoVariable: self.
			#_coverageTracker19405_
				coverAll:
					{71 to: 74}
				evaluating: [
					receiver1 for:
						(#_coverageTracker19405_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]
				thatSends: #for:
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker19405_
		cover: (85 to: 91)
		declaredAt: (22 to: 28)
		by: account.
	#_coverageTracker19405_
		coverAll:
			{93 to: 101}
		evaluating: [
			receiver2 register:
				(#_coverageTracker19405_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ]
		thatSends: #register:
		to: receiver2 ] value.
	^ #_coverageTracker19405_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
addedTo: aPortfolio
	#_coverageTracker19431_ markAsExecuted.! !
!Behavior method!
for: aValue
	#_coverageTracker19451_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker19451_
		coverAll:
			{17 to: 20}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19451_
		coverAll:
			{22 to: 24}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker19451_
		coverAll:
			{26 to: 39}
		evaluating: [
			receiver2 initializeFor:
				(#_coverageTracker19451_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ]
		thatSends: #initializeFor:
		to: receiver2 ] value.! !
!Behavior method!
with: anAccount with: anotherAccount
	#_coverageTracker19465_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker19465_
		coverAll:
			{41 to: 44}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19465_
		coverAll:
			{46 to: 48}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker19465_
		coverAll:
			{53 to: 56}
		evaluating: [
			receiver2 add:
				(#_coverageTracker19465_
					cover: (58 to: 66)
					declaredAt: (7 to: 15)
					by: anAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker19465_
		coverAll:
			{71 to: 74}
		evaluating: [
			receiver3 add:
				(#_coverageTracker19465_
					cover: (76 to: 89)
					declaredAt: (23 to: 36)
					by: anotherAccount) ]
		thatSends: #add:
		to: receiver3 ] value.
	[ | receiver4 |
	receiver4 _ cascadeReceiver.
	#_coverageTracker19465_
		coverAll:
			{94 to: 101}
		evaluating: [ receiver4 yourself ]
		thatSends: #yourself
		to: receiver4 ] value ] value.! !
!Behavior method!
calculate
	#_coverageTracker19488_ markAsExecuted.
	#_coverageTracker19488_
		cover: (14 to: 17)
		declaredAt: (14 to: 17)
		by:
			(tree _ [ | receiver1 |
			receiver1 _ #_coverageTracker19488_
				coverAll:
					{22 to: 38}
				by: OrderedCollection.
			#_coverageTracker19488_
				coverAll:
					{40 to: 42}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker19488_
		cover: (46 to: 52)
		declaredAt: (46 to: 52)
		by:
			(indents _ #_coverageTracker19488_
				coverAll:
					{57 to: 58}
				byLiteralOrPseudoVariable: '').
	[ | receiver2 |
	receiver2 _ #_coverageTracker19488_
		cover: (64 to: 72)
		declaredAt: (64 to: 72)
		by: portfolio.
	#_coverageTracker19488_
		coverAll:
			{74 to: 83}
		evaluating: [
			receiver2 addInTree:
				(#_coverageTracker19488_
					coverAll:
						{85 to: 88}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addInTree:
		to: receiver2 ] value.
	^ #_coverageTracker19488_
		cover: (95 to: 98)
		declaredAt: (14 to: 17)
		by: tree.! !
!Behavior method!
addAccountsInTree: aPortfolioTreeFormat
	#_coverageTracker19495_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker19495_
		cover: (43 to: 50)
		declaredAt: (43 to: 50)
		by: accounts.
	#_coverageTracker19495_
		coverAll:
			{52 to: 54}
		evaluating: [
			receiver2 do: [ :anAccount |
				[ | receiver1 |
				receiver1 _ #_coverageTracker19495_
					cover: (71 to: 79)
					declaredAt: (58 to: 66)
					by: anAccount.
				#_coverageTracker19495_
					coverAll:
						{81 to: 90}
					evaluating: [
						receiver1 addInTree:
							(#_coverageTracker19495_
								cover: (92 to: 111)
								declaredAt: (20 to: 39)
								by: aPortfolioTreeFormat) ]
					thatSends: #addInTree:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionsTo: aCollectionOfTransactions
	#_coverageTracker19504_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker19504_
		cover: (48 to: 72)
		declaredAt: (20 to: 44)
		by: aCollectionOfTransactions.
	#_coverageTracker19504_
		coverAll:
			{74 to: 80}
		evaluating: [
			receiver1 addAll:
				(#_coverageTracker19504_
					cover: (82 to: 93)
					declaredAt: (82 to: 93)
					by: transactions) ]
		thatSends: #addAll:
		to: receiver1 ] value.! !
!Behavior method!
name
	#_coverageTracker19513_ markAsExecuted.
	^ #_coverageTracker19513_
		cover: (9 to: 12)
		declaredAt: (9 to: 12)
		by: name.! !
!Behavior method!
isComposedBy: anAccount
	#_coverageTracker19526_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker19526_
		coverAll:
			{28 to: 31}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19526_
		coverAll:
			{33 to: 33}
		evaluating: [
			receiver1 =
				(#_coverageTracker19526_
					cover: (35 to: 43)
					declaredAt: (15 to: 23)
					by: anAccount) ]
		thatSends: #=
		to: receiver1 ] value.! !
!Behavior method!
named: aName
	#_coverageTracker19535_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker19535_
		coverAll:
			{19 to: 22}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19535_
		coverAll:
			{24 to: 26}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker19535_
		coverAll:
			{28 to: 46}
		evaluating: [
			receiver2 initializeWithName:
				(#_coverageTracker19535_
					cover: (48 to: 52)
					declaredAt: (8 to: 12)
					by: aName) ]
		thatSends: #initializeWithName:
		to: receiver2 ] value.! !
!Behavior method!
addRootParentsTo: rootParents
	#_coverageTracker19544_ markAsExecuted.
	[ | receiver4 |
	receiver4 _ #_coverageTracker19544_
		cover: (33 to: 39)
		declaredAt: (33 to: 39)
		by: parents.
	#_coverageTracker19544_
		coverAll:
			{44 to: 51. 82 to: 92}
		evaluating: [
			receiver4
				ifEmpty: [
					[ | receiver1 |
					receiver1 _ #_coverageTracker19544_
						cover: (55 to: 65)
						declaredAt: (19 to: 29)
						by: rootParents.
					#_coverageTracker19544_
						coverAll:
							{67 to: 70}
						evaluating: [
							receiver1 add:
								(#_coverageTracker19544_
									coverAll:
										{72 to: 75}
									byLiteralOrPseudoVariable: self) ]
						thatSends: #add:
						to: receiver1 ] value ]
				ifNotEmpty: [
					[ | receiver3 |
					receiver3 _ #_coverageTracker19544_
						cover: (96 to: 102)
						declaredAt: (33 to: 39)
						by: parents.
					#_coverageTracker19544_
						coverAll:
							{104 to: 106}
						evaluating: [
							receiver3 do: [ :aParent |
								[ | receiver2 |
								receiver2 _ #_coverageTracker19544_
									cover: (121 to: 127)
									declaredAt: (111 to: 117)
									by: aParent.
								#_coverageTracker19544_
									coverAll:
										{129 to: 145}
									evaluating: [
										receiver2 addRootParentsTo:
											(#_coverageTracker19544_
												cover: (147 to: 157)
												declaredAt: (19 to: 29)
												by: rootParents) ]
									thatSends: #addRootParentsTo:
									to: receiver2 ] value ]]
						thatSends: #do:
						to: receiver3 ] value ]]
		thatSends: #ifEmpty:ifNotEmpty:
		to: receiver4 ] value.! !
!Behavior method!
affectBalance: aBalance
	#_coverageTracker19561_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker19561_
		cover: (28 to: 35)
		declaredAt: (16 to: 23)
		by: aBalance.
	#_coverageTracker19561_
		coverAll:
			{37 to: 37}
		evaluating: [
			receiver1 -
				(#_coverageTracker19561_
					cover: (39 to: 43)
					declaredAt: (39 to: 43)
					by: value) ]
		thatSends: #-
		to: receiver1 ] value.! !
!Behavior method!
calculate
	#_coverageTracker19581_ markAsExecuted.
	#_coverageTracker19581_
		cover: (13 to: 23)
		declaredAt: (13 to: 23)
		by:
			(transferNet _ #_coverageTracker19581_
				coverAll:
					{28 to: 28}
				byLiteralOrPseudoVariable: 0).
	[ | receiver1 |
	receiver1 _ #_coverageTracker19581_
		cover: (34 to: 40)
		declaredAt: (34 to: 40)
		by: account.
	#_coverageTracker19581_
		coverAll:
			{42 to: 70}
		evaluating: [
			receiver1 addTransactionsInTransferNet:
				(#_coverageTracker19581_
					coverAll:
						{72 to: 75}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addTransactionsInTransferNet:
		to: receiver1 ] value.
	^ #_coverageTracker19581_
		cover: (84 to: 94)
		declaredAt: (13 to: 23)
		by: transferNet.! !
!Behavior method!
transactions
	| transactions |
	#_coverageTracker19603_ markAsExecuted.
	#_coverageTracker19603_
		cover: (37 to: 48)
		declaredAt: (19 to: 30)
		by:
			(transactions _ [ | receiver1 |
			receiver1 _ #_coverageTracker19603_
				coverAll:
					{53 to: 69}
				by: OrderedCollection.
			#_coverageTracker19603_
				coverAll:
					{71 to: 73}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver3 |
	receiver3 _ #_coverageTracker19603_
		cover: (77 to: 84)
		declaredAt: (77 to: 84)
		by: accounts.
	#_coverageTracker19603_
		coverAll:
			{86 to: 88}
		evaluating: [
			receiver3 do: [ :anAccount |
				[ | receiver2 |
				receiver2 _ #_coverageTracker19603_
					cover: (105 to: 113)
					declaredAt: (93 to: 101)
					by: anAccount.
				#_coverageTracker19603_
					coverAll:
						{115 to: 132}
					evaluating: [
						receiver2 addTransactionsTo:
							(#_coverageTracker19603_
								cover: (134 to: 145)
								declaredAt: (19 to: 30)
								by: transactions) ]
					thatSends: #addTransactionsTo:
					to: receiver2 ] value ]]
		thatSends: #do:
		to: receiver3 ] value.
	^ #_coverageTracker19603_
		cover: (154 to: 165)
		declaredAt: (19 to: 30)
		by: transactions.! !
!Behavior method!
addTransactionsInTransferNet: aTransferNet
	#_coverageTracker19624_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker19624_
		cover: (48 to: 59)
		declaredAt: (48 to: 59)
		by: transactions.
	#_coverageTracker19624_
		coverAll:
			{61 to: 63}
		evaluating: [
			receiver2 do: [ :aTransaction |
				[ | receiver1 |
				receiver1 _ #_coverageTracker19624_
					cover: (82 to: 93)
					declaredAt: (67 to: 78)
					by: aTransaction.
				#_coverageTracker19624_
					coverAll:
						{95 to: 112}
					evaluating: [
						receiver1 affectTransferNet:
							(#_coverageTracker19624_
								cover: (114 to: 125)
								declaredAt: (31 to: 42)
								by: aTransferNet) ]
					thatSends: #affectTransferNet:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker19648_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker19648_
		cover: (33 to: 44)
		declaredAt: (33 to: 44)
		by: transactions.
	#_coverageTracker19648_
		coverAll:
			{46 to: 54}
		evaluating: [
			receiver1 includes:
				(#_coverageTracker19648_
					cover: (56 to: 67)
					declaredAt: (16 to: 27)
					by: aTransaction) ]
		thatSends: #includes:
		to: receiver1 ] value.! !
!Behavior method!
addInTree: aPortfolioTreeFormat
	#_coverageTracker19656_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker19656_
		cover: (35 to: 54)
		declaredAt: (12 to: 31)
		by: aPortfolioTreeFormat.
	#_coverageTracker19656_
		coverAll:
			{56 to: 75}
		evaluating: [
			receiver1 addReceptiveAccount:
				(#_coverageTracker19656_
					coverAll:
						{77 to: 80}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addReceptiveAccount:
		to: receiver1 ] value.! !
!Behavior method!
on: aPortfolio
	#_coverageTracker19662_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker19662_
		coverAll:
			{21 to: 24}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19662_
		coverAll:
			{26 to: 28}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker19662_
		coverAll:
			{30 to: 42}
		evaluating: [
			receiver2 initializeOn:
				(#_coverageTracker19662_
					cover: (44 to: 53)
					declaredAt: (5 to: 14)
					by: aPortfolio) ]
		thatSends: #initializeOn:
		to: receiver2 ] value.! !
!Behavior method!
addDepositFor: anAmount
	#_coverageTracker19670_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker19670_
		cover: (29 to: 35)
		declaredAt: (29 to: 35)
		by: summary.
	#_coverageTracker19670_
		coverAll:
			{37 to: 40}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker19670_
					coverAll:
						{43 to: 46}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker19670_
					coverAll:
						{48 to: 65}
					evaluating: [
						receiver1 depositMessageFor:
							(#_coverageTracker19670_
								cover: (67 to: 74)
								declaredAt: (16 to: 23)
								by: anAmount) ]
					thatSends: #depositMessageFor:
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
initialize
	#_coverageTracker19683_ markAsExecuted.
	#_coverageTracker19683_
		coverAll:
			{20 to: 29}
		evaluating: [ super initialize ]
		thatSends: #initialize
		to: super.
	#_coverageTracker19683_
		cover: (33 to: 44)
		declaredAt: (33 to: 44)
		by:
			(transactions _ [ | receiver1 |
			receiver1 _ #_coverageTracker19683_
				coverAll:
					{49 to: 65}
				by: OrderedCollection.
			#_coverageTracker19683_
				coverAll:
					{67 to: 69}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).! !
!Behavior method!
affectTransferNet: aTransferNet
	#_coverageTracker19690_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker19690_
		cover: (37 to: 48)
		declaredAt: (20 to: 31)
		by: aTransferNet.
	#_coverageTracker19690_
		coverAll:
			{50 to: 72}
		evaluating: [
			receiver2 addTransferWithdrawFor:
				[ | receiver1 |
				receiver1 _ #_coverageTracker19690_
					coverAll:
						{74 to: 77}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker19690_
					coverAll:
						{79 to: 83}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #addTransferWithdrawFor:
		to: receiver2 ] value.! !
!Behavior method!
anyRootParentIsComposedBy: accountToAdd
	#_coverageTracker19701_ markAsExecuted.
	^ [ | receiver3 |
	receiver3 _ [ | receiver1 |
	receiver1 _ #_coverageTracker19701_
		coverAll:
			{44 to: 47}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19701_
		coverAll:
			{49 to: 59}
		evaluating: [ receiver1 rootParents ]
		thatSends: #rootParents
		to: receiver1 ] value.
	#_coverageTracker19701_
		coverAll:
			{61 to: 71}
		evaluating: [
			receiver3 anySatisfy: [ :aParent |
				[ | receiver2 |
				receiver2 _ #_coverageTracker19701_
					cover: (86 to: 92)
					declaredAt: (76 to: 82)
					by: aParent.
				#_coverageTracker19701_
					coverAll:
						{94 to: 106}
					evaluating: [
						receiver2 isComposedBy:
							(#_coverageTracker19701_
								cover: (108 to: 119)
								declaredAt: (28 to: 39)
								by: accountToAdd) ]
					thatSends: #isComposedBy:
					to: receiver2 ] value ]]
		thatSends: #anySatisfy:
		to: receiver3 ] value.! !
!Behavior method!
withdrawLeg
	#_coverageTracker19714_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker19714_
		cover: (15 to: 22)
		declaredAt: (15 to: 22)
		by: transfer.
	#_coverageTracker19714_
		coverAll:
			{24 to: 34}
		evaluating: [ receiver1 withdrawLeg ]
		thatSends: #withdrawLeg
		to: receiver1 ] value.! !
!Behavior method!
addName: anAccountName
	#_coverageTracker19722_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker19722_
		cover: (26 to: 29)
		declaredAt: (26 to: 29)
		by: tree.
	#_coverageTracker19722_
		coverAll:
			{31 to: 34}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker19722_
					cover: (36 to: 42)
					declaredAt: (36 to: 42)
					by: indents.
				#_coverageTracker19722_
					coverAll:
						{43 to: 43}
					evaluating: [
						receiver1 ,
							(#_coverageTracker19722_
								cover: (44 to: 56)
								declaredAt: (10 to: 22)
								by: anAccountName) ]
					thatSends: #,
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
depositMessageFor: anAmount
	#_coverageTracker19732_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker19732_
		coverAll:
			{33 to: 46}
		byLiteralOrPseudoVariable: 'Depósito de '.
	#_coverageTracker19732_
		coverAll:
			{47 to: 47}
		evaluating: [
			receiver2 ,
				[ | receiver1 |
				receiver1 _ #_coverageTracker19732_
					cover: (49 to: 56)
					declaredAt: (20 to: 27)
					by: anAmount.
				#_coverageTracker19732_
					coverAll:
						{58 to: 65}
					evaluating: [ receiver1 asString ]
					thatSends: #asString
					to: receiver1 ] value ]
		thatSends: #,
		to: receiver2 ] value.! !
!Behavior method!
name
	#_coverageTracker19746_ markAsExecuted.
	^ #_coverageTracker19746_
		cover: (9 to: 12)
		declaredAt: (9 to: 12)
		by: name.! !
!Behavior method!
affectBalance: aBalance
	#_coverageTracker19755_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker19755_
		cover: (28 to: 35)
		declaredAt: (16 to: 23)
		by: aBalance.
	#_coverageTracker19755_
		coverAll:
			{37 to: 37}
		evaluating: [
			receiver2 +
				[ | receiver1 |
				receiver1 _ #_coverageTracker19755_
					coverAll:
						{39 to: 42}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker19755_
					coverAll:
						{44 to: 48}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #+
		to: receiver2 ] value.! !
!Behavior method!
for: aValue
	#_coverageTracker19762_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker19762_
		coverAll:
			{17 to: 20}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19762_
		coverAll:
			{22 to: 24}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker19762_
		coverAll:
			{26 to: 39}
		evaluating: [
			receiver2 initializeFor:
				(#_coverageTracker19762_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ]
		thatSends: #initializeFor:
		to: receiver2 ] value.! !
!Behavior method!
addTransferDepositFor: anAmount
	#_coverageTracker19772_ markAsExecuted.
	#_coverageTracker19772_
		cover: (51 to: 61)
		declaredAt: (36 to: 46)
		by:
			(transferNet _ [ | receiver1 |
			receiver1 _ #_coverageTracker19772_
				cover: (36 to: 46)
				declaredAt: (36 to: 46)
				by: transferNet.
			#_coverageTracker19772_
				coverAll:
					{63 to: 63}
				evaluating: [
					receiver1 +
						(#_coverageTracker19772_
							cover: (65 to: 72)
							declaredAt: (24 to: 31)
							by: anAmount) ]
				thatSends: #+
				to: receiver1 ] value).! !
!Behavior method!
addedTo: aPortfolio
	#_coverageTracker19780_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker19780_
		cover: (25 to: 31)
		declaredAt: (25 to: 31)
		by: parents.
	#_coverageTracker19780_
		coverAll:
			{33 to: 36}
		evaluating: [
			receiver1 add:
				(#_coverageTracker19780_
					cover: (38 to: 47)
					declaredAt: (10 to: 19)
					by: aPortfolio) ]
		thatSends: #add:
		to: receiver1 ] value.! !
!Behavior method!
initialize
	#_coverageTracker19791_ markAsExecuted.
	#_coverageTracker19791_
		cover: (14 to: 21)
		declaredAt: (14 to: 21)
		by:
			(accounts _ [ | receiver1 |
			receiver1 _ #_coverageTracker19791_
				coverAll:
					{26 to: 42}
				by: OrderedCollection.
			#_coverageTracker19791_
				coverAll:
					{44 to: 46}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker19791_
		cover: (50 to: 56)
		declaredAt: (50 to: 56)
		by:
			(parents _ [ | receiver2 |
			receiver2 _ #_coverageTracker19791_
				coverAll:
					{61 to: 77}
				by: OrderedCollection.
			#_coverageTracker19791_
				coverAll:
					{79 to: 81}
				evaluating: [ receiver2 new ]
				thatSends: #new
				to: receiver2 ] value).! !
!Behavior method!
addTransactionInSummary: aSummary
	#_coverageTracker19808_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker19808_
		cover: (37 to: 44)
		declaredAt: (26 to: 33)
		by: aSummary.
	#_coverageTracker19808_
		coverAll:
			{46 to: 60}
		evaluating: [
			receiver1 addWithdrawFor:
				(#_coverageTracker19808_
					cover: (62 to: 66)
					declaredAt: (62 to: 66)
					by: value) ]
		thatSends: #addWithdrawFor:
		to: receiver1 ] value.! !
!Behavior method!
withdrawMessageFor: anAmount
	#_coverageTracker19816_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker19816_
		coverAll:
			{34 to: 49}
		byLiteralOrPseudoVariable: 'Extracción de '.
	#_coverageTracker19816_
		coverAll:
			{50 to: 50}
		evaluating: [
			receiver2 ,
				[ | receiver1 |
				receiver1 _ #_coverageTracker19816_
					cover: (52 to: 59)
					declaredAt: (21 to: 28)
					by: anAmount.
				#_coverageTracker19816_
					coverAll:
						{61 to: 68}
					evaluating: [ receiver1 asString ]
					thatSends: #asString
					to: receiver1 ] value ]
		thatSends: #,
		to: receiver2 ] value.! !
!Behavior method!
initializeWithName: aName
	#_coverageTracker19825_ markAsExecuted.
	#_coverageTracker19825_
		cover: (30 to: 33)
		declaredAt: (30 to: 33)
		by:
			(name _ #_coverageTracker19825_
				cover: (38 to: 42)
				declaredAt: (21 to: 25)
				by: aName).
	[ | receiver1 |
	receiver1 _ #_coverageTracker19825_
		coverAll:
			{46 to: 49}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19825_
		coverAll:
			{51 to: 60}
		evaluating: [ receiver1 initialize ]
		thatSends: #initialize
		to: receiver1 ] value.! !
!Behavior method!
initializeWithName: aName
	#_coverageTracker19839_ markAsExecuted.
	#_coverageTracker19839_
		cover: (30 to: 33)
		declaredAt: (30 to: 33)
		by:
			(name _ #_coverageTracker19839_
				cover: (38 to: 42)
				declaredAt: (21 to: 25)
				by: aName).
	[ | receiver1 |
	receiver1 _ #_coverageTracker19839_
		coverAll:
			{46 to: 49}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19839_
		coverAll:
			{51 to: 60}
		evaluating: [ receiver1 initialize ]
		thatSends: #initialize
		to: receiver1 ] value.! !
!Behavior method!
addTransferDepositFor: anAmount
	#_coverageTracker19848_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker19848_
		cover: (37 to: 43)
		declaredAt: (37 to: 43)
		by: summary.
	#_coverageTracker19848_
		coverAll:
			{45 to: 48}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker19848_
					coverAll:
						{51 to: 54}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker19848_
					coverAll:
						{56 to: 81}
					evaluating: [
						receiver1 transferDepositMessageFor:
							(#_coverageTracker19848_
								cover: (83 to: 90)
								declaredAt: (24 to: 31)
								by: anAmount) ]
					thatSends: #transferDepositMessageFor:
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
isComposedBy: anAccount
	#_coverageTracker19858_ markAsExecuted.
	^ [ | receiver6 |
	receiver6 _ [ | receiver1 |
	receiver1 _ #_coverageTracker19858_
		coverAll:
			{29 to: 32}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19858_
		coverAll:
			{34 to: 34}
		evaluating: [
			receiver1 =
				(#_coverageTracker19858_
					cover: (36 to: 44)
					declaredAt: (15 to: 23)
					by: anAccount) ]
		thatSends: #=
		to: receiver1 ] value.
	#_coverageTracker19858_
		coverAll:
			{46 to: 48}
		evaluating: [
			receiver6 or: [
				[ | receiver5 |
				receiver5 _ #_coverageTracker19858_
					cover: (52 to: 59)
					declaredAt: (52 to: 59)
					by: accounts.
				#_coverageTracker19858_
					coverAll:
						{61 to: 71}
					evaluating: [
						receiver5 anySatisfy: [ :composedAccount |
							[ | receiver4 |
							receiver4 _ [ | receiver2 |
							receiver2 _ #_coverageTracker19858_
								cover: (95 to: 109)
								declaredAt: (76 to: 90)
								by: composedAccount.
							#_coverageTracker19858_
								coverAll:
									{111 to: 123}
								evaluating: [
									receiver2 isComposedBy:
										(#_coverageTracker19858_
											cover: (125 to: 133)
											declaredAt: (15 to: 23)
											by: anAccount) ]
								thatSends: #isComposedBy:
								to: receiver2 ] value.
							#_coverageTracker19858_
								coverAll:
									{136 to: 138}
								evaluating: [
									receiver4 or: [
										[ | receiver3 |
										receiver3 _ #_coverageTracker19858_
											cover: (142 to: 150)
											declaredAt: (15 to: 23)
											by: anAccount.
										#_coverageTracker19858_
											coverAll:
												{152 to: 164}
											evaluating: [
												receiver3 isComposedBy:
													(#_coverageTracker19858_
														cover: (166 to: 180)
														declaredAt: (76 to: 90)
														by: composedAccount) ]
											thatSends: #isComposedBy:
											to: receiver3 ] value ]]
								thatSends: #or:
								to: receiver4 ] value ]]
					thatSends: #anySatisfy:
					to: receiver5 ] value ]]
		thatSends: #or:
		to: receiver6 ] value.! !
!Behavior method!
transfer
	#_coverageTracker19873_ markAsExecuted.
	^ #_coverageTracker19873_
		cover: (13 to: 20)
		declaredAt: (13 to: 20)
		by: transfer.! !
!Behavior method!
named: aName with: anAccount with: anotherAccount with: aThirdAccount
	#_coverageTracker19881_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker19881_
		coverAll:
			{76 to: 79}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19881_
		coverAll:
			{81 to: 86. 94 to: 98. 110 to: 114}
		evaluating: [
			receiver1
				named:
					(#_coverageTracker19881_
						cover: (88 to: 92)
						declaredAt: (8 to: 12)
						by: aName)
				with:
					(#_coverageTracker19881_
						cover: (100 to: 108)
						declaredAt: (20 to: 28)
						by: anAccount)
				with:
					(#_coverageTracker19881_
						cover: (116 to: 129)
						declaredAt: (36 to: 49)
						by: anotherAccount) ]
		thatSends: #named:with:with:
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker19881_
		coverAll:
			{132 to: 135}
		evaluating: [
			receiver2 add:
				(#_coverageTracker19881_
					cover: (137 to: 149)
					declaredAt: (57 to: 69)
					by: aThirdAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker19881_
		coverAll:
			{152 to: 159}
		evaluating: [ receiver3 yourself ]
		thatSends: #yourself
		to: receiver3 ] value ] value.! !
!Behavior method!
initializeFor: anAccount
	#_coverageTracker19889_ markAsExecuted.
	#_coverageTracker19889_
		cover: (30 to: 36)
		declaredAt: (30 to: 36)
		by:
			(account _ #_coverageTracker19889_
				cover: (41 to: 49)
				declaredAt: (16 to: 24)
				by: anAccount).! !
!Behavior method!
affectTransferNet: aTransferNet
	#_coverageTracker19897_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker19897_
		cover: (37 to: 48)
		declaredAt: (20 to: 31)
		by: aTransferNet.
	#_coverageTracker19897_
		coverAll:
			{50 to: 64}
		evaluating: [
			receiver1 addWithdrawFor:
				(#_coverageTracker19897_
					cover: (66 to: 70)
					declaredAt: (66 to: 70)
					by: value) ]
		thatSends: #addWithdrawFor:
		to: receiver1 ] value.! !
!Behavior method!
transactions
	#_coverageTracker19907_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker19907_
		cover: (19 to: 30)
		declaredAt: (19 to: 30)
		by: transactions.
	#_coverageTracker19907_
		coverAll:
			{32 to: 35}
		evaluating: [ receiver1 copy ]
		thatSends: #copy
		to: receiver1 ] value.! !
!Behavior method!
withdrawLeg
	#_coverageTracker19918_ markAsExecuted.
	^ #_coverageTracker19918_
		cover: (17 to: 27)
		declaredAt: (17 to: 27)
		by: withdrawLeg.! !
!Behavior method!
rootParents
	| rootParents |
	#_coverageTracker19926_ markAsExecuted.
	#_coverageTracker19926_
		cover: (35 to: 45)
		declaredAt: (18 to: 28)
		by:
			(rootParents _ [ | receiver1 |
			receiver1 _ #_coverageTracker19926_
				coverAll:
					{50 to: 52}
				by: Set.
			#_coverageTracker19926_
				coverAll:
					{54 to: 56}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker19926_
		coverAll:
			{60 to: 63}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19926_
		coverAll:
			{65 to: 81}
		evaluating: [
			receiver2 addRootParentsTo:
				(#_coverageTracker19926_
					cover: (83 to: 93)
					declaredAt: (18 to: 28)
					by: rootParents) ]
		thatSends: #addRootParentsTo:
		to: receiver2 ] value.
	^ #_coverageTracker19926_
		cover: (101 to: 111)
		declaredAt: (18 to: 28)
		by: rootParents.! !
!Behavior method!
named: aName with: anAccount
	#_coverageTracker19935_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker19935_
		coverAll:
			{35 to: 38}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker19935_
		coverAll:
			{40 to: 45}
		evaluating: [
			receiver1 named:
				(#_coverageTracker19935_
					cover: (47 to: 51)
					declaredAt: (8 to: 12)
					by: aName) ]
		thatSends: #named:
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker19935_
		coverAll:
			{54 to: 57}
		evaluating: [
			receiver2 add:
				(#_coverageTracker19935_
					cover: (59 to: 67)
					declaredAt: (20 to: 28)
					by: anAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker19935_
		coverAll:
			{70 to: 77}
		evaluating: [ receiver3 yourself ]
		thatSends: #yourself
		to: receiver3 ] value ] value.! !
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker19944_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker19944_
		cover: (32 to: 39)
		declaredAt: (32 to: 39)
		by: accounts.
	#_coverageTracker19944_
		coverAll:
			{41 to: 51}
		evaluating: [
			receiver2 anySatisfy: [ :anAccount |
				[ | receiver1 |
				receiver1 _ #_coverageTracker19944_
					cover: (68 to: 76)
					declaredAt: (56 to: 64)
					by: anAccount.
				#_coverageTracker19944_
					coverAll:
						{78 to: 91}
					evaluating: [
						receiver1 hasRegistered:
							(#_coverageTracker19944_
								cover: (93 to: 104)
								declaredAt: (16 to: 27)
								by: aTransaction) ]
					thatSends: #hasRegistered:
					to: receiver1 ] value ]]
		thatSends: #anySatisfy:
		to: receiver2 ] value.! !
!Behavior method!
value
	#_coverageTracker19955_ markAsExecuted.
	^ #_coverageTracker19955_
		cover: (11 to: 15)
		declaredAt: (11 to: 15)
		by: value.! !
!Behavior method!
addTransactionsTo: aCollectionOfTransactions
	#_coverageTracker19963_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker19963_
		cover: (48 to: 55)
		declaredAt: (48 to: 55)
		by: accounts.
	#_coverageTracker19963_
		coverAll:
			{57 to: 59}
		evaluating: [
			receiver2 do: [ :anAccount |
				[ | receiver1 |
				receiver1 _ #_coverageTracker19963_
					cover: (76 to: 84)
					declaredAt: (64 to: 72)
					by: anAccount.
				#_coverageTracker19963_
					coverAll:
						{86 to: 103}
					evaluating: [
						receiver1 addTransactionsTo:
							(#_coverageTracker19963_
								cover: (105 to: 129)
								declaredAt: (20 to: 44)
								by: aCollectionOfTransactions) ]
					thatSends: #addTransactionsTo:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
affectBalance: aBalance
	#_coverageTracker19972_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker19972_
		cover: (28 to: 35)
		declaredAt: (16 to: 23)
		by: aBalance.
	#_coverageTracker19972_
		coverAll:
			{37 to: 37}
		evaluating: [
			receiver2 -
				[ | receiver1 |
				receiver1 _ #_coverageTracker19972_
					coverAll:
						{39 to: 42}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker19972_
					coverAll:
						{44 to: 48}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #-
		to: receiver2 ] value.! !
!Behavior method!
canNotAddAccountErrorMessage
	#_coverageTracker19987_ markAsExecuted.
	^ #_coverageTracker19987_
		coverAll:
			{34 to: 78}
		byLiteralOrPseudoVariable: 'Can not add repeated account to a portfolio'.! !
!Behavior method!
addTransactionsInSummary: anAccountSummary
	#_coverageTracker19995_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker19995_
		cover: (48 to: 55)
		declaredAt: (48 to: 55)
		by: accounts.
	#_coverageTracker19995_
		coverAll:
			{57 to: 59}
		evaluating: [
			receiver2 do: [ :anAccount |
				[ | receiver1 |
				receiver1 _ #_coverageTracker19995_
					cover: (76 to: 84)
					declaredAt: (64 to: 72)
					by: anAccount.
				#_coverageTracker19995_
					coverAll:
						{86 to: 110}
					evaluating: [
						receiver1 addTransactionsInSummary:
							(#_coverageTracker19995_
								cover: (112 to: 127)
								declaredAt: (27 to: 42)
								by: anAccountSummary) ]
					thatSends: #addTransactionsInSummary:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionsInTransferNet: aTransferNet
	#_coverageTracker20005_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker20005_
		cover: (48 to: 55)
		declaredAt: (48 to: 55)
		by: accounts.
	#_coverageTracker20005_
		coverAll:
			{57 to: 59}
		evaluating: [
			receiver2 do: [ :account |
				[ | receiver1 |
				receiver1 _ #_coverageTracker20005_
					cover: (73 to: 79)
					declaredAt: (63 to: 69)
					by: account.
				#_coverageTracker20005_
					coverAll:
						{81 to: 109}
					evaluating: [
						receiver1 addTransactionsInTransferNet:
							(#_coverageTracker20005_
								cover: (111 to: 122)
								declaredAt: (31 to: 42)
								by: aTransferNet) ]
					thatSends: #addTransactionsInTransferNet:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionInSummary: aSummary
	#_coverageTracker20015_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker20015_
		cover: (37 to: 44)
		declaredAt: (26 to: 33)
		by: aSummary.
	#_coverageTracker20015_
		coverAll:
			{46 to: 67}
		evaluating: [
			receiver2 addTransferDepositFor:
				[ | receiver1 |
				receiver1 _ #_coverageTracker20015_
					coverAll:
						{69 to: 72}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker20015_
					coverAll:
						{74 to: 78}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #addTransferDepositFor:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionInSummary: aSummary
	#_coverageTracker20022_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker20022_
		cover: (37 to: 44)
		declaredAt: (26 to: 33)
		by: aSummary.
	#_coverageTracker20022_
		coverAll:
			{46 to: 59}
		evaluating: [
			receiver1 addDepositFor:
				(#_coverageTracker20022_
					cover: (61 to: 65)
					declaredAt: (61 to: 65)
					by: value) ]
		thatSends: #addDepositFor:
		to: receiver1 ] value.! !
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker20034_ markAsExecuted.
	#_coverageTracker20034_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ [ | receiver1 |
			receiver1 _ #_coverageTracker20034_
				coverAll:
					{66 to: 69}
				byLiteralOrPseudoVariable: self.
			#_coverageTracker20034_
				coverAll:
					{71 to: 74}
				evaluating: [
					receiver1 for:
						(#_coverageTracker20034_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]
				thatSends: #for:
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker20034_
		cover: (85 to: 91)
		declaredAt: (22 to: 28)
		by: account.
	#_coverageTracker20034_
		coverAll:
			{93 to: 101}
		evaluating: [
			receiver2 register:
				(#_coverageTracker20034_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ]
		thatSends: #register:
		to: receiver2 ] value.
	^ #_coverageTracker20034_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
transferDepositMessageFor: anAmount
	#_coverageTracker20042_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker20042_
		coverAll:
			{41 to: 71}
		byLiteralOrPseudoVariable: 'Entrada por transferencia de '.
	#_coverageTracker20042_
		coverAll:
			{72 to: 72}
		evaluating: [
			receiver2 ,
				[ | receiver1 |
				receiver1 _ #_coverageTracker20042_
					cover: (74 to: 81)
					declaredAt: (28 to: 35)
					by: anAmount.
				#_coverageTracker20042_
					coverAll:
						{83 to: 90}
					evaluating: [ receiver1 asString ]
					thatSends: #asString
					to: receiver1 ] value ]
		thatSends: #,
		to: receiver2 ] value.! !
!Behavior method!
accountsSize
	#_coverageTracker20051_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker20051_
		cover: (18 to: 25)
		declaredAt: (18 to: 25)
		by: accounts.
	#_coverageTracker20051_
		coverAll:
			{27 to: 30}
		evaluating: [ receiver1 size ]
		thatSends: #size
		to: receiver1 ] value.! !
!Behavior method!
addDepositFor: anAmount
	#_coverageTracker20059_ markAsExecuted.! !
!Behavior method!
value
	#_coverageTracker20068_ markAsExecuted.
	^ #_coverageTracker20068_
		cover: (11 to: 15)
		declaredAt: (11 to: 15)
		by: value.! !
!Behavior method!
accountsIncludes: anAccount
	#_coverageTracker20077_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker20077_
		cover: (32 to: 39)
		declaredAt: (32 to: 39)
		by: accounts.
	#_coverageTracker20077_
		coverAll:
			{41 to: 49}
		evaluating: [
			receiver1 includes:
				(#_coverageTracker20077_
					cover: (51 to: 59)
					declaredAt: (19 to: 27)
					by: anAccount) ]
		thatSends: #includes:
		to: receiver1 ] value.! !
!Behavior method!
add: accountToAdd
	#_coverageTracker20086_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker20086_
		coverAll:
			{21 to: 24}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker20086_
		coverAll:
			{26 to: 38}
		evaluating: [
			receiver1 assertCanAdd:
				(#_coverageTracker20086_
					cover: (40 to: 51)
					declaredAt: (6 to: 17)
					by: accountToAdd) ]
		thatSends: #assertCanAdd:
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ #_coverageTracker20086_
		cover: (58 to: 65)
		declaredAt: (58 to: 65)
		by: accounts.
	#_coverageTracker20086_
		coverAll:
			{67 to: 70}
		evaluating: [
			receiver2 add:
				(#_coverageTracker20086_
					cover: (72 to: 83)
					declaredAt: (6 to: 17)
					by: accountToAdd) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ #_coverageTracker20086_
		cover: (87 to: 98)
		declaredAt: (6 to: 17)
		by: accountToAdd.
	#_coverageTracker20086_
		coverAll:
			{100 to: 107}
		evaluating: [
			receiver3 addedTo:
				(#_coverageTracker20086_
					coverAll:
						{109 to: 112}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addedTo:
		to: receiver3 ] value.! !
!Behavior method!
assertCanAdd: accountToAdd
	#_coverageTracker20096_ markAsExecuted.
	[ | receiver3 |
	receiver3 _ [ | receiver1 |
	receiver1 _ #_coverageTracker20096_
		coverAll:
			{31 to: 34}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker20096_
		coverAll:
			{36 to: 61}
		evaluating: [
			receiver1 anyRootParentIsComposedBy:
				(#_coverageTracker20096_
					cover: (63 to: 74)
					declaredAt: (15 to: 26)
					by: accountToAdd) ]
		thatSends: #anyRootParentIsComposedBy:
		to: receiver1 ] value.
	#_coverageTracker20096_
		coverAll:
			{77 to: 83}
		evaluating: [
			receiver3 ifTrue: [
				[ | receiver2 |
				receiver2 _ #_coverageTracker20096_
					coverAll:
						{87 to: 90}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker20096_
					coverAll:
						{92 to: 113}
					evaluating: [ receiver2 signalCanNotAddAccount ]
					thatSends: #signalCanNotAddAccount
					to: receiver2 ] value ]]
		thatSends: #ifTrue:
		to: receiver3 ] value.! !
!Behavior method!
named: aName with: anAccount with: anotherAccount
	#_coverageTracker20104_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker20104_
		coverAll:
			{57 to: 60}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker20104_
		coverAll:
			{62 to: 67. 75 to: 79}
		evaluating: [
			receiver1
				named:
					(#_coverageTracker20104_
						cover: (69 to: 73)
						declaredAt: (8 to: 12)
						by: aName)
				with:
					(#_coverageTracker20104_
						cover: (81 to: 89)
						declaredAt: (20 to: 28)
						by: anAccount) ]
		thatSends: #named:with:
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker20104_
		coverAll:
			{92 to: 95}
		evaluating: [
			receiver2 add:
				(#_coverageTracker20104_
					cover: (97 to: 110)
					declaredAt: (36 to: 49)
					by: anotherAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker20104_
		coverAll:
			{113 to: 120}
		evaluating: [ receiver3 yourself ]
		thatSends: #yourself
		to: receiver3 ] value ] value.! !
!Behavior method!
balance
	#_coverageTracker20113_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker20113_
		cover: (12 to: 23)
		declaredAt: (12 to: 23)
		by: transactions.
	#_coverageTracker20113_
		coverAll:
			{28 to: 34. 40 to: 44}
		evaluating: [
			receiver2
				inject:
					(#_coverageTracker20113_
						coverAll:
							{36 to: 36}
						byLiteralOrPseudoVariable: 0)
				into: [ :currentBalance :transaction |
					[ | receiver1 |
					receiver1 _ #_coverageTracker20113_
						cover: (79 to: 89)
						declaredAt: (65 to: 75)
						by: transaction.
					#_coverageTracker20113_
						coverAll:
							{91 to: 104}
						evaluating: [
							receiver1 affectBalance:
								(#_coverageTracker20113_
									cover: (106 to: 119)
									declaredAt: (49 to: 62)
									by: currentBalance) ]
						thatSends: #affectBalance:
						to: receiver1 ] value ]]
		thatSends: #inject:into:
		to: receiver2 ] value.! !
!Behavior method!
with: anAccount
	#_coverageTracker20125_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker20125_
		coverAll:
			{20 to: 23}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker20125_
		coverAll:
			{25 to: 27}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker20125_
		coverAll:
			{32 to: 35}
		evaluating: [
			receiver2 add:
				(#_coverageTracker20125_
					cover: (37 to: 45)
					declaredAt: (7 to: 15)
					by: anAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker20125_
		coverAll:
			{50 to: 57}
		evaluating: [ receiver3 yourself ]
		thatSends: #yourself
		to: receiver3 ] value ] value.! !
!Behavior method!
initializeFor: aTransfer
	#_coverageTracker20135_ markAsExecuted.
	#_coverageTracker20135_
		cover: (28 to: 35)
		declaredAt: (28 to: 35)
		by:
			(transfer _ #_coverageTracker20135_
				cover: (40 to: 48)
				declaredAt: (16 to: 24)
				by: aTransfer).! !
!Behavior method!
addTransferWithdrawFor: anAmount
	#_coverageTracker20141_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker20141_
		cover: (38 to: 44)
		declaredAt: (38 to: 44)
		by: summary.
	#_coverageTracker20141_
		coverAll:
			{46 to: 49}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker20141_
					coverAll:
						{52 to: 55}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker20141_
					coverAll:
						{57 to: 83}
					evaluating: [
						receiver1 transferWithdrawMessageFor:
							(#_coverageTracker20141_
								cover: (85 to: 92)
								declaredAt: (25 to: 32)
								by: anAmount) ]
					thatSends: #transferWithdrawMessageFor:
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
balanceMessage
	#_coverageTracker20150_ markAsExecuted.
	^ [ | receiver3 |
	receiver3 _ #_coverageTracker20150_
		coverAll:
			{20 to: 31}
		byLiteralOrPseudoVariable: 'Balance = '.
	#_coverageTracker20150_
		coverAll:
			{32 to: 32}
		evaluating: [
			receiver3 ,
				[ | receiver2 |
				receiver2 _ [ | receiver1 |
				receiver1 _ #_coverageTracker20150_
					cover: (34 to: 40)
					declaredAt: (34 to: 40)
					by: account.
				#_coverageTracker20150_
					coverAll:
						{42 to: 48}
					evaluating: [ receiver1 balance ]
					thatSends: #balance
					to: receiver1 ] value.
				#_coverageTracker20150_
					coverAll:
						{50 to: 57}
					evaluating: [ receiver2 asString ]
					thatSends: #asString
					to: receiver2 ] value ]
		thatSends: #,
		to: receiver3 ] value.! !
!Behavior method!
transferWithdrawMessageFor: anAmount
	#_coverageTracker20165_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker20165_
		coverAll:
			{42 to: 71}
		byLiteralOrPseudoVariable: 'Salida por transferencia de '.
	#_coverageTracker20165_
		coverAll:
			{72 to: 72}
		evaluating: [
			receiver2 ,
				[ | receiver1 |
				receiver1 _ #_coverageTracker20165_
					cover: (74 to: 81)
					declaredAt: (29 to: 36)
					by: anAmount.
				#_coverageTracker20165_
					coverAll:
						{83 to: 90}
					evaluating: [ receiver1 asString ]
					thatSends: #asString
					to: receiver1 ] value ]
		thatSends: #,
		to: receiver2 ] value.! !
!Behavior method!
addNameInTreeFormatInPortfolio: aPortfolio
	#_coverageTracker20172_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker20172_
		cover: (46 to: 55)
		declaredAt: (33 to: 42)
		by: aPortfolio.
	#_coverageTracker20172_
		coverAll:
			{57 to: 66}
		evaluating: [
			receiver1 addToTree:
				(#_coverageTracker20172_
					cover: (68 to: 71)
					declaredAt: (68 to: 71)
					by: name) ]
		thatSends: #addToTree:
		to: receiver1 ] value.! !
!Behavior method!
addReceptiveAccount: aReceptiveAccount
	#_coverageTracker20181_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker20181_
		coverAll:
			{42 to: 45}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker20181_
		coverAll:
			{47 to: 54}
		evaluating: [
			receiver2 addName:
				[ | receiver1 |
				receiver1 _ #_coverageTracker20181_
					cover: (56 to: 72)
					declaredAt: (22 to: 38)
					by: aReceptiveAccount.
				#_coverageTracker20181_
					coverAll:
						{74 to: 77}
					evaluating: [ receiver1 name ]
					thatSends: #name
					to: receiver1 ] value ]
		thatSends: #addName:
		to: receiver2 ] value.! !
!Behavior method!
calculate
	#_coverageTracker20191_ markAsExecuted.
	#_coverageTracker20191_
		cover: (14 to: 20)
		declaredAt: (14 to: 20)
		by:
			(summary _ [ | receiver1 |
			receiver1 _ #_coverageTracker20191_
				coverAll:
					{25 to: 41}
				by: OrderedCollection.
			#_coverageTracker20191_
				coverAll:
					{43 to: 45}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker20191_
		cover: (51 to: 57)
		declaredAt: (51 to: 57)
		by: account.
	#_coverageTracker20191_
		coverAll:
			{59 to: 83}
		evaluating: [
			receiver2 addTransactionsInSummary:
				(#_coverageTracker20191_
					coverAll:
						{85 to: 88}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addTransactionsInSummary:
		to: receiver2 ] value.
	[ | receiver4 |
	receiver4 _ #_coverageTracker20191_
		cover: (95 to: 101)
		declaredAt: (14 to: 20)
		by: summary.
	#_coverageTracker20191_
		coverAll:
			{103 to: 106}
		evaluating: [
			receiver4 add:
				[ | receiver3 |
				receiver3 _ #_coverageTracker20191_
					coverAll:
						{109 to: 112}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker20191_
					coverAll:
						{114 to: 127}
					evaluating: [ receiver3 balanceMessage ]
					thatSends: #balanceMessage
					to: receiver3 ] value ]
		thatSends: #add:
		to: receiver4 ] value.
	^ #_coverageTracker20191_
		cover: (135 to: 141)
		declaredAt: (14 to: 20)
		by: summary.! !
!Behavior method!
signalCanNotAddAccount
	#_coverageTracker20198_ markAsExecuted.
	[ | receiver3 |
	receiver3 _ #_coverageTracker20198_
		coverAll:
			{27 to: 30}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker20198_
		coverAll:
			{32 to: 37}
		evaluating: [
			receiver3 error:
				[ | receiver2 |
				receiver2 _ [ | receiver1 |
				receiver1 _ #_coverageTracker20198_
					coverAll:
						{39 to: 42}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker20198_
					coverAll:
						{44 to: 48}
					evaluating: [ receiver1 class ]
					thatSends: #class
					to: receiver1 ] value.
				#_coverageTracker20198_
					coverAll:
						{50 to: 77}
					evaluating: [ receiver2 canNotAddAccountErrorMessage ]
					thatSends: #canNotAddAccountErrorMessage
					to: receiver2 ] value ]
		thatSends: #error:
		to: receiver3 ] value.! !
!Behavior method!
value
	#_coverageTracker20213_ markAsExecuted.
	^ #_coverageTracker20213_
		cover: (10 to: 14)
		declaredAt: (10 to: 14)
		by: value.! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker20221_ markAsExecuted.
	#_coverageTracker20221_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker20221_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
registerOn: aTransfer
	#_coverageTracker20229_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker20229_
		coverAll:
			{27 to: 30}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker20229_
		coverAll:
			{32 to: 34}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker20229_
		coverAll:
			{36 to: 49}
		evaluating: [
			receiver2 initializeFor:
				(#_coverageTracker20229_
					cover: (51 to: 59)
					declaredAt: (13 to: 21)
					by: aTransfer) ]
		thatSends: #initializeFor:
		to: receiver2 ] value.! !
!Behavior method!
addWithdrawFor: anAmount
	#_coverageTracker20237_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker20237_
		cover: (28 to: 34)
		declaredAt: (28 to: 34)
		by: summary.
	#_coverageTracker20237_
		coverAll:
			{36 to: 39}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker20237_
					coverAll:
						{42 to: 45}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker20237_
					coverAll:
						{47 to: 65}
					evaluating: [
						receiver1 withdrawMessageFor:
							(#_coverageTracker20237_
								cover: (67 to: 74)
								declaredAt: (17 to: 24)
								by: anAmount) ]
					thatSends: #withdrawMessageFor:
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionInSummary: aSummary
	#_coverageTracker20251_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker20251_
		cover: (37 to: 44)
		declaredAt: (26 to: 33)
		by: aSummary.
	#_coverageTracker20251_
		coverAll:
			{46 to: 68}
		evaluating: [
			receiver2 addTransferWithdrawFor:
				[ | receiver1 |
				receiver1 _ #_coverageTracker20251_
					coverAll:
						{70 to: 73}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker20251_
					coverAll:
						{75 to: 79}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #addTransferWithdrawFor:
		to: receiver2 ] value.! !
!Behavior method!
register: aTransaction
	#_coverageTracker20259_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker20259_
		cover: (26 to: 37)
		declaredAt: (26 to: 37)
		by: transactions.
	#_coverageTracker20259_
		coverAll:
			{39 to: 42}
		evaluating: [
			receiver1 add:
				(#_coverageTracker20259_
					cover: (44 to: 55)
					declaredAt: (11 to: 22)
					by: aTransaction) ]
		thatSends: #add:
		to: receiver1 ] value.! !
!Behavior method!
addTransferWithdrawFor: anAmount
	#_coverageTracker20267_ markAsExecuted.
	#_coverageTracker20267_
		cover: (53 to: 63)
		declaredAt: (38 to: 48)
		by:
			(transferNet _ [ | receiver1 |
			receiver1 _ #_coverageTracker20267_
				cover: (38 to: 48)
				declaredAt: (38 to: 48)
				by: transferNet.
			#_coverageTracker20267_
				coverAll:
					{65 to: 65}
				evaluating: [
					receiver1 -
						(#_coverageTracker20267_
							cover: (67 to: 74)
							declaredAt: (25 to: 32)
							by: anAmount) ]
				thatSends: #-
				to: receiver1 ] value).! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker20275_ markAsExecuted.
	#_coverageTracker20275_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker20275_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
affectTransferNet: aTransferNet
	#_coverageTracker20284_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker20284_
		cover: (37 to: 48)
		declaredAt: (20 to: 31)
		by: aTransferNet.
	#_coverageTracker20284_
		coverAll:
			{50 to: 63}
		evaluating: [
			receiver1 addDepositFor:
				(#_coverageTracker20284_
					cover: (65 to: 69)
					declaredAt: (65 to: 69)
					by: value) ]
		thatSends: #addDepositFor:
		to: receiver1 ] value.! !
!Behavior method!
addPortfolio: aPortfolio
	#_coverageTracker20291_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker20291_
		coverAll:
			{28 to: 31}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker20291_
		coverAll:
			{33 to: 40}
		evaluating: [
			receiver2 addName:
				[ | receiver1 |
				receiver1 _ #_coverageTracker20291_
					cover: (42 to: 51)
					declaredAt: (15 to: 24)
					by: aPortfolio.
				#_coverageTracker20291_
					coverAll:
						{53 to: 56}
					evaluating: [ receiver1 name ]
					thatSends: #name
					to: receiver1 ] value ]
		thatSends: #addName:
		to: receiver2 ] value.
	#_coverageTracker20291_
		cover: (79 to: 85)
		declaredAt: (60 to: 66)
		by:
			(indents _ [ | receiver3 |
			receiver3 _ #_coverageTracker20291_
				coverAll:
					{71 to: 76}
				byLiteralOrPseudoVariable: '    '.
			#_coverageTracker20291_
				coverAll:
					{77 to: 77}
				evaluating: [
					receiver3 ,
						(#_coverageTracker20291_
							cover: (60 to: 66)
							declaredAt: (60 to: 66)
							by: indents) ]
				thatSends: #,
				to: receiver3 ] value).
	[ | receiver4 |
	receiver4 _ #_coverageTracker20291_
		cover: (89 to: 98)
		declaredAt: (15 to: 24)
		by: aPortfolio.
	#_coverageTracker20291_
		coverAll:
			{100 to: 117}
		evaluating: [
			receiver4 addAccountsInTree:
				(#_coverageTracker20291_
					coverAll:
						{119 to: 122}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addAccountsInTree:
		to: receiver4 ] value.
	#_coverageTracker20291_
		cover: (137 to: 143)
		declaredAt: (60 to: 66)
		by:
			(indents _ [ | receiver5 |
			receiver5 _ #_coverageTracker20291_
				cover: (126 to: 132)
				declaredAt: (60 to: 66)
				by: indents.
			#_coverageTracker20291_
				coverAll:
					{145 to: 155}
				evaluating: [
					receiver5 allButLast:
						(#_coverageTracker20291_
							coverAll:
								{157 to: 157}
							byLiteralOrPseudoVariable: 4) ]
				thatSends: #allButLast:
				to: receiver5 ] value).! !
!Behavior method!
addWithdrawFor: anAmount
	#_coverageTracker20309_ markAsExecuted.! !
!Behavior method!
depositLeg
	#_coverageTracker20317_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker20317_
		cover: (15 to: 22)
		declaredAt: (15 to: 22)
		by: transfer.
	#_coverageTracker20317_
		coverAll:
			{24 to: 33}
		evaluating: [ receiver1 depositLeg ]
		thatSends: #depositLeg
		to: receiver1 ] value.! !
!Behavior method!
depositLeg
	#_coverageTracker20324_ markAsExecuted.
	^ #_coverageTracker20324_
		cover: (16 to: 25)
		declaredAt: (16 to: 25)
		by: depositLeg.! !
!Behavior method!
initializeOn: aPortfolio
	#_coverageTracker20333_ markAsExecuted.
	#_coverageTracker20333_
		cover: (30 to: 38)
		declaredAt: (30 to: 38)
		by:
			(portfolio _ #_coverageTracker20333_
				cover: (43 to: 52)
				declaredAt: (15 to: 24)
				by: aPortfolio).! !
!Behavior method!
named: aName
	#_coverageTracker20346_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker20346_
		coverAll:
			{19 to: 22}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker20346_
		coverAll:
			{24 to: 26}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker20346_
		coverAll:
			{28 to: 46}
		evaluating: [
			receiver2 initializeWithName:
				(#_coverageTracker20346_
					cover: (48 to: 52)
					declaredAt: (8 to: 12)
					by: aName) ]
		thatSends: #initializeWithName:
		to: receiver2 ] value.! !
!Behavior method!
register: anAmount from: senderAccount to: receiverAccount
	| transfer |
	#_coverageTracker20359_ markAsExecuted.
	#_coverageTracker20359_
		cover: (80 to: 87)
		declaredAt: (66 to: 73)
		by:
			(transfer _ [ | receiver2 |
			receiver2 _ [ | receiver1 |
			receiver1 _ #_coverageTracker20359_
				coverAll:
					{92 to: 95}
				byLiteralOrPseudoVariable: self.
			#_coverageTracker20359_
				coverAll:
					{97 to: 99}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value.
			#_coverageTracker20359_
				coverAll:
					{101 to: 114}
				evaluating: [
					receiver2 initializeFor:
						(#_coverageTracker20359_
							cover: (116 to: 123)
							declaredAt: (11 to: 18)
							by: anAmount) ]
				thatSends: #initializeFor:
				to: receiver2 ] value).
	[ | receiver4 |
	receiver4 _ #_coverageTracker20359_
		cover: (128 to: 140)
		declaredAt: (26 to: 38)
		by: senderAccount.
	#_coverageTracker20359_
		coverAll:
			{142 to: 150}
		evaluating: [
			receiver4 register:
				[ | receiver3 |
				receiver3 _ #_coverageTracker20359_
					cover: (152 to: 159)
					declaredAt: (66 to: 73)
					by: transfer.
				#_coverageTracker20359_
					coverAll:
						{161 to: 171}
					evaluating: [ receiver3 withdrawLeg ]
					thatSends: #withdrawLeg
					to: receiver3 ] value ]
		thatSends: #register:
		to: receiver4 ] value.
	[ | receiver6 |
	receiver6 _ #_coverageTracker20359_
		cover: (175 to: 189)
		declaredAt: (44 to: 58)
		by: receiverAccount.
	#_coverageTracker20359_
		coverAll:
			{191 to: 199}
		evaluating: [
			receiver6 register:
				[ | receiver5 |
				receiver5 _ #_coverageTracker20359_
					cover: (201 to: 208)
					declaredAt: (66 to: 73)
					by: transfer.
				#_coverageTracker20359_
					coverAll:
						{210 to: 219}
					evaluating: [ receiver5 depositLeg ]
					thatSends: #depositLeg
					to: receiver5 ] value ]
		thatSends: #register:
		to: receiver6 ] value.
	^ #_coverageTracker20359_
		cover: (226 to: 233)
		declaredAt: (66 to: 73)
		by: transfer.! !
!Behavior method!
initializeFor: anAmount
	#_coverageTracker20375_ markAsExecuted.
	#_coverageTracker20375_
		cover: (27 to: 36)
		declaredAt: (27 to: 36)
		by:
			(depositLeg _ [ | receiver1 |
			receiver1 _ #_coverageTracker20375_
				coverAll:
					{41 to: 55}
				by: TransferDeposit.
			#_coverageTracker20375_
				coverAll:
					{57 to: 67}
				evaluating: [
					receiver1 registerOn:
						(#_coverageTracker20375_
							coverAll:
								{69 to: 72}
							byLiteralOrPseudoVariable: self) ]
				thatSends: #registerOn:
				to: receiver1 ] value).
	#_coverageTracker20375_
		cover: (76 to: 86)
		declaredAt: (76 to: 86)
		by:
			(withdrawLeg _ [ | receiver2 |
			receiver2 _ #_coverageTracker20375_
				coverAll:
					{91 to: 106}
				by: TransferWithdraw.
			#_coverageTracker20375_
				coverAll:
					{108 to: 118}
				evaluating: [
					receiver2 registerOn:
						(#_coverageTracker20375_
							coverAll:
								{120 to: 123}
							byLiteralOrPseudoVariable: self) ]
				thatSends: #registerOn:
				to: receiver2 ] value).
	#_coverageTracker20375_
		cover: (129 to: 133)
		declaredAt: (129 to: 133)
		by:
			(value _ #_coverageTracker20375_
				cover: (139 to: 146)
				declaredAt: (16 to: 23)
				by: anAmount).! !
!Behavior method!
addTransactionsInSummary: aSummary
	#_coverageTracker20391_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker20391_
		cover: (38 to: 49)
		declaredAt: (38 to: 49)
		by: transactions.
	#_coverageTracker20391_
		coverAll:
			{51 to: 53}
		evaluating: [
			receiver2 do: [ :aTransaction |
				[ | receiver1 |
				receiver1 _ #_coverageTracker20391_
					cover: (72 to: 83)
					declaredAt: (57 to: 68)
					by: aTransaction.
				#_coverageTracker20391_
					coverAll:
						{85 to: 108}
					evaluating: [
						receiver1 addTransactionInSummary:
							(#_coverageTracker20391_
								cover: (110 to: 117)
								declaredAt: (27 to: 34)
								by: aSummary) ]
					thatSends: #addTransactionInSummary:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
addInTree: aPortfolioTreeFormat
	#_coverageTracker20403_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker20403_
		cover: (35 to: 54)
		declaredAt: (12 to: 31)
		by: aPortfolioTreeFormat.
	#_coverageTracker20403_
		coverAll:
			{56 to: 68}
		evaluating: [
			receiver1 addPortfolio:
				(#_coverageTracker20403_
					coverAll:
						{70 to: 73}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addPortfolio:
		to: receiver1 ] value.! !
!Behavior method!
affectTransferNet: aTransferNet
	#_coverageTracker20416_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker20416_
		cover: (37 to: 48)
		declaredAt: (20 to: 31)
		by: aTransferNet.
	#_coverageTracker20416_
		coverAll:
			{50 to: 71}
		evaluating: [
			receiver2 addTransferDepositFor:
				[ | receiver1 |
				receiver1 _ #_coverageTracker20416_
					coverAll:
						{73 to: 76}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker20416_
					coverAll:
						{78 to: 82}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #addTransferDepositFor:
		to: receiver2 ] value.! !
!Behavior method!
for: anAccount
	#_coverageTracker20426_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker20426_
		coverAll:
			{21 to: 24}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker20426_
		coverAll:
			{26 to: 28}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker20426_
		coverAll:
			{30 to: 43}
		evaluating: [
			receiver2 initializeFor:
				(#_coverageTracker20426_
					cover: (45 to: 53)
					declaredAt: (6 to: 14)
					by: anAccount) ]
		thatSends: #initializeFor:
		to: receiver2 ] value.! !
!Behavior method!
balance
	#_coverageTracker20437_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker20437_
		cover: (13 to: 20)
		declaredAt: (13 to: 20)
		by: accounts.
	#_coverageTracker20437_
		coverAll:
			{22 to: 25. 62 to: 69}
		evaluating: [
			receiver2
				sum: [ :anAccount |
					[ | receiver1 |
					receiver1 _ #_coverageTracker20437_
						cover: (42 to: 50)
						declaredAt: (30 to: 38)
						by: anAccount.
					#_coverageTracker20437_
						coverAll:
							{52 to: 58}
						evaluating: [ receiver1 balance ]
						thatSends: #balance
						to: receiver1 ] value ]
				ifEmpty: [
					#_coverageTracker20437_
						coverAll:
							{73 to: 73}
						byLiteralOrPseudoVariable: 0 ]]
		thatSends: #sum:ifEmpty:
		to: receiver2 ] value.! !
!Behavior method!
value
	#_coverageTracker20445_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker20445_
		cover: (10 to: 17)
		declaredAt: (10 to: 17)
		by: transfer.
	#_coverageTracker20445_
		coverAll:
			{19 to: 23}
		evaluating: [ receiver1 value ]
		thatSends: #value
		to: receiver1 ] value.! !
!Behavior method!
affectBalance: aBalance
	#_coverageTracker20469_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker20469_
		cover: (28 to: 35)
		declaredAt: (16 to: 23)
		by: aBalance.
	#_coverageTracker20469_
		coverAll:
			{37 to: 37}
		evaluating: [
			receiver1 +
				(#_coverageTracker20469_
					cover: (39 to: 43)
					declaredAt: (39 to: 43)
					by: value) ]
		thatSends: #+
		to: receiver1 ] value.! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/29/2023 11:48:55'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/29/2023 11:48:55'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetForPortfolioWithTwoTransferAccountsIsZero stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!testRun: #TransferTest #test05CanNavigateFromDepositLegToWithdrawLeg stamp: 'ic&vw 5/29/2023 11:48:56'!
PASSED!

!methodRemoval: ReceptiveAccount #addNameInTreeFormatInPortfolio: stamp: 'ic&vw 5/29/2023 11:49:36'!
addNameInTreeFormatInPortfolio: aPortfolio

	aPortfolio addToTree: name.

	 
	
	!

----SNAPSHOT----(29 May 2023 11:51:15) CuisUniversity-5799.image priorSource: 9500628!

----STARTUP---- (29 May 2023 19:45:47) as C:\Users\Ivo\Desktop\uba\inge1\cuises\cuis 4 - portfolio 2 (imagen nueva)\CuisUniversity-5799.image!

!Behavior method!
accountsIsEmpty
	#_coverageTracker1873841_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker1873841_
		cover: (21 to: 28)
		declaredAt: (21 to: 28)
		by: accounts.
	#_coverageTracker1873841_
		coverAll:
			{30 to: 36}
		evaluating: [ receiver1 isEmpty ]
		thatSends: #isEmpty
		to: receiver1 ] value.! !
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker1873901_ markAsExecuted.
	#_coverageTracker1873901_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ [ | receiver1 |
			receiver1 _ #_coverageTracker1873901_
				coverAll:
					{66 to: 69}
				byLiteralOrPseudoVariable: self.
			#_coverageTracker1873901_
				coverAll:
					{71 to: 74}
				evaluating: [
					receiver1 for:
						(#_coverageTracker1873901_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]
				thatSends: #for:
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker1873901_
		cover: (85 to: 91)
		declaredAt: (22 to: 28)
		by: account.
	#_coverageTracker1873901_
		coverAll:
			{93 to: 101}
		evaluating: [
			receiver2 register:
				(#_coverageTracker1873901_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ]
		thatSends: #register:
		to: receiver2 ] value.
	^ #_coverageTracker1873901_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
addedTo: aPortfolio
	#_coverageTracker1873923_ markAsExecuted.! !
!Behavior method!
for: aValue
	#_coverageTracker1873942_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker1873942_
		coverAll:
			{17 to: 20}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1873942_
		coverAll:
			{22 to: 24}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker1873942_
		coverAll:
			{26 to: 39}
		evaluating: [
			receiver2 initializeFor:
				(#_coverageTracker1873942_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ]
		thatSends: #initializeFor:
		to: receiver2 ] value.! !
!Behavior method!
with: anAccount with: anotherAccount
	#_coverageTracker1873955_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker1873955_
		coverAll:
			{41 to: 44}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1873955_
		coverAll:
			{46 to: 48}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker1873955_
		coverAll:
			{53 to: 56}
		evaluating: [
			receiver2 add:
				(#_coverageTracker1873955_
					cover: (58 to: 66)
					declaredAt: (7 to: 15)
					by: anAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker1873955_
		coverAll:
			{71 to: 74}
		evaluating: [
			receiver3 add:
				(#_coverageTracker1873955_
					cover: (76 to: 89)
					declaredAt: (23 to: 36)
					by: anotherAccount) ]
		thatSends: #add:
		to: receiver3 ] value.
	[ | receiver4 |
	receiver4 _ cascadeReceiver.
	#_coverageTracker1873955_
		coverAll:
			{94 to: 101}
		evaluating: [ receiver4 yourself ]
		thatSends: #yourself
		to: receiver4 ] value ] value.! !
!Behavior method!
calculate
	#_coverageTracker1873988_ markAsExecuted.
	#_coverageTracker1873988_
		cover: (14 to: 17)
		declaredAt: (14 to: 17)
		by:
			(tree _ [ | receiver1 |
			receiver1 _ #_coverageTracker1873988_
				coverAll:
					{22 to: 38}
				by: OrderedCollection.
			#_coverageTracker1873988_
				coverAll:
					{40 to: 42}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker1873988_
		cover: (46 to: 52)
		declaredAt: (46 to: 52)
		by:
			(indents _ #_coverageTracker1873988_
				coverAll:
					{57 to: 58}
				byLiteralOrPseudoVariable: '').
	[ | receiver2 |
	receiver2 _ #_coverageTracker1873988_
		cover: (64 to: 72)
		declaredAt: (64 to: 72)
		by: portfolio.
	#_coverageTracker1873988_
		coverAll:
			{74 to: 83}
		evaluating: [
			receiver2 addInTree:
				(#_coverageTracker1873988_
					coverAll:
						{85 to: 88}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addInTree:
		to: receiver2 ] value.
	^ #_coverageTracker1873988_
		cover: (95 to: 98)
		declaredAt: (14 to: 17)
		by: tree.! !
!Behavior method!
addAccountsInTree: aPortfolioTreeFormat
	#_coverageTracker1874007_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1874007_
		cover: (43 to: 50)
		declaredAt: (43 to: 50)
		by: accounts.
	#_coverageTracker1874007_
		coverAll:
			{52 to: 54}
		evaluating: [
			receiver2 do: [ :anAccount |
				[ | receiver1 |
				receiver1 _ #_coverageTracker1874007_
					cover: (71 to: 79)
					declaredAt: (58 to: 66)
					by: anAccount.
				#_coverageTracker1874007_
					coverAll:
						{81 to: 90}
					evaluating: [
						receiver1 addInTree:
							(#_coverageTracker1874007_
								cover: (92 to: 111)
								declaredAt: (20 to: 39)
								by: aPortfolioTreeFormat) ]
					thatSends: #addInTree:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionsTo: aCollectionOfTransactions
	#_coverageTracker1874027_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker1874027_
		cover: (48 to: 72)
		declaredAt: (20 to: 44)
		by: aCollectionOfTransactions.
	#_coverageTracker1874027_
		coverAll:
			{74 to: 80}
		evaluating: [
			receiver1 addAll:
				(#_coverageTracker1874027_
					cover: (82 to: 93)
					declaredAt: (82 to: 93)
					by: transactions) ]
		thatSends: #addAll:
		to: receiver1 ] value.! !
!Behavior method!
name
	#_coverageTracker1874049_ markAsExecuted.
	^ #_coverageTracker1874049_
		cover: (9 to: 12)
		declaredAt: (9 to: 12)
		by: name.! !
!Behavior method!
isComposedBy: anAccount
	#_coverageTracker1874064_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker1874064_
		coverAll:
			{28 to: 31}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1874064_
		coverAll:
			{33 to: 33}
		evaluating: [
			receiver1 =
				(#_coverageTracker1874064_
					cover: (35 to: 43)
					declaredAt: (15 to: 23)
					by: anAccount) ]
		thatSends: #=
		to: receiver1 ] value.! !
!Behavior method!
named: aName
	#_coverageTracker1874086_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker1874086_
		coverAll:
			{19 to: 22}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1874086_
		coverAll:
			{24 to: 26}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker1874086_
		coverAll:
			{28 to: 46}
		evaluating: [
			receiver2 initializeWithName:
				(#_coverageTracker1874086_
					cover: (48 to: 52)
					declaredAt: (8 to: 12)
					by: aName) ]
		thatSends: #initializeWithName:
		to: receiver2 ] value.! !
!Behavior method!
addRootParentsTo: rootParents
	#_coverageTracker1874103_ markAsExecuted.
	[ | receiver4 |
	receiver4 _ #_coverageTracker1874103_
		cover: (33 to: 39)
		declaredAt: (33 to: 39)
		by: parents.
	#_coverageTracker1874103_
		coverAll:
			{44 to: 51. 82 to: 92}
		evaluating: [
			receiver4
				ifEmpty: [
					[ | receiver1 |
					receiver1 _ #_coverageTracker1874103_
						cover: (55 to: 65)
						declaredAt: (19 to: 29)
						by: rootParents.
					#_coverageTracker1874103_
						coverAll:
							{67 to: 70}
						evaluating: [
							receiver1 add:
								(#_coverageTracker1874103_
									coverAll:
										{72 to: 75}
									byLiteralOrPseudoVariable: self) ]
						thatSends: #add:
						to: receiver1 ] value ]
				ifNotEmpty: [
					[ | receiver3 |
					receiver3 _ #_coverageTracker1874103_
						cover: (96 to: 102)
						declaredAt: (33 to: 39)
						by: parents.
					#_coverageTracker1874103_
						coverAll:
							{104 to: 106}
						evaluating: [
							receiver3 do: [ :aParent |
								[ | receiver2 |
								receiver2 _ #_coverageTracker1874103_
									cover: (121 to: 127)
									declaredAt: (111 to: 117)
									by: aParent.
								#_coverageTracker1874103_
									coverAll:
										{129 to: 145}
									evaluating: [
										receiver2 addRootParentsTo:
											(#_coverageTracker1874103_
												cover: (147 to: 157)
												declaredAt: (19 to: 29)
												by: rootParents) ]
									thatSends: #addRootParentsTo:
									to: receiver2 ] value ]]
						thatSends: #do:
						to: receiver3 ] value ]]
		thatSends: #ifEmpty:ifNotEmpty:
		to: receiver4 ] value.! !
!Behavior method!
affectBalance: aBalance
	#_coverageTracker1874129_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker1874129_
		cover: (28 to: 35)
		declaredAt: (16 to: 23)
		by: aBalance.
	#_coverageTracker1874129_
		coverAll:
			{37 to: 37}
		evaluating: [
			receiver1 -
				(#_coverageTracker1874129_
					cover: (39 to: 43)
					declaredAt: (39 to: 43)
					by: value) ]
		thatSends: #-
		to: receiver1 ] value.! !
!Behavior method!
calculate
	#_coverageTracker1874164_ markAsExecuted.
	#_coverageTracker1874164_
		cover: (13 to: 23)
		declaredAt: (13 to: 23)
		by:
			(transferNet _ #_coverageTracker1874164_
				coverAll:
					{28 to: 28}
				byLiteralOrPseudoVariable: 0).
	[ | receiver1 |
	receiver1 _ #_coverageTracker1874164_
		cover: (34 to: 40)
		declaredAt: (34 to: 40)
		by: account.
	#_coverageTracker1874164_
		coverAll:
			{42 to: 70}
		evaluating: [
			receiver1 addTransactionsInTransferNet:
				(#_coverageTracker1874164_
					coverAll:
						{72 to: 75}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addTransactionsInTransferNet:
		to: receiver1 ] value.
	^ #_coverageTracker1874164_
		cover: (84 to: 94)
		declaredAt: (13 to: 23)
		by: transferNet.! !
!Behavior method!
transactions
	| transactions |
	#_coverageTracker1874201_ markAsExecuted.
	#_coverageTracker1874201_
		cover: (37 to: 48)
		declaredAt: (19 to: 30)
		by:
			(transactions _ [ | receiver1 |
			receiver1 _ #_coverageTracker1874201_
				coverAll:
					{53 to: 69}
				by: OrderedCollection.
			#_coverageTracker1874201_
				coverAll:
					{71 to: 73}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver3 |
	receiver3 _ #_coverageTracker1874201_
		cover: (77 to: 84)
		declaredAt: (77 to: 84)
		by: accounts.
	#_coverageTracker1874201_
		coverAll:
			{86 to: 88}
		evaluating: [
			receiver3 do: [ :anAccount |
				[ | receiver2 |
				receiver2 _ #_coverageTracker1874201_
					cover: (105 to: 113)
					declaredAt: (93 to: 101)
					by: anAccount.
				#_coverageTracker1874201_
					coverAll:
						{115 to: 132}
					evaluating: [
						receiver2 addTransactionsTo:
							(#_coverageTracker1874201_
								cover: (134 to: 145)
								declaredAt: (19 to: 30)
								by: transactions) ]
					thatSends: #addTransactionsTo:
					to: receiver2 ] value ]]
		thatSends: #do:
		to: receiver3 ] value.
	^ #_coverageTracker1874201_
		cover: (154 to: 165)
		declaredAt: (19 to: 30)
		by: transactions.! !
!Behavior method!
addTransactionsInTransferNet: aTransferNet
	#_coverageTracker1874239_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1874239_
		cover: (48 to: 59)
		declaredAt: (48 to: 59)
		by: transactions.
	#_coverageTracker1874239_
		coverAll:
			{61 to: 63}
		evaluating: [
			receiver2 do: [ :aTransaction |
				[ | receiver1 |
				receiver1 _ #_coverageTracker1874239_
					cover: (82 to: 93)
					declaredAt: (67 to: 78)
					by: aTransaction.
				#_coverageTracker1874239_
					coverAll:
						{95 to: 112}
					evaluating: [
						receiver1 affectTransferNet:
							(#_coverageTracker1874239_
								cover: (114 to: 125)
								declaredAt: (31 to: 42)
								by: aTransferNet) ]
					thatSends: #affectTransferNet:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker1874287_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker1874287_
		cover: (33 to: 44)
		declaredAt: (33 to: 44)
		by: transactions.
	#_coverageTracker1874287_
		coverAll:
			{46 to: 54}
		evaluating: [
			receiver1 includes:
				(#_coverageTracker1874287_
					cover: (56 to: 67)
					declaredAt: (16 to: 27)
					by: aTransaction) ]
		thatSends: #includes:
		to: receiver1 ] value.! !
!Behavior method!
addInTree: aPortfolioTreeFormat
	#_coverageTracker1874303_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker1874303_
		cover: (35 to: 54)
		declaredAt: (12 to: 31)
		by: aPortfolioTreeFormat.
	#_coverageTracker1874303_
		coverAll:
			{56 to: 75}
		evaluating: [
			receiver1 addReceptiveAccount:
				(#_coverageTracker1874303_
					coverAll:
						{77 to: 80}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addReceptiveAccount:
		to: receiver1 ] value.! !
!Behavior method!
on: aPortfolio
	#_coverageTracker1874329_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker1874329_
		coverAll:
			{21 to: 24}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1874329_
		coverAll:
			{26 to: 28}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker1874329_
		coverAll:
			{30 to: 42}
		evaluating: [
			receiver2 initializeOn:
				(#_coverageTracker1874329_
					cover: (44 to: 53)
					declaredAt: (5 to: 14)
					by: aPortfolio) ]
		thatSends: #initializeOn:
		to: receiver2 ] value.! !
!Behavior method!
addDepositFor: anAmount
	#_coverageTracker1874362_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1874362_
		cover: (29 to: 35)
		declaredAt: (29 to: 35)
		by: summary.
	#_coverageTracker1874362_
		coverAll:
			{37 to: 40}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker1874362_
					coverAll:
						{43 to: 46}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1874362_
					coverAll:
						{48 to: 65}
					evaluating: [
						receiver1 depositMessageFor:
							(#_coverageTracker1874362_
								cover: (67 to: 74)
								declaredAt: (16 to: 23)
								by: anAmount) ]
					thatSends: #depositMessageFor:
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
initialize
	#_coverageTracker1874371_ markAsExecuted.
	#_coverageTracker1874371_
		coverAll:
			{20 to: 29}
		evaluating: [ super initialize ]
		thatSends: #initialize
		to: super.
	#_coverageTracker1874371_
		cover: (33 to: 44)
		declaredAt: (33 to: 44)
		by:
			(transactions _ [ | receiver1 |
			receiver1 _ #_coverageTracker1874371_
				coverAll:
					{49 to: 65}
				by: OrderedCollection.
			#_coverageTracker1874371_
				coverAll:
					{67 to: 69}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).! !
!Behavior method!
affectTransferNet: aTransferNet
	#_coverageTracker1874400_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1874400_
		cover: (37 to: 48)
		declaredAt: (20 to: 31)
		by: aTransferNet.
	#_coverageTracker1874400_
		coverAll:
			{50 to: 72}
		evaluating: [
			receiver2 addTransferWithdrawFor:
				[ | receiver1 |
				receiver1 _ #_coverageTracker1874400_
					coverAll:
						{74 to: 77}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1874400_
					coverAll:
						{79 to: 83}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #addTransferWithdrawFor:
		to: receiver2 ] value.! !
!Behavior method!
anyRootParentIsComposedBy: accountToAdd
	#_coverageTracker1874438_ markAsExecuted.
	^ [ | receiver3 |
	receiver3 _ [ | receiver1 |
	receiver1 _ #_coverageTracker1874438_
		coverAll:
			{44 to: 47}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1874438_
		coverAll:
			{49 to: 59}
		evaluating: [ receiver1 rootParents ]
		thatSends: #rootParents
		to: receiver1 ] value.
	#_coverageTracker1874438_
		coverAll:
			{61 to: 71}
		evaluating: [
			receiver3 anySatisfy: [ :aParent |
				[ | receiver2 |
				receiver2 _ #_coverageTracker1874438_
					cover: (86 to: 92)
					declaredAt: (76 to: 82)
					by: aParent.
				#_coverageTracker1874438_
					coverAll:
						{94 to: 106}
					evaluating: [
						receiver2 isComposedBy:
							(#_coverageTracker1874438_
								cover: (108 to: 119)
								declaredAt: (28 to: 39)
								by: accountToAdd) ]
					thatSends: #isComposedBy:
					to: receiver2 ] value ]]
		thatSends: #anySatisfy:
		to: receiver3 ] value.! !
!Behavior method!
withdrawLeg
	#_coverageTracker1874456_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker1874456_
		cover: (15 to: 22)
		declaredAt: (15 to: 22)
		by: transfer.
	#_coverageTracker1874456_
		coverAll:
			{24 to: 34}
		evaluating: [ receiver1 withdrawLeg ]
		thatSends: #withdrawLeg
		to: receiver1 ] value.! !
!Behavior method!
addName: anAccountName
	#_coverageTracker1874474_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1874474_
		cover: (26 to: 29)
		declaredAt: (26 to: 29)
		by: tree.
	#_coverageTracker1874474_
		coverAll:
			{31 to: 34}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker1874474_
					cover: (36 to: 42)
					declaredAt: (36 to: 42)
					by: indents.
				#_coverageTracker1874474_
					coverAll:
						{43 to: 43}
					evaluating: [
						receiver1 ,
							(#_coverageTracker1874474_
								cover: (44 to: 56)
								declaredAt: (10 to: 22)
								by: anAccountName) ]
					thatSends: #,
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
depositMessageFor: anAmount
	#_coverageTracker1874506_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker1874506_
		coverAll:
			{33 to: 46}
		byLiteralOrPseudoVariable: 'Depósito de '.
	#_coverageTracker1874506_
		coverAll:
			{47 to: 47}
		evaluating: [
			receiver2 ,
				[ | receiver1 |
				receiver1 _ #_coverageTracker1874506_
					cover: (49 to: 56)
					declaredAt: (20 to: 27)
					by: anAmount.
				#_coverageTracker1874506_
					coverAll:
						{58 to: 65}
					evaluating: [ receiver1 asString ]
					thatSends: #asString
					to: receiver1 ] value ]
		thatSends: #,
		to: receiver2 ] value.! !
!Behavior method!
name
	#_coverageTracker1874530_ markAsExecuted.
	^ #_coverageTracker1874530_
		cover: (9 to: 12)
		declaredAt: (9 to: 12)
		by: name.! !
!Behavior method!
affectBalance: aBalance
	#_coverageTracker1874553_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker1874553_
		cover: (28 to: 35)
		declaredAt: (16 to: 23)
		by: aBalance.
	#_coverageTracker1874553_
		coverAll:
			{37 to: 37}
		evaluating: [
			receiver2 +
				[ | receiver1 |
				receiver1 _ #_coverageTracker1874553_
					coverAll:
						{39 to: 42}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1874553_
					coverAll:
						{44 to: 48}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #+
		to: receiver2 ] value.! !
!Behavior method!
for: aValue
	#_coverageTracker1874570_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker1874570_
		coverAll:
			{17 to: 20}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1874570_
		coverAll:
			{22 to: 24}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker1874570_
		coverAll:
			{26 to: 39}
		evaluating: [
			receiver2 initializeFor:
				(#_coverageTracker1874570_
					cover: (41 to: 46)
					declaredAt: (6 to: 11)
					by: aValue) ]
		thatSends: #initializeFor:
		to: receiver2 ] value.! !
!Behavior method!
addTransferDepositFor: anAmount
	#_coverageTracker1874595_ markAsExecuted.
	#_coverageTracker1874595_
		cover: (51 to: 61)
		declaredAt: (36 to: 46)
		by:
			(transferNet _ [ | receiver1 |
			receiver1 _ #_coverageTracker1874595_
				cover: (36 to: 46)
				declaredAt: (36 to: 46)
				by: transferNet.
			#_coverageTracker1874595_
				coverAll:
					{63 to: 63}
				evaluating: [
					receiver1 +
						(#_coverageTracker1874595_
							cover: (65 to: 72)
							declaredAt: (24 to: 31)
							by: anAmount) ]
				thatSends: #+
				to: receiver1 ] value).! !
!Behavior method!
addedTo: aPortfolio
	#_coverageTracker1874629_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker1874629_
		cover: (25 to: 31)
		declaredAt: (25 to: 31)
		by: parents.
	#_coverageTracker1874629_
		coverAll:
			{33 to: 36}
		evaluating: [
			receiver1 add:
				(#_coverageTracker1874629_
					cover: (38 to: 47)
					declaredAt: (10 to: 19)
					by: aPortfolio) ]
		thatSends: #add:
		to: receiver1 ] value.! !
!Behavior method!
initialize
	#_coverageTracker1874636_ markAsExecuted.
	#_coverageTracker1874636_
		cover: (14 to: 21)
		declaredAt: (14 to: 21)
		by:
			(accounts _ [ | receiver1 |
			receiver1 _ #_coverageTracker1874636_
				coverAll:
					{26 to: 42}
				by: OrderedCollection.
			#_coverageTracker1874636_
				coverAll:
					{44 to: 46}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	#_coverageTracker1874636_
		cover: (50 to: 56)
		declaredAt: (50 to: 56)
		by:
			(parents _ [ | receiver2 |
			receiver2 _ #_coverageTracker1874636_
				coverAll:
					{61 to: 77}
				by: OrderedCollection.
			#_coverageTracker1874636_
				coverAll:
					{79 to: 81}
				evaluating: [ receiver2 new ]
				thatSends: #new
				to: receiver2 ] value).! !
!Behavior method!
addTransactionInSummary: aSummary
	#_coverageTracker1874667_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker1874667_
		cover: (37 to: 44)
		declaredAt: (26 to: 33)
		by: aSummary.
	#_coverageTracker1874667_
		coverAll:
			{46 to: 60}
		evaluating: [
			receiver1 addWithdrawFor:
				(#_coverageTracker1874667_
					cover: (62 to: 66)
					declaredAt: (62 to: 66)
					by: value) ]
		thatSends: #addWithdrawFor:
		to: receiver1 ] value.! !
!Behavior method!
withdrawMessageFor: anAmount
	#_coverageTracker1874701_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker1874701_
		coverAll:
			{34 to: 49}
		byLiteralOrPseudoVariable: 'Extracción de '.
	#_coverageTracker1874701_
		coverAll:
			{50 to: 50}
		evaluating: [
			receiver2 ,
				[ | receiver1 |
				receiver1 _ #_coverageTracker1874701_
					cover: (52 to: 59)
					declaredAt: (21 to: 28)
					by: anAmount.
				#_coverageTracker1874701_
					coverAll:
						{61 to: 68}
					evaluating: [ receiver1 asString ]
					thatSends: #asString
					to: receiver1 ] value ]
		thatSends: #,
		to: receiver2 ] value.! !
!Behavior method!
initializeWithName: aName
	#_coverageTracker1874718_ markAsExecuted.
	#_coverageTracker1874718_
		cover: (30 to: 33)
		declaredAt: (30 to: 33)
		by:
			(name _ #_coverageTracker1874718_
				cover: (38 to: 42)
				declaredAt: (21 to: 25)
				by: aName).
	[ | receiver1 |
	receiver1 _ #_coverageTracker1874718_
		coverAll:
			{46 to: 49}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1874718_
		coverAll:
			{51 to: 60}
		evaluating: [ receiver1 initialize ]
		thatSends: #initialize
		to: receiver1 ] value.! !
!Behavior method!
initializeWithName: aName
	#_coverageTracker1874737_ markAsExecuted.
	#_coverageTracker1874737_
		cover: (30 to: 33)
		declaredAt: (30 to: 33)
		by:
			(name _ #_coverageTracker1874737_
				cover: (38 to: 42)
				declaredAt: (21 to: 25)
				by: aName).
	[ | receiver1 |
	receiver1 _ #_coverageTracker1874737_
		coverAll:
			{46 to: 49}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1874737_
		coverAll:
			{51 to: 60}
		evaluating: [ receiver1 initialize ]
		thatSends: #initialize
		to: receiver1 ] value.! !
!Behavior method!
addTransferDepositFor: anAmount
	#_coverageTracker1874756_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1874756_
		cover: (37 to: 43)
		declaredAt: (37 to: 43)
		by: summary.
	#_coverageTracker1874756_
		coverAll:
			{45 to: 48}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker1874756_
					coverAll:
						{51 to: 54}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1874756_
					coverAll:
						{56 to: 81}
					evaluating: [
						receiver1 transferDepositMessageFor:
							(#_coverageTracker1874756_
								cover: (83 to: 90)
								declaredAt: (24 to: 31)
								by: anAmount) ]
					thatSends: #transferDepositMessageFor:
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
isComposedBy: anAccount
	#_coverageTracker1874787_ markAsExecuted.
	^ [ | receiver6 |
	receiver6 _ [ | receiver1 |
	receiver1 _ #_coverageTracker1874787_
		coverAll:
			{29 to: 32}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1874787_
		coverAll:
			{34 to: 34}
		evaluating: [
			receiver1 =
				(#_coverageTracker1874787_
					cover: (36 to: 44)
					declaredAt: (15 to: 23)
					by: anAccount) ]
		thatSends: #=
		to: receiver1 ] value.
	#_coverageTracker1874787_
		coverAll:
			{46 to: 48}
		evaluating: [
			receiver6 or: [
				[ | receiver5 |
				receiver5 _ #_coverageTracker1874787_
					cover: (52 to: 59)
					declaredAt: (52 to: 59)
					by: accounts.
				#_coverageTracker1874787_
					coverAll:
						{61 to: 71}
					evaluating: [
						receiver5 anySatisfy: [ :composedAccount |
							[ | receiver4 |
							receiver4 _ [ | receiver2 |
							receiver2 _ #_coverageTracker1874787_
								cover: (95 to: 109)
								declaredAt: (76 to: 90)
								by: composedAccount.
							#_coverageTracker1874787_
								coverAll:
									{111 to: 123}
								evaluating: [
									receiver2 isComposedBy:
										(#_coverageTracker1874787_
											cover: (125 to: 133)
											declaredAt: (15 to: 23)
											by: anAccount) ]
								thatSends: #isComposedBy:
								to: receiver2 ] value.
							#_coverageTracker1874787_
								coverAll:
									{136 to: 138}
								evaluating: [
									receiver4 or: [
										[ | receiver3 |
										receiver3 _ #_coverageTracker1874787_
											cover: (142 to: 150)
											declaredAt: (15 to: 23)
											by: anAccount.
										#_coverageTracker1874787_
											coverAll:
												{152 to: 164}
											evaluating: [
												receiver3 isComposedBy:
													(#_coverageTracker1874787_
														cover: (166 to: 180)
														declaredAt: (76 to: 90)
														by: composedAccount) ]
											thatSends: #isComposedBy:
											to: receiver3 ] value ]]
								thatSends: #or:
								to: receiver4 ] value ]]
					thatSends: #anySatisfy:
					to: receiver5 ] value ]]
		thatSends: #or:
		to: receiver6 ] value.! !
!Behavior method!
transfer
	#_coverageTracker1874848_ markAsExecuted.
	^ #_coverageTracker1874848_
		cover: (13 to: 20)
		declaredAt: (13 to: 20)
		by: transfer.! !
!Behavior method!
named: aName with: anAccount with: anotherAccount with: aThirdAccount
	#_coverageTracker1874883_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker1874883_
		coverAll:
			{76 to: 79}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1874883_
		coverAll:
			{81 to: 86. 94 to: 98. 110 to: 114}
		evaluating: [
			receiver1
				named:
					(#_coverageTracker1874883_
						cover: (88 to: 92)
						declaredAt: (8 to: 12)
						by: aName)
				with:
					(#_coverageTracker1874883_
						cover: (100 to: 108)
						declaredAt: (20 to: 28)
						by: anAccount)
				with:
					(#_coverageTracker1874883_
						cover: (116 to: 129)
						declaredAt: (36 to: 49)
						by: anotherAccount) ]
		thatSends: #named:with:with:
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker1874883_
		coverAll:
			{132 to: 135}
		evaluating: [
			receiver2 add:
				(#_coverageTracker1874883_
					cover: (137 to: 149)
					declaredAt: (57 to: 69)
					by: aThirdAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker1874883_
		coverAll:
			{152 to: 159}
		evaluating: [ receiver3 yourself ]
		thatSends: #yourself
		to: receiver3 ] value ] value.! !
!Behavior method!
initializeFor: anAccount
	#_coverageTracker1874947_ markAsExecuted.
	#_coverageTracker1874947_
		cover: (30 to: 36)
		declaredAt: (30 to: 36)
		by:
			(account _ #_coverageTracker1874947_
				cover: (41 to: 49)
				declaredAt: (16 to: 24)
				by: anAccount).! !
!Behavior method!
affectTransferNet: aTransferNet
	#_coverageTracker1874986_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker1874986_
		cover: (37 to: 48)
		declaredAt: (20 to: 31)
		by: aTransferNet.
	#_coverageTracker1874986_
		coverAll:
			{50 to: 64}
		evaluating: [
			receiver1 addWithdrawFor:
				(#_coverageTracker1874986_
					cover: (66 to: 70)
					declaredAt: (66 to: 70)
					by: value) ]
		thatSends: #addWithdrawFor:
		to: receiver1 ] value.! !
!Behavior method!
transactions
	#_coverageTracker1875026_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker1875026_
		cover: (19 to: 30)
		declaredAt: (19 to: 30)
		by: transactions.
	#_coverageTracker1875026_
		coverAll:
			{32 to: 35}
		evaluating: [ receiver1 copy ]
		thatSends: #copy
		to: receiver1 ] value.! !
!Behavior method!
withdrawLeg
	#_coverageTracker1875056_ markAsExecuted.
	^ #_coverageTracker1875056_
		cover: (17 to: 27)
		declaredAt: (17 to: 27)
		by: withdrawLeg.! !
!Behavior method!
rootParents
	| rootParents |
	#_coverageTracker1875080_ markAsExecuted.
	#_coverageTracker1875080_
		cover: (35 to: 45)
		declaredAt: (18 to: 28)
		by:
			(rootParents _ [ | receiver1 |
			receiver1 _ #_coverageTracker1875080_
				coverAll:
					{50 to: 52}
				by: Set.
			#_coverageTracker1875080_
				coverAll:
					{54 to: 56}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker1875080_
		coverAll:
			{60 to: 63}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1875080_
		coverAll:
			{65 to: 81}
		evaluating: [
			receiver2 addRootParentsTo:
				(#_coverageTracker1875080_
					cover: (83 to: 93)
					declaredAt: (18 to: 28)
					by: rootParents) ]
		thatSends: #addRootParentsTo:
		to: receiver2 ] value.
	^ #_coverageTracker1875080_
		cover: (101 to: 111)
		declaredAt: (18 to: 28)
		by: rootParents.! !
!Behavior method!
named: aName with: anAccount
	#_coverageTracker1875119_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker1875119_
		coverAll:
			{35 to: 38}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1875119_
		coverAll:
			{40 to: 45}
		evaluating: [
			receiver1 named:
				(#_coverageTracker1875119_
					cover: (47 to: 51)
					declaredAt: (8 to: 12)
					by: aName) ]
		thatSends: #named:
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker1875119_
		coverAll:
			{54 to: 57}
		evaluating: [
			receiver2 add:
				(#_coverageTracker1875119_
					cover: (59 to: 67)
					declaredAt: (20 to: 28)
					by: anAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker1875119_
		coverAll:
			{70 to: 77}
		evaluating: [ receiver3 yourself ]
		thatSends: #yourself
		to: receiver3 ] value ] value.! !
!Behavior method!
hasRegistered: aTransaction
	#_coverageTracker1875158_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker1875158_
		cover: (32 to: 39)
		declaredAt: (32 to: 39)
		by: accounts.
	#_coverageTracker1875158_
		coverAll:
			{41 to: 51}
		evaluating: [
			receiver2 anySatisfy: [ :anAccount |
				[ | receiver1 |
				receiver1 _ #_coverageTracker1875158_
					cover: (68 to: 76)
					declaredAt: (56 to: 64)
					by: anAccount.
				#_coverageTracker1875158_
					coverAll:
						{78 to: 91}
					evaluating: [
						receiver1 hasRegistered:
							(#_coverageTracker1875158_
								cover: (93 to: 104)
								declaredAt: (16 to: 27)
								by: aTransaction) ]
					thatSends: #hasRegistered:
					to: receiver1 ] value ]]
		thatSends: #anySatisfy:
		to: receiver2 ] value.! !
!Behavior method!
value
	#_coverageTracker1875175_ markAsExecuted.
	^ #_coverageTracker1875175_
		cover: (11 to: 15)
		declaredAt: (11 to: 15)
		by: value.! !
!Behavior method!
addTransactionsTo: aCollectionOfTransactions
	#_coverageTracker1875211_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1875211_
		cover: (48 to: 55)
		declaredAt: (48 to: 55)
		by: accounts.
	#_coverageTracker1875211_
		coverAll:
			{57 to: 59}
		evaluating: [
			receiver2 do: [ :anAccount |
				[ | receiver1 |
				receiver1 _ #_coverageTracker1875211_
					cover: (76 to: 84)
					declaredAt: (64 to: 72)
					by: anAccount.
				#_coverageTracker1875211_
					coverAll:
						{86 to: 103}
					evaluating: [
						receiver1 addTransactionsTo:
							(#_coverageTracker1875211_
								cover: (105 to: 129)
								declaredAt: (20 to: 44)
								by: aCollectionOfTransactions) ]
					thatSends: #addTransactionsTo:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
affectBalance: aBalance
	#_coverageTracker1875242_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker1875242_
		cover: (28 to: 35)
		declaredAt: (16 to: 23)
		by: aBalance.
	#_coverageTracker1875242_
		coverAll:
			{37 to: 37}
		evaluating: [
			receiver2 -
				[ | receiver1 |
				receiver1 _ #_coverageTracker1875242_
					coverAll:
						{39 to: 42}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1875242_
					coverAll:
						{44 to: 48}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #-
		to: receiver2 ] value.! !
!Behavior method!
canNotAddAccountErrorMessage
	#_coverageTracker1875266_ markAsExecuted.
	^ #_coverageTracker1875266_
		coverAll:
			{34 to: 78}
		byLiteralOrPseudoVariable: 'Can not add repeated account to a portfolio'.! !
!Behavior method!
addTransactionsInSummary: anAccountSummary
	#_coverageTracker1875304_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1875304_
		cover: (48 to: 55)
		declaredAt: (48 to: 55)
		by: accounts.
	#_coverageTracker1875304_
		coverAll:
			{57 to: 59}
		evaluating: [
			receiver2 do: [ :anAccount |
				[ | receiver1 |
				receiver1 _ #_coverageTracker1875304_
					cover: (76 to: 84)
					declaredAt: (64 to: 72)
					by: anAccount.
				#_coverageTracker1875304_
					coverAll:
						{86 to: 110}
					evaluating: [
						receiver1 addTransactionsInSummary:
							(#_coverageTracker1875304_
								cover: (112 to: 127)
								declaredAt: (27 to: 42)
								by: anAccountSummary) ]
					thatSends: #addTransactionsInSummary:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionsInTransferNet: aTransferNet
	#_coverageTracker1875361_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1875361_
		cover: (48 to: 55)
		declaredAt: (48 to: 55)
		by: accounts.
	#_coverageTracker1875361_
		coverAll:
			{57 to: 59}
		evaluating: [
			receiver2 do: [ :account |
				[ | receiver1 |
				receiver1 _ #_coverageTracker1875361_
					cover: (73 to: 79)
					declaredAt: (63 to: 69)
					by: account.
				#_coverageTracker1875361_
					coverAll:
						{81 to: 109}
					evaluating: [
						receiver1 addTransactionsInTransferNet:
							(#_coverageTracker1875361_
								cover: (111 to: 122)
								declaredAt: (31 to: 42)
								by: aTransferNet) ]
					thatSends: #addTransactionsInTransferNet:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionInSummary: aSummary
	#_coverageTracker1875385_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1875385_
		cover: (37 to: 44)
		declaredAt: (26 to: 33)
		by: aSummary.
	#_coverageTracker1875385_
		coverAll:
			{46 to: 67}
		evaluating: [
			receiver2 addTransferDepositFor:
				[ | receiver1 |
				receiver1 _ #_coverageTracker1875385_
					coverAll:
						{69 to: 72}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1875385_
					coverAll:
						{74 to: 78}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #addTransferDepositFor:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionInSummary: aSummary
	#_coverageTracker1875420_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker1875420_
		cover: (37 to: 44)
		declaredAt: (26 to: 33)
		by: aSummary.
	#_coverageTracker1875420_
		coverAll:
			{46 to: 59}
		evaluating: [
			receiver1 addDepositFor:
				(#_coverageTracker1875420_
					cover: (61 to: 65)
					declaredAt: (61 to: 65)
					by: value) ]
		thatSends: #addDepositFor:
		to: receiver1 ] value.! !
!Behavior method!
register: aValue on: account
	| transaction |
	#_coverageTracker1875452_ markAsExecuted.
	#_coverageTracker1875452_
		cover: (51 to: 61)
		declaredAt: (34 to: 44)
		by:
			(transaction _ [ | receiver1 |
			receiver1 _ #_coverageTracker1875452_
				coverAll:
					{66 to: 69}
				byLiteralOrPseudoVariable: self.
			#_coverageTracker1875452_
				coverAll:
					{71 to: 74}
				evaluating: [
					receiver1 for:
						(#_coverageTracker1875452_
							cover: (76 to: 81)
							declaredAt: (11 to: 16)
							by: aValue) ]
				thatSends: #for:
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker1875452_
		cover: (85 to: 91)
		declaredAt: (22 to: 28)
		by: account.
	#_coverageTracker1875452_
		coverAll:
			{93 to: 101}
		evaluating: [
			receiver2 register:
				(#_coverageTracker1875452_
					cover: (103 to: 113)
					declaredAt: (34 to: 44)
					by: transaction) ]
		thatSends: #register:
		to: receiver2 ] value.
	^ #_coverageTracker1875452_
		cover: (122 to: 132)
		declaredAt: (34 to: 44)
		by: transaction.! !
!Behavior method!
transferDepositMessageFor: anAmount
	#_coverageTracker1875486_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker1875486_
		coverAll:
			{41 to: 71}
		byLiteralOrPseudoVariable: 'Entrada por transferencia de '.
	#_coverageTracker1875486_
		coverAll:
			{72 to: 72}
		evaluating: [
			receiver2 ,
				[ | receiver1 |
				receiver1 _ #_coverageTracker1875486_
					cover: (74 to: 81)
					declaredAt: (28 to: 35)
					by: anAmount.
				#_coverageTracker1875486_
					coverAll:
						{83 to: 90}
					evaluating: [ receiver1 asString ]
					thatSends: #asString
					to: receiver1 ] value ]
		thatSends: #,
		to: receiver2 ] value.! !
!Behavior method!
accountsSize
	#_coverageTracker1875506_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker1875506_
		cover: (18 to: 25)
		declaredAt: (18 to: 25)
		by: accounts.
	#_coverageTracker1875506_
		coverAll:
			{27 to: 30}
		evaluating: [ receiver1 size ]
		thatSends: #size
		to: receiver1 ] value.! !
!Behavior method!
addDepositFor: anAmount
	#_coverageTracker1875535_ markAsExecuted.! !
!Behavior method!
value
	#_coverageTracker1875565_ markAsExecuted.
	^ #_coverageTracker1875565_
		cover: (11 to: 15)
		declaredAt: (11 to: 15)
		by: value.! !
!Behavior method!
accountsIncludes: anAccount
	#_coverageTracker1875586_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker1875586_
		cover: (32 to: 39)
		declaredAt: (32 to: 39)
		by: accounts.
	#_coverageTracker1875586_
		coverAll:
			{41 to: 49}
		evaluating: [
			receiver1 includes:
				(#_coverageTracker1875586_
					cover: (51 to: 59)
					declaredAt: (19 to: 27)
					by: anAccount) ]
		thatSends: #includes:
		to: receiver1 ] value.! !
!Behavior method!
add: accountToAdd
	#_coverageTracker1875611_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker1875611_
		coverAll:
			{21 to: 24}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1875611_
		coverAll:
			{26 to: 38}
		evaluating: [
			receiver1 assertCanAdd:
				(#_coverageTracker1875611_
					cover: (40 to: 51)
					declaredAt: (6 to: 17)
					by: accountToAdd) ]
		thatSends: #assertCanAdd:
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1875611_
		cover: (58 to: 65)
		declaredAt: (58 to: 65)
		by: accounts.
	#_coverageTracker1875611_
		coverAll:
			{67 to: 70}
		evaluating: [
			receiver2 add:
				(#_coverageTracker1875611_
					cover: (72 to: 83)
					declaredAt: (6 to: 17)
					by: accountToAdd) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ #_coverageTracker1875611_
		cover: (87 to: 98)
		declaredAt: (6 to: 17)
		by: accountToAdd.
	#_coverageTracker1875611_
		coverAll:
			{100 to: 107}
		evaluating: [
			receiver3 addedTo:
				(#_coverageTracker1875611_
					coverAll:
						{109 to: 112}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addedTo:
		to: receiver3 ] value.! !
!Behavior method!
assertCanAdd: accountToAdd
	#_coverageTracker1875646_ markAsExecuted.
	[ | receiver3 |
	receiver3 _ [ | receiver1 |
	receiver1 _ #_coverageTracker1875646_
		coverAll:
			{31 to: 34}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1875646_
		coverAll:
			{36 to: 61}
		evaluating: [
			receiver1 anyRootParentIsComposedBy:
				(#_coverageTracker1875646_
					cover: (63 to: 74)
					declaredAt: (15 to: 26)
					by: accountToAdd) ]
		thatSends: #anyRootParentIsComposedBy:
		to: receiver1 ] value.
	#_coverageTracker1875646_
		coverAll:
			{77 to: 83}
		evaluating: [
			receiver3 ifTrue: [
				[ | receiver2 |
				receiver2 _ #_coverageTracker1875646_
					coverAll:
						{87 to: 90}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1875646_
					coverAll:
						{92 to: 113}
					evaluating: [ receiver2 signalCanNotAddAccount ]
					thatSends: #signalCanNotAddAccount
					to: receiver2 ] value ]]
		thatSends: #ifTrue:
		to: receiver3 ] value.! !
!Behavior method!
named: aName with: anAccount with: anotherAccount
	#_coverageTracker1875684_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker1875684_
		coverAll:
			{57 to: 60}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1875684_
		coverAll:
			{62 to: 67. 75 to: 79}
		evaluating: [
			receiver1
				named:
					(#_coverageTracker1875684_
						cover: (69 to: 73)
						declaredAt: (8 to: 12)
						by: aName)
				with:
					(#_coverageTracker1875684_
						cover: (81 to: 89)
						declaredAt: (20 to: 28)
						by: anAccount) ]
		thatSends: #named:with:
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker1875684_
		coverAll:
			{92 to: 95}
		evaluating: [
			receiver2 add:
				(#_coverageTracker1875684_
					cover: (97 to: 110)
					declaredAt: (36 to: 49)
					by: anotherAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker1875684_
		coverAll:
			{113 to: 120}
		evaluating: [ receiver3 yourself ]
		thatSends: #yourself
		to: receiver3 ] value ] value.! !
!Behavior method!
balance
	#_coverageTracker1875716_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker1875716_
		cover: (12 to: 23)
		declaredAt: (12 to: 23)
		by: transactions.
	#_coverageTracker1875716_
		coverAll:
			{28 to: 34. 40 to: 44}
		evaluating: [
			receiver2
				inject:
					(#_coverageTracker1875716_
						coverAll:
							{36 to: 36}
						byLiteralOrPseudoVariable: 0)
				into: [ :currentBalance :transaction |
					[ | receiver1 |
					receiver1 _ #_coverageTracker1875716_
						cover: (79 to: 89)
						declaredAt: (65 to: 75)
						by: transaction.
					#_coverageTracker1875716_
						coverAll:
							{91 to: 104}
						evaluating: [
							receiver1 affectBalance:
								(#_coverageTracker1875716_
									cover: (106 to: 119)
									declaredAt: (49 to: 62)
									by: currentBalance) ]
						thatSends: #affectBalance:
						to: receiver1 ] value ]]
		thatSends: #inject:into:
		to: receiver2 ] value.! !
!Behavior method!
with: anAccount
	#_coverageTracker1875743_ markAsExecuted.
	^ [ | cascadeReceiver |
	cascadeReceiver _ [ | receiver1 |
	receiver1 _ #_coverageTracker1875743_
		coverAll:
			{20 to: 23}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1875743_
		coverAll:
			{25 to: 27}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	[ | receiver2 |
	receiver2 _ cascadeReceiver.
	#_coverageTracker1875743_
		coverAll:
			{32 to: 35}
		evaluating: [
			receiver2 add:
				(#_coverageTracker1875743_
					cover: (37 to: 45)
					declaredAt: (7 to: 15)
					by: anAccount) ]
		thatSends: #add:
		to: receiver2 ] value.
	[ | receiver3 |
	receiver3 _ cascadeReceiver.
	#_coverageTracker1875743_
		coverAll:
			{50 to: 57}
		evaluating: [ receiver3 yourself ]
		thatSends: #yourself
		to: receiver3 ] value ] value.! !
!Behavior method!
initializeFor: aTransfer
	#_coverageTracker1875772_ markAsExecuted.
	#_coverageTracker1875772_
		cover: (28 to: 35)
		declaredAt: (28 to: 35)
		by:
			(transfer _ #_coverageTracker1875772_
				cover: (40 to: 48)
				declaredAt: (16 to: 24)
				by: aTransfer).! !
!Behavior method!
addTransferWithdrawFor: anAmount
	#_coverageTracker1875803_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1875803_
		cover: (38 to: 44)
		declaredAt: (38 to: 44)
		by: summary.
	#_coverageTracker1875803_
		coverAll:
			{46 to: 49}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker1875803_
					coverAll:
						{52 to: 55}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1875803_
					coverAll:
						{57 to: 83}
					evaluating: [
						receiver1 transferWithdrawMessageFor:
							(#_coverageTracker1875803_
								cover: (85 to: 92)
								declaredAt: (25 to: 32)
								by: anAmount) ]
					thatSends: #transferWithdrawMessageFor:
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
balanceMessage
	#_coverageTracker1875826_ markAsExecuted.
	^ [ | receiver3 |
	receiver3 _ #_coverageTracker1875826_
		coverAll:
			{20 to: 31}
		byLiteralOrPseudoVariable: 'Balance = '.
	#_coverageTracker1875826_
		coverAll:
			{32 to: 32}
		evaluating: [
			receiver3 ,
				[ | receiver2 |
				receiver2 _ [ | receiver1 |
				receiver1 _ #_coverageTracker1875826_
					cover: (34 to: 40)
					declaredAt: (34 to: 40)
					by: account.
				#_coverageTracker1875826_
					coverAll:
						{42 to: 48}
					evaluating: [ receiver1 balance ]
					thatSends: #balance
					to: receiver1 ] value.
				#_coverageTracker1875826_
					coverAll:
						{50 to: 57}
					evaluating: [ receiver2 asString ]
					thatSends: #asString
					to: receiver2 ] value ]
		thatSends: #,
		to: receiver3 ] value.! !
!Behavior method!
transferWithdrawMessageFor: anAmount
	#_coverageTracker1875854_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker1875854_
		coverAll:
			{42 to: 71}
		byLiteralOrPseudoVariable: 'Salida por transferencia de '.
	#_coverageTracker1875854_
		coverAll:
			{72 to: 72}
		evaluating: [
			receiver2 ,
				[ | receiver1 |
				receiver1 _ #_coverageTracker1875854_
					cover: (74 to: 81)
					declaredAt: (29 to: 36)
					by: anAmount.
				#_coverageTracker1875854_
					coverAll:
						{83 to: 90}
					evaluating: [ receiver1 asString ]
					thatSends: #asString
					to: receiver1 ] value ]
		thatSends: #,
		to: receiver2 ] value.! !
!Behavior method!
addReceptiveAccount: aReceptiveAccount
	#_coverageTracker1875891_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1875891_
		coverAll:
			{42 to: 45}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1875891_
		coverAll:
			{47 to: 54}
		evaluating: [
			receiver2 addName:
				[ | receiver1 |
				receiver1 _ #_coverageTracker1875891_
					cover: (56 to: 72)
					declaredAt: (22 to: 38)
					by: aReceptiveAccount.
				#_coverageTracker1875891_
					coverAll:
						{74 to: 77}
					evaluating: [ receiver1 name ]
					thatSends: #name
					to: receiver1 ] value ]
		thatSends: #addName:
		to: receiver2 ] value.! !
!Behavior method!
calculate
	#_coverageTracker1875921_ markAsExecuted.
	#_coverageTracker1875921_
		cover: (14 to: 20)
		declaredAt: (14 to: 20)
		by:
			(summary _ [ | receiver1 |
			receiver1 _ #_coverageTracker1875921_
				coverAll:
					{25 to: 41}
				by: OrderedCollection.
			#_coverageTracker1875921_
				coverAll:
					{43 to: 45}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).
	[ | receiver2 |
	receiver2 _ #_coverageTracker1875921_
		cover: (51 to: 57)
		declaredAt: (51 to: 57)
		by: account.
	#_coverageTracker1875921_
		coverAll:
			{59 to: 83}
		evaluating: [
			receiver2 addTransactionsInSummary:
				(#_coverageTracker1875921_
					coverAll:
						{85 to: 88}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addTransactionsInSummary:
		to: receiver2 ] value.
	[ | receiver4 |
	receiver4 _ #_coverageTracker1875921_
		cover: (95 to: 101)
		declaredAt: (14 to: 20)
		by: summary.
	#_coverageTracker1875921_
		coverAll:
			{103 to: 106}
		evaluating: [
			receiver4 add:
				[ | receiver3 |
				receiver3 _ #_coverageTracker1875921_
					coverAll:
						{109 to: 112}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1875921_
					coverAll:
						{114 to: 127}
					evaluating: [ receiver3 balanceMessage ]
					thatSends: #balanceMessage
					to: receiver3 ] value ]
		thatSends: #add:
		to: receiver4 ] value.
	^ #_coverageTracker1875921_
		cover: (135 to: 141)
		declaredAt: (14 to: 20)
		by: summary.! !
!Behavior method!
signalCanNotAddAccount
	#_coverageTracker1875942_ markAsExecuted.
	[ | receiver3 |
	receiver3 _ #_coverageTracker1875942_
		coverAll:
			{27 to: 30}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1875942_
		coverAll:
			{32 to: 37}
		evaluating: [
			receiver3 error:
				[ | receiver2 |
				receiver2 _ [ | receiver1 |
				receiver1 _ #_coverageTracker1875942_
					coverAll:
						{39 to: 42}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1875942_
					coverAll:
						{44 to: 48}
					evaluating: [ receiver1 class ]
					thatSends: #class
					to: receiver1 ] value.
				#_coverageTracker1875942_
					coverAll:
						{50 to: 77}
					evaluating: [ receiver2 canNotAddAccountErrorMessage ]
					thatSends: #canNotAddAccountErrorMessage
					to: receiver2 ] value ]
		thatSends: #error:
		to: receiver3 ] value.! !
!Behavior method!
value
	#_coverageTracker1875960_ markAsExecuted.
	^ #_coverageTracker1875960_
		cover: (10 to: 14)
		declaredAt: (10 to: 14)
		by: value.! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker1875998_ markAsExecuted.
	#_coverageTracker1875998_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker1875998_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
registerOn: aTransfer
	#_coverageTracker1876028_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker1876028_
		coverAll:
			{27 to: 30}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1876028_
		coverAll:
			{32 to: 34}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker1876028_
		coverAll:
			{36 to: 49}
		evaluating: [
			receiver2 initializeFor:
				(#_coverageTracker1876028_
					cover: (51 to: 59)
					declaredAt: (13 to: 21)
					by: aTransfer) ]
		thatSends: #initializeFor:
		to: receiver2 ] value.! !
!Behavior method!
addWithdrawFor: anAmount
	#_coverageTracker1876061_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1876061_
		cover: (28 to: 34)
		declaredAt: (28 to: 34)
		by: summary.
	#_coverageTracker1876061_
		coverAll:
			{36 to: 39}
		evaluating: [
			receiver2 add:
				[ | receiver1 |
				receiver1 _ #_coverageTracker1876061_
					coverAll:
						{42 to: 45}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1876061_
					coverAll:
						{47 to: 65}
					evaluating: [
						receiver1 withdrawMessageFor:
							(#_coverageTracker1876061_
								cover: (67 to: 74)
								declaredAt: (17 to: 24)
								by: anAmount) ]
					thatSends: #withdrawMessageFor:
					to: receiver1 ] value ]
		thatSends: #add:
		to: receiver2 ] value.! !
!Behavior method!
addTransactionInSummary: aSummary
	#_coverageTracker1876080_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1876080_
		cover: (37 to: 44)
		declaredAt: (26 to: 33)
		by: aSummary.
	#_coverageTracker1876080_
		coverAll:
			{46 to: 68}
		evaluating: [
			receiver2 addTransferWithdrawFor:
				[ | receiver1 |
				receiver1 _ #_coverageTracker1876080_
					coverAll:
						{70 to: 73}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1876080_
					coverAll:
						{75 to: 79}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #addTransferWithdrawFor:
		to: receiver2 ] value.! !
!Behavior method!
register: aTransaction
	#_coverageTracker1876117_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker1876117_
		cover: (26 to: 37)
		declaredAt: (26 to: 37)
		by: transactions.
	#_coverageTracker1876117_
		coverAll:
			{39 to: 42}
		evaluating: [
			receiver1 add:
				(#_coverageTracker1876117_
					cover: (44 to: 55)
					declaredAt: (11 to: 22)
					by: aTransaction) ]
		thatSends: #add:
		to: receiver1 ] value.! !
!Behavior method!
addTransferWithdrawFor: anAmount
	#_coverageTracker1876141_ markAsExecuted.
	#_coverageTracker1876141_
		cover: (53 to: 63)
		declaredAt: (38 to: 48)
		by:
			(transferNet _ [ | receiver1 |
			receiver1 _ #_coverageTracker1876141_
				cover: (38 to: 48)
				declaredAt: (38 to: 48)
				by: transferNet.
			#_coverageTracker1876141_
				coverAll:
					{65 to: 65}
				evaluating: [
					receiver1 -
						(#_coverageTracker1876141_
							cover: (67 to: 74)
							declaredAt: (25 to: 32)
							by: anAmount) ]
				thatSends: #-
				to: receiver1 ] value).! !
!Behavior method!
initializeFor: aValue
	#_coverageTracker1876156_ markAsExecuted.
	#_coverageTracker1876156_
		cover: (25 to: 29)
		declaredAt: (25 to: 29)
		by:
			(value _ #_coverageTracker1876156_
				cover: (34 to: 39)
				declaredAt: (16 to: 21)
				by: aValue).! !
!Behavior method!
affectTransferNet: aTransferNet
	#_coverageTracker1876190_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker1876190_
		cover: (37 to: 48)
		declaredAt: (20 to: 31)
		by: aTransferNet.
	#_coverageTracker1876190_
		coverAll:
			{50 to: 63}
		evaluating: [
			receiver1 addDepositFor:
				(#_coverageTracker1876190_
					cover: (65 to: 69)
					declaredAt: (65 to: 69)
					by: value) ]
		thatSends: #addDepositFor:
		to: receiver1 ] value.! !
!Behavior method!
addPortfolio: aPortfolio
	#_coverageTracker1876206_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1876206_
		coverAll:
			{28 to: 31}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1876206_
		coverAll:
			{33 to: 40}
		evaluating: [
			receiver2 addName:
				[ | receiver1 |
				receiver1 _ #_coverageTracker1876206_
					cover: (42 to: 51)
					declaredAt: (15 to: 24)
					by: aPortfolio.
				#_coverageTracker1876206_
					coverAll:
						{53 to: 56}
					evaluating: [ receiver1 name ]
					thatSends: #name
					to: receiver1 ] value ]
		thatSends: #addName:
		to: receiver2 ] value.
	#_coverageTracker1876206_
		cover: (79 to: 85)
		declaredAt: (60 to: 66)
		by:
			(indents _ [ | receiver3 |
			receiver3 _ #_coverageTracker1876206_
				coverAll:
					{71 to: 76}
				byLiteralOrPseudoVariable: '    '.
			#_coverageTracker1876206_
				coverAll:
					{77 to: 77}
				evaluating: [
					receiver3 ,
						(#_coverageTracker1876206_
							cover: (60 to: 66)
							declaredAt: (60 to: 66)
							by: indents) ]
				thatSends: #,
				to: receiver3 ] value).
	[ | receiver4 |
	receiver4 _ #_coverageTracker1876206_
		cover: (89 to: 98)
		declaredAt: (15 to: 24)
		by: aPortfolio.
	#_coverageTracker1876206_
		coverAll:
			{100 to: 117}
		evaluating: [
			receiver4 addAccountsInTree:
				(#_coverageTracker1876206_
					coverAll:
						{119 to: 122}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addAccountsInTree:
		to: receiver4 ] value.
	#_coverageTracker1876206_
		cover: (137 to: 143)
		declaredAt: (60 to: 66)
		by:
			(indents _ [ | receiver5 |
			receiver5 _ #_coverageTracker1876206_
				cover: (126 to: 132)
				declaredAt: (60 to: 66)
				by: indents.
			#_coverageTracker1876206_
				coverAll:
					{145 to: 155}
				evaluating: [
					receiver5 allButLast:
						(#_coverageTracker1876206_
							coverAll:
								{157 to: 157}
							byLiteralOrPseudoVariable: 4) ]
				thatSends: #allButLast:
				to: receiver5 ] value).! !
!Behavior method!
addWithdrawFor: anAmount
	#_coverageTracker1876250_ markAsExecuted.! !
!Behavior method!
depositLeg
	#_coverageTracker1876268_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker1876268_
		cover: (15 to: 22)
		declaredAt: (15 to: 22)
		by: transfer.
	#_coverageTracker1876268_
		coverAll:
			{24 to: 33}
		evaluating: [ receiver1 depositLeg ]
		thatSends: #depositLeg
		to: receiver1 ] value.! !
!Behavior method!
depositLeg
	#_coverageTracker1876295_ markAsExecuted.
	^ #_coverageTracker1876295_
		cover: (16 to: 25)
		declaredAt: (16 to: 25)
		by: depositLeg.! !
!Behavior method!
initializeOn: aPortfolio
	#_coverageTracker1876322_ markAsExecuted.
	#_coverageTracker1876322_
		cover: (30 to: 38)
		declaredAt: (30 to: 38)
		by:
			(portfolio _ #_coverageTracker1876322_
				cover: (43 to: 52)
				declaredAt: (15 to: 24)
				by: aPortfolio).! !
!Behavior method!
named: aName
	#_coverageTracker1876359_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker1876359_
		coverAll:
			{19 to: 22}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1876359_
		coverAll:
			{24 to: 26}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker1876359_
		coverAll:
			{28 to: 46}
		evaluating: [
			receiver2 initializeWithName:
				(#_coverageTracker1876359_
					cover: (48 to: 52)
					declaredAt: (8 to: 12)
					by: aName) ]
		thatSends: #initializeWithName:
		to: receiver2 ] value.! !
!Behavior method!
register: anAmount from: senderAccount to: receiverAccount
	| transfer |
	#_coverageTracker1876403_ markAsExecuted.
	#_coverageTracker1876403_
		cover: (80 to: 87)
		declaredAt: (66 to: 73)
		by:
			(transfer _ [ | receiver2 |
			receiver2 _ [ | receiver1 |
			receiver1 _ #_coverageTracker1876403_
				coverAll:
					{92 to: 95}
				byLiteralOrPseudoVariable: self.
			#_coverageTracker1876403_
				coverAll:
					{97 to: 99}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value.
			#_coverageTracker1876403_
				coverAll:
					{101 to: 114}
				evaluating: [
					receiver2 initializeFor:
						(#_coverageTracker1876403_
							cover: (116 to: 123)
							declaredAt: (11 to: 18)
							by: anAmount) ]
				thatSends: #initializeFor:
				to: receiver2 ] value).
	[ | receiver4 |
	receiver4 _ #_coverageTracker1876403_
		cover: (128 to: 140)
		declaredAt: (26 to: 38)
		by: senderAccount.
	#_coverageTracker1876403_
		coverAll:
			{142 to: 150}
		evaluating: [
			receiver4 register:
				[ | receiver3 |
				receiver3 _ #_coverageTracker1876403_
					cover: (152 to: 159)
					declaredAt: (66 to: 73)
					by: transfer.
				#_coverageTracker1876403_
					coverAll:
						{161 to: 171}
					evaluating: [ receiver3 withdrawLeg ]
					thatSends: #withdrawLeg
					to: receiver3 ] value ]
		thatSends: #register:
		to: receiver4 ] value.
	[ | receiver6 |
	receiver6 _ #_coverageTracker1876403_
		cover: (175 to: 189)
		declaredAt: (44 to: 58)
		by: receiverAccount.
	#_coverageTracker1876403_
		coverAll:
			{191 to: 199}
		evaluating: [
			receiver6 register:
				[ | receiver5 |
				receiver5 _ #_coverageTracker1876403_
					cover: (201 to: 208)
					declaredAt: (66 to: 73)
					by: transfer.
				#_coverageTracker1876403_
					coverAll:
						{210 to: 219}
					evaluating: [ receiver5 depositLeg ]
					thatSends: #depositLeg
					to: receiver5 ] value ]
		thatSends: #register:
		to: receiver6 ] value.
	^ #_coverageTracker1876403_
		cover: (226 to: 233)
		declaredAt: (66 to: 73)
		by: transfer.! !
!Behavior method!
initializeFor: anAmount
	#_coverageTracker1876459_ markAsExecuted.
	#_coverageTracker1876459_
		cover: (27 to: 36)
		declaredAt: (27 to: 36)
		by:
			(depositLeg _ [ | receiver1 |
			receiver1 _ #_coverageTracker1876459_
				coverAll:
					{41 to: 55}
				by: TransferDeposit.
			#_coverageTracker1876459_
				coverAll:
					{57 to: 67}
				evaluating: [
					receiver1 registerOn:
						(#_coverageTracker1876459_
							coverAll:
								{69 to: 72}
							byLiteralOrPseudoVariable: self) ]
				thatSends: #registerOn:
				to: receiver1 ] value).
	#_coverageTracker1876459_
		cover: (76 to: 86)
		declaredAt: (76 to: 86)
		by:
			(withdrawLeg _ [ | receiver2 |
			receiver2 _ #_coverageTracker1876459_
				coverAll:
					{91 to: 106}
				by: TransferWithdraw.
			#_coverageTracker1876459_
				coverAll:
					{108 to: 118}
				evaluating: [
					receiver2 registerOn:
						(#_coverageTracker1876459_
							coverAll:
								{120 to: 123}
							byLiteralOrPseudoVariable: self) ]
				thatSends: #registerOn:
				to: receiver2 ] value).
	#_coverageTracker1876459_
		cover: (129 to: 133)
		declaredAt: (129 to: 133)
		by:
			(value _ #_coverageTracker1876459_
				cover: (139 to: 146)
				declaredAt: (16 to: 23)
				by: anAmount).! !
!Behavior method!
addTransactionsInSummary: aSummary
	#_coverageTracker1876478_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1876478_
		cover: (38 to: 49)
		declaredAt: (38 to: 49)
		by: transactions.
	#_coverageTracker1876478_
		coverAll:
			{51 to: 53}
		evaluating: [
			receiver2 do: [ :aTransaction |
				[ | receiver1 |
				receiver1 _ #_coverageTracker1876478_
					cover: (72 to: 83)
					declaredAt: (57 to: 68)
					by: aTransaction.
				#_coverageTracker1876478_
					coverAll:
						{85 to: 108}
					evaluating: [
						receiver1 addTransactionInSummary:
							(#_coverageTracker1876478_
								cover: (110 to: 117)
								declaredAt: (27 to: 34)
								by: aSummary) ]
					thatSends: #addTransactionInSummary:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
addInTree: aPortfolioTreeFormat
	#_coverageTracker1876499_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker1876499_
		cover: (35 to: 54)
		declaredAt: (12 to: 31)
		by: aPortfolioTreeFormat.
	#_coverageTracker1876499_
		coverAll:
			{56 to: 68}
		evaluating: [
			receiver1 addPortfolio:
				(#_coverageTracker1876499_
					coverAll:
						{70 to: 73}
					byLiteralOrPseudoVariable: self) ]
		thatSends: #addPortfolio:
		to: receiver1 ] value.! !
!Behavior method!
affectTransferNet: aTransferNet
	#_coverageTracker1876520_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker1876520_
		cover: (37 to: 48)
		declaredAt: (20 to: 31)
		by: aTransferNet.
	#_coverageTracker1876520_
		coverAll:
			{50 to: 71}
		evaluating: [
			receiver2 addTransferDepositFor:
				[ | receiver1 |
				receiver1 _ #_coverageTracker1876520_
					coverAll:
						{73 to: 76}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker1876520_
					coverAll:
						{78 to: 82}
					evaluating: [ receiver1 value ]
					thatSends: #value
					to: receiver1 ] value ]
		thatSends: #addTransferDepositFor:
		to: receiver2 ] value.! !
!Behavior method!
for: anAccount
	#_coverageTracker1876536_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker1876536_
		coverAll:
			{21 to: 24}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker1876536_
		coverAll:
			{26 to: 28}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker1876536_
		coverAll:
			{30 to: 43}
		evaluating: [
			receiver2 initializeFor:
				(#_coverageTracker1876536_
					cover: (45 to: 53)
					declaredAt: (6 to: 14)
					by: anAccount) ]
		thatSends: #initializeFor:
		to: receiver2 ] value.! !
!Behavior method!
balance
	#_coverageTracker1876557_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ #_coverageTracker1876557_
		cover: (13 to: 20)
		declaredAt: (13 to: 20)
		by: accounts.
	#_coverageTracker1876557_
		coverAll:
			{22 to: 25. 62 to: 69}
		evaluating: [
			receiver2
				sum: [ :anAccount |
					[ | receiver1 |
					receiver1 _ #_coverageTracker1876557_
						cover: (42 to: 50)
						declaredAt: (30 to: 38)
						by: anAccount.
					#_coverageTracker1876557_
						coverAll:
							{52 to: 58}
						evaluating: [ receiver1 balance ]
						thatSends: #balance
						to: receiver1 ] value ]
				ifEmpty: [
					#_coverageTracker1876557_
						coverAll:
							{73 to: 73}
						byLiteralOrPseudoVariable: 0 ]]
		thatSends: #sum:ifEmpty:
		to: receiver2 ] value.! !
!Behavior method!
value
	#_coverageTracker1876577_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker1876577_
		cover: (10 to: 17)
		declaredAt: (10 to: 17)
		by: transfer.
	#_coverageTracker1876577_
		coverAll:
			{19 to: 23}
		evaluating: [ receiver1 value ]
		thatSends: #value
		to: receiver1 ] value.! !
!Behavior method!
affectBalance: aBalance
	#_coverageTracker1876632_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker1876632_
		cover: (28 to: 35)
		declaredAt: (16 to: 23)
		by: aBalance.
	#_coverageTracker1876632_
		coverAll:
			{37 to: 37}
		evaluating: [
			receiver1 +
				(#_coverageTracker1876632_
					cover: (39 to: 43)
					declaredAt: (39 to: 43)
					by: value) ]
		thatSends: #+
		to: receiver1 ] value.! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/29/2023 20:17:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetForPortfolioWithTwoTransferAccountsIsZero stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!

!testRun: #TransferTest #test05CanNavigateFromDepositLegToWithdrawLeg stamp: 'ic&vw 5/29/2023 20:17:05'!
PASSED!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:31:43'!
test02TransferNetForAccountWithTransferDepositReturnsNetDepositAmount

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: ReceptiveAccount new to: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 10 equals: transferNet calculate.
	
	! !

!methodRemoval: TransferNetTest #test02TransferNetForAccountWithTransferDepositTenIsTen stamp: 'ic&vw 5/29/2023 20:31:43'!
test02TransferNetForAccountWithTransferDepositTenIsTen

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: ReceptiveAccount new to: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 10 equals: transferNet calculate.
	
	!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:32:18'!
test03TransferNetForAccountWithDepositDoesNotAffectTransferNet

	| transferNet account |
	
	account := ReceptiveAccount new.
	Deposit register: 10 on: account.
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet calculate.
	
	! !

!methodRemoval: TransferNetTest #test03TransferNetForAccountWithDepositTenIsZero stamp: 'ic&vw 5/29/2023 20:32:18'!
test03TransferNetForAccountWithDepositTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Deposit register: 10 on: account.
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet calculate.
	
	!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:32:45'!
test03TransferNetIsNotAffectedByAccountWithDeposit

	| transferNet account |
	
	account := ReceptiveAccount new.
	Deposit register: 10 on: account.
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet calculate.
	
	! !

!methodRemoval: TransferNetTest #test03TransferNetForAccountWithDepositDoesNotAffectTransferNet stamp: 'ic&vw 5/29/2023 20:32:45'!
test03TransferNetForAccountWithDepositDoesNotAffectTransferNet

	| transferNet account |
	
	account := ReceptiveAccount new.
	Deposit register: 10 on: account.
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet calculate.
	
	!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:33:00'!
test04TransferNetIsNotAffectedByAccountWithWithdraw

	| transferNet account |
	
	account := ReceptiveAccount new.
	Withdraw register: 10 on: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet calculate.
	! !

!methodRemoval: TransferNetTest #test04TransferNetForAccountWithWithdrawTenIsZero stamp: 'ic&vw 5/29/2023 20:33:00'!
test04TransferNetForAccountWithWithdrawTenIsZero

	| transferNet account |
	
	account := ReceptiveAccount new.
	Withdraw register: 10 on: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet calculate.
	!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:33:41'!
test02TransferNetIsAffectedByAccountWithTransferDeposit

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: ReceptiveAccount new to: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 10 equals: transferNet calculate.
	
	! !

!methodRemoval: TransferNetTest #test02TransferNetForAccountWithTransferDepositReturnsNetDepositAmount stamp: 'ic&vw 5/29/2023 20:33:41'!
test02TransferNetForAccountWithTransferDepositReturnsNetDepositAmount

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: ReceptiveAccount new to: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 10 equals: transferNet calculate.
	
	!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:33:56'!
test05TransferNetIsAffectedByAccountWithTransferWithdraw

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: account to: ReceptiveAccount new. 
	
	transferNet := TransferNet for: account.
	
	self assert: -10 equals: transferNet calculate.
	! !

!methodRemoval: TransferNetTest #test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen stamp: 'ic&vw 5/29/2023 20:33:57'!
test05TransferNetForAccountWithTransferWithdrawTenIsNegativeTen

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: account to: ReceptiveAccount new. 
	
	transferNet := TransferNet for: account.
	
	self assert: -10 equals: transferNet calculate.
	!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:35:14'!
test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancel

	| senderAccount receiverAccount portfolio transferNet |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	transferNet := TransferNet for: portfolio.
	
	self assert: 0 equals: transferNet calculate.
	! !

!methodRemoval: TransferNetTest #test06TransferNetForPortfolioWithTwoTransferAccountsIsZero stamp: 'ic&vw 5/29/2023 20:35:14'!
test06TransferNetForPortfolioWithTwoTransferAccountsIsZero

	| senderAccount receiverAccount portfolio transferNet |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	transferNet := TransferNet for: portfolio.
	
	self assert: 0 equals: transferNet calculate.
	!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:35:40'!
test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled

	| senderAccount receiverAccount portfolio transferNet |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	transferNet := TransferNet for: portfolio.
	
	self assert: 0 equals: transferNet calculate.
	! !

!methodRemoval: TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancel stamp: 'ic&vw 5/29/2023 20:35:40'!
test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancel

	| senderAccount receiverAccount portfolio transferNet |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	transferNet := TransferNet for: portfolio.
	
	self assert: 0 equals: transferNet calculate.
	!
!TransferNet methodsFor: 'calculate' stamp: 'ic&vw 5/29/2023 20:37:32'!
net

	transferNet := 0.
	
	account addTransactionsInTransferNet: self.
			
	^transferNet! !

!methodRemoval: TransferNet #calculate stamp: 'ic&vw 5/29/2023 20:37:32'!
calculate

	transferNet := 0.
	
	account addTransactionsInTransferNet: self.
			
	^transferNet!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/29/2023 20:37:36'!
ERROR!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/29/2023 20:37:36'!
ERROR!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/29/2023 20:37:36'!
ERROR!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/29/2023 20:37:36'!
ERROR!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/29/2023 20:37:36'!
ERROR!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/29/2023 20:37:36'!
ERROR!
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:37:44' prior: 50639211!
test02TransferNetIsAffectedByAccountWithTransferDeposit

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: ReceptiveAccount new to: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 10 equals: transferNet net.
	
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:37:48' prior: 50624481!
test01TransferNetForNewAccountReturnsZero

	| transferNet |
	
	transferNet := TransferNet for: ReceptiveAccount new.
	
	self assert: 0 equals: transferNet net.
	
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:37:51' prior: 50639166!
test03TransferNetIsNotAffectedByAccountWithDeposit

	| transferNet account |
	
	account := ReceptiveAccount new.
	Deposit register: 10 on: account.
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet net.
	
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:37:54' prior: 50639189!
test04TransferNetIsNotAffectedByAccountWithWithdraw

	| transferNet account |
	
	account := ReceptiveAccount new.
	Withdraw register: 10 on: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet net.
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:37:57' prior: 50639236!
test05TransferNetIsAffectedByAccountWithTransferWithdraw

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: account to: ReceptiveAccount new. 
	
	transferNet := TransferNet for: account.
	
	self assert: -10 equals: transferNet net.
	! !
!TransferNetTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:37:59' prior: 50639295!
test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled

	| senderAccount receiverAccount portfolio transferNet |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	transferNet := TransferNet for: portfolio.
	
	self assert: 0 equals: transferNet net.
	! !

!methodRemoval: AccountReport #calculate stamp: 'ic&vw 5/29/2023 20:38:10'!
calculate
	
	self subclassResponsibility!
!AccountSummary methodsFor: 'calculate' stamp: 'ic&vw 5/29/2023 20:38:30'!
summary
	
	summary := OrderedCollection new.
	
	account addTransactionsInSummary: self.
		
	summary add: (self balanceMessage).
	
	^summary! !
!PortfolioTreeFormat methodsFor: 'calculate' stamp: 'ic&vw 5/29/2023 20:38:30'!
summary
	
	tree := OrderedCollection new.
	indents := ''.
	
	portfolio addInTree: self.
	
	^tree
	! !
!PortfolioTreeFormatTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:38:30' prior: 50628232!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
							     with: (self formatWithOneIndentation: 'Portfolio de hijos'	) 
							     with: (self formatWithTwoIndentations: 'Cuenta de Juan'	)
			   ) equals: treeFormat summary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:38:30' prior: 50623767!
test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100') equals: accountSummary summary.! !
!PortfolioTreeFormatTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:38:30' prior: 50628208!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation

	| childrenPortfolio johnsAccount angiesAccount treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount  := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	treeFormat := PortfolioTreeFormat on: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' 
	  					             with: (self formatWithOneIndentation: 'Cuenta de Juan'	) 
							     with: (self formatWithOneIndentation: 'Cuenta de Angeles'	)
			   ) equals: treeFormat summary ! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:38:30' prior: 50622609!
test01NewAccountSumaryTestHasOnlyBalance

	| accountSummary |
	
	accountSummary := AccountSummary for: ReceptiveAccount new.
	
	self assert: (OrderedCollection with: 'Balance = 0') equals: accountSummary summary.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:38:30' prior: 50623610!
test02AccountWithDepositHasDepositAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Depósito de 100' with: 'Balance = 100') equals: accountSummary summary.! !
!PortfolioTreeFormatTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:38:30' prior: 50628260!
test05PrintPortfolioWithIndentationGoingUpAndDown

	| childrenPortfolio familyPortfolio treeFormat dadAccount momAccount sonAccount |
	
	sonAccount  := ReceptiveAccount named: 'Cuenta del hijo'.
	dadAccount  := ReceptiveAccount named: 'Cuenta del padre'.
	momAccount := ReceptiveAccount named: 'Cuenta de la madre'.
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: sonAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: dadAccount with: childrenPortfolio with: momAccount.
	treeFormat := PortfolioTreeFormat on: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
							     with: (self formatWithOneIndentation: 'Cuenta del padre'	)
							     with: (self formatWithOneIndentation: 'Portfolio de hijos'	)
							     with: (self formatWithTwoIndentations: 'Cuenta del hijo'	)
							     with: (self formatWithOneIndentation: 'Cuenta de la madre'	)
			   ) 
	
	equals: treeFormat summary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:38:30' prior: 50623623!
test03AccountWithWithdrawHasWithdrawAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Extracción de 100' with: 'Balance = -100') equals: accountSummary summary.! !
!PortfolioTreeFormatTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:38:30' prior: 50628190!
test02PrintPortfolioNameAndAccountWithOneIndentation

	| childrenPortfolio johnsAccount treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	treeFormat := PortfolioTreeFormat on: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' 
							     with: (self formatWithOneIndentation: 'Cuenta de Juan'	)
			   ) equals: treeFormat summary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:38:30' prior: 50624402!
test06PortfolioWithAccountsShowTransferTwice

	| portfolioSummary senderAccount receiverAccount portfolio |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	portfolioSummary := AccountSummary for: portfolio.
		
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Entrada por transferencia de 100' with: 'Balance = 0') 
	      equals: portfolioSummary summary.! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:38:30' prior: 50623674!
test04AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: receiverAccount.
	
	self assert: (OrderedCollection with: 'Entrada por transferencia de 100' with: 'Balance = 100') equals: accountSummary summary.! !
!PortfolioTreeFormatTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:38:30' prior: 50627285!
test01PrintPortfolioNameInEmptyPortfolio

	| childrenPortfolio treeFormat |
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	treeFormat := PortfolioTreeFormat on: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: (treeFormat summary).! !

!methodRemoval: AccountSummary #calculate stamp: 'ic&vw 5/29/2023 20:38:30'!
calculate
	
	summary := OrderedCollection new.
	
	account addTransactionsInSummary: self.
		
	summary add: (self balanceMessage).
	
	^summary!

!methodRemoval: PortfolioTreeFormat #calculate stamp: 'ic&vw 5/29/2023 20:38:30'!
calculate
	
	tree := OrderedCollection new.
	indents := ''.
	
	portfolio addInTree: self.
	
	^tree
	!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/29/2023 20:38:37'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/29/2023 20:38:37'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:38:37'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/29/2023 20:38:37'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:38:37'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/29/2023 20:38:37'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/29/2023 20:38:42'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/29/2023 20:38:43'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/29/2023 20:38:43'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/29/2023 20:38:43'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/29/2023 20:38:43'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/29/2023 20:38:43'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/29/2023 20:38:43'!
PASSED!

!testRun: #TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/29/2023 20:38:43'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/29/2023 20:38:43'!
PASSED!

!testRun: #TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/29/2023 20:38:43'!
PASSED!

!testRun: #TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/29/2023 20:38:43'!
PASSED!

!testRun: #TransferTest #test05CanNavigateFromDepositLegToWithdrawLeg stamp: 'ic&vw 5/29/2023 20:38:43'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:40:58'!
test01TransferAffectsBalanceOfBothAccounts

	| receiverAccount senderAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 50 from: senderAccount  to: receiverAccount.

	self assert: -50 equals: senderAccount balance .
	self assert: 50 equals: receiverAccount balance.! !

!methodRemoval: TransferTest #test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount stamp: 'ic&vw 5/29/2023 20:40:58'!
test01CreateTransactionTakesMoneyFromOneAccountAndGivesItToAnotherAccount

	| receiverAccount senderAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 50 from: senderAccount  to: receiverAccount.

	self assert: -50 equals: senderAccount balance .
	self assert: 50 equals: receiverAccount balance.!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:41:19'!
test03TransferLegsHaveSameTransfer

	| transfer depositLegTransfer withdrawLegTransfer |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLegTransfer := transfer depositLeg transfer.
	withdrawLegTransfer := transfer withdrawLeg transfer.
	
	self assert: depositLegTransfer equals: withdrawLegTransfer! !

!methodRemoval: TransferTest #test03LegsInTransferHaveSameTransfer stamp: 'ic&vw 5/29/2023 20:41:19'!
test03LegsInTransferHaveSameTransfer

	| transfer depositLegTransfer withdrawLegTransfer |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLegTransfer := transfer depositLeg transfer.
	withdrawLegTransfer := transfer withdrawLeg transfer.
	
	self assert: depositLegTransfer equals: withdrawLegTransfer!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:41:27'!
test03TransferLegsHaveTheSameTransfer

	| transfer depositLegTransfer withdrawLegTransfer |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLegTransfer := transfer depositLeg transfer.
	withdrawLegTransfer := transfer withdrawLeg transfer.
	
	self assert: depositLegTransfer equals: withdrawLegTransfer! !

!methodRemoval: TransferTest #test03TransferLegsHaveSameTransfer stamp: 'ic&vw 5/29/2023 20:41:27'!
test03TransferLegsHaveSameTransfer

	| transfer depositLegTransfer withdrawLegTransfer |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLegTransfer := transfer depositLeg transfer.
	withdrawLegTransfer := transfer withdrawLeg transfer.
	
	self assert: depositLegTransfer equals: withdrawLegTransfer!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:42:14'!
test04TransferWithdrawCanAccessTransferDeposit

	| transfer withdrawLegDepositLeg |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	withdrawLegDepositLeg := transfer withdrawLeg depositLeg.
	
	self assert: transfer depositLeg equals: withdrawLegDepositLeg! !

!methodRemoval: TransferTest #test04CanNavigateFromWithdrawLegToDepositLeg stamp: 'ic&vw 5/29/2023 20:42:14'!
test04CanNavigateFromWithdrawLegToDepositLeg

	| transfer withdrawLegDepositLeg |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	withdrawLegDepositLeg := transfer withdrawLeg depositLeg.
	
	self assert: transfer depositLeg equals: withdrawLegDepositLeg!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:42:21'!
test05TransferDepositCanAccessTransferWithdraw

	| transfer depositLegWithdrawLeg |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLegWithdrawLeg := transfer depositLeg withdrawLeg.
	
	self assert: transfer withdrawLeg equals: depositLegWithdrawLeg! !

!methodRemoval: TransferTest #test05CanNavigateFromDepositLegToWithdrawLeg stamp: 'ic&vw 5/29/2023 20:42:21'!
test05CanNavigateFromDepositLegToWithdrawLeg

	| transfer depositLegWithdrawLeg |

	transfer := 	self createTransferBetweenTwoAccounts.
	
	depositLegWithdrawLeg := transfer depositLeg withdrawLeg.
	
	self assert: transfer withdrawLeg equals: depositLegWithdrawLeg!
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:42:40' prior: 50639952!
test04TransferWithdrawCanAccessTransferDeposit

	| transfer |

	transfer := 	self createTransferBetweenTwoAccounts.
		
	self assert: transfer depositLeg equals: (transfer withdrawLeg depositLeg)! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:42:52' prior: 50639975!
test05TransferDepositCanAccessTransferWithdraw

	| transfer |

	transfer := 	self createTransferBetweenTwoAccounts.
		
	self assert: transfer withdrawLeg equals: transfer depositLeg withdrawLeg.! !
!TransferTest methodsFor: 'tests' stamp: 'ic&vw 5/29/2023 20:42:57' prior: 50639998!
test04TransferWithdrawCanAccessTransferDeposit

	| transfer |

	transfer := 	self createTransferBetweenTwoAccounts.
		
	self assert: transfer depositLeg equals: transfer withdrawLeg depositLeg! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/29/2023 20:43:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/29/2023 20:43:20'!
PASSED!

----SNAPSHOT----(29 May 2023 20:47:03) CuisUniversity-5799.image priorSource: 9766736!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/29/2023 20:47:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/29/2023 20:47:07'!
PASSED!
!AccountReport methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:47:24'!
registerDepositFor: anAmount 

	self subclassResponsibility! !
!AccountSummary methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:47:24' overrides: 50640371!
registerDepositFor: anAmount 
	
	summary add: (self depositMessageFor: anAmount)
! !
!TransferNet methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:47:24' overrides: 50640371!
registerDepositFor: anAmount
	
	! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:47:24' prior: 50624001 overrides: 50623961!
addTransactionInSummary: aSummary

	aSummary registerDepositFor: value! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:47:24' prior: 50625257 overrides: 50625470!
affectTransferNet: aTransferNet 
	
	aTransferNet registerDepositFor: value! !

!methodRemoval: AccountReport #addDepositFor: stamp: 'ic&vw 5/29/2023 20:47:24'!
addDepositFor: anAmount 

	self subclassResponsibility!

!methodRemoval: AccountSummary #addDepositFor: stamp: 'ic&vw 5/29/2023 20:47:24'!
addDepositFor: anAmount 
	
	summary add: (self depositMessageFor: anAmount)
!

!methodRemoval: TransferNet #addDepositFor: stamp: 'ic&vw 5/29/2023 20:47:24'!
addDepositFor: anAmount
	
	!
!AccountReport methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:47:34'!
registerTransferDepositFor: anAmount 
	
	self subclassResponsibility
! !
!AccountSummary methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:47:34' overrides: 50640411!
registerTransferDepositFor: anAmount 
	
	summary add: (self transferDepositMessageFor: anAmount)
! !
!TransferNet methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:47:35' overrides: 50640411!
registerTransferDepositFor: anAmount
	
	transferNet := transferNet + anAmount.! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:47:35' prior: 50624013 overrides: 50623967!
addTransactionInSummary: aSummary

	aSummary registerTransferDepositFor: self value! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:47:35' prior: 50625218 overrides: 50625476!
affectTransferNet: aTransferNet 
	
	aTransferNet registerTransferDepositFor: self value.! !

!methodRemoval: AccountReport #addTransferDepositFor: stamp: 'ic&vw 5/29/2023 20:47:35'!
addTransferDepositFor: anAmount 
	
	self subclassResponsibility
!

!methodRemoval: AccountSummary #addTransferDepositFor: stamp: 'ic&vw 5/29/2023 20:47:35'!
addTransferDepositFor: anAmount 
	
	summary add: (self transferDepositMessageFor: anAmount)
!

!methodRemoval: TransferNet #addTransferDepositFor: stamp: 'ic&vw 5/29/2023 20:47:35'!
addTransferDepositFor: anAmount
	
	transferNet := transferNet + anAmount.!
!AccountReport methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:47:43'!
registerWithdrawFor: anAmount

	self subclassResponsibility! !
!AccountSummary methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:47:43' overrides: 50640458!
registerWithdrawFor: anAmount

	summary add: (self withdrawMessageFor: anAmount)! !
!TransferNet methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:47:43' overrides: 50640458!
registerWithdrawFor: anAmount 
	! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:47:44' prior: 50624007 overrides: 50623961!
addTransactionInSummary: aSummary

	aSummary registerWithdrawFor: value! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:47:44' prior: 50625275 overrides: 50625470!
affectTransferNet: aTransferNet 
	
	aTransferNet registerWithdrawFor: value ! !

!methodRemoval: AccountReport #addWithdrawFor: stamp: 'ic&vw 5/29/2023 20:47:44'!
addWithdrawFor: anAmount

	self subclassResponsibility!

!methodRemoval: AccountSummary #addWithdrawFor: stamp: 'ic&vw 5/29/2023 20:47:44'!
addWithdrawFor: anAmount

	summary add: (self withdrawMessageFor: anAmount)!

!methodRemoval: TransferNet #addWithdrawFor: stamp: 'ic&vw 5/29/2023 20:47:44'!
addWithdrawFor: anAmount 
	!
!AccountReport methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:47:52'!
registerTransferWithdrawFor: anAmount 
	
	self subclassResponsibility! !
!AccountSummary methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:47:52' overrides: 50640498!
registerTransferWithdrawFor: anAmount 
	
	summary add: (self transferWithdrawMessageFor: anAmount)
! !
!TransferNet methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:47:52' overrides: 50640498!
registerTransferWithdrawFor: anAmount 
	
	transferNet := transferNet - anAmount! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:47:52' prior: 50625310 overrides: 50625476!
affectTransferNet: aTransferNet 
	
	aTransferNet registerTransferWithdrawFor: self value! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:47:52' prior: 50624020 overrides: 50623967!
addTransactionInSummary: aSummary

	aSummary registerTransferWithdrawFor: self value! !

!methodRemoval: AccountReport #addTransferWithdrawFor: stamp: 'ic&vw 5/29/2023 20:47:52'!
addTransferWithdrawFor: anAmount 
	
	self subclassResponsibility!

!methodRemoval: AccountSummary #addTransferWithdrawFor: stamp: 'ic&vw 5/29/2023 20:47:52'!
addTransferWithdrawFor: anAmount 
	
	summary add: (self transferWithdrawMessageFor: anAmount)
!

!methodRemoval: TransferNet #addTransferWithdrawFor: stamp: 'ic&vw 5/29/2023 20:47:52'!
addTransferWithdrawFor: anAmount 
	
	transferNet := transferNet - anAmount!
!AccountTransaction methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:48:26'!
registerTransactionInSummary: aSummary

	self subclassResponsibility! !
!Deposit methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:48:26' overrides: 50640547!
registerTransactionInSummary: aSummary

	aSummary registerDepositFor: value! !
!TransferTransaction methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:48:26' overrides: 50640547!
registerTransactionInSummary: aSummary

	self subclassResponsibility! !
!TransferDeposit methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:48:26' overrides: 50640558!
registerTransactionInSummary: aSummary

	aSummary registerTransferDepositFor: self value! !
!TransferWithdraw methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:48:26' overrides: 50640558!
registerTransactionInSummary: aSummary

	aSummary registerTransferWithdrawFor: self value! !
!Withdraw methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:48:26' overrides: 50640547!
registerTransactionInSummary: aSummary

	aSummary registerWithdrawFor: value! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:48:26' prior: 50624026 overrides: 50625448!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | aTransaction registerTransactionInSummary: aSummary	]! !

!methodRemoval: AccountTransaction #addTransactionInSummary: stamp: 'ic&vw 5/29/2023 20:48:26'!
addTransactionInSummary: aSummary

	self subclassResponsibility!

!methodRemoval: Deposit #addTransactionInSummary: stamp: 'ic&vw 5/29/2023 20:48:26'!
addTransactionInSummary: aSummary

	aSummary registerDepositFor: value!

!methodRemoval: TransferTransaction #addTransactionInSummary: stamp: 'ic&vw 5/29/2023 20:48:26'!
addTransactionInSummary: aSummary

	self subclassResponsibility!

!methodRemoval: TransferDeposit #addTransactionInSummary: stamp: 'ic&vw 5/29/2023 20:48:26'!
addTransactionInSummary: aSummary

	aSummary registerTransferDepositFor: self value!

!methodRemoval: TransferWithdraw #addTransactionInSummary: stamp: 'ic&vw 5/29/2023 20:48:26'!
addTransactionInSummary: aSummary

	aSummary registerTransferWithdrawFor: self value!

!methodRemoval: Withdraw #addTransactionInSummary: stamp: 'ic&vw 5/29/2023 20:48:26'!
addTransactionInSummary: aSummary

	aSummary registerWithdrawFor: value!
!AccountTransaction methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:48:39'!
registerInTransferNet: aTransferNet 

	self subclassResponsibility! !
!Deposit methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:48:40' overrides: 50640621!
registerInTransferNet: aTransferNet 
	
	aTransferNet registerDepositFor: value! !
!TransferTransaction methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:48:40' overrides: 50640621!
registerInTransferNet: aTransferNet 

	self subclassResponsibility! !
!TransferDeposit methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:48:40' overrides: 50640632!
registerInTransferNet: aTransferNet 
	
	aTransferNet registerTransferDepositFor: self value.! !
!TransferWithdraw methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:48:40' overrides: 50640632!
registerInTransferNet: aTransferNet 
	
	aTransferNet registerTransferWithdrawFor: self value! !
!Withdraw methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:48:40' overrides: 50640621!
registerInTransferNet: aTransferNet 
	
	aTransferNet registerWithdrawFor: value ! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:48:40' prior: 50625133 overrides: 50625453!
addTransactionsInTransferNet: aTransferNet 
	
	transactions do: [:aTransaction | aTransaction registerInTransferNet: aTransferNet	]
		
		
		
		
! !

!methodRemoval: AccountTransaction #affectTransferNet: stamp: 'ic&vw 5/29/2023 20:48:40'!
affectTransferNet: aTransferNet 

	self subclassResponsibility!

!methodRemoval: Deposit #affectTransferNet: stamp: 'ic&vw 5/29/2023 20:48:40'!
affectTransferNet: aTransferNet 
	
	aTransferNet registerDepositFor: value!

!methodRemoval: TransferTransaction #affectTransferNet: stamp: 'ic&vw 5/29/2023 20:48:40'!
affectTransferNet: aTransferNet 

	self subclassResponsibility!

!methodRemoval: TransferDeposit #affectTransferNet: stamp: 'ic&vw 5/29/2023 20:48:40'!
affectTransferNet: aTransferNet 
	
	aTransferNet registerTransferDepositFor: self value.!

!methodRemoval: TransferWithdraw #affectTransferNet: stamp: 'ic&vw 5/29/2023 20:48:40'!
affectTransferNet: aTransferNet 
	
	aTransferNet registerTransferWithdrawFor: self value!

!methodRemoval: Withdraw #affectTransferNet: stamp: 'ic&vw 5/29/2023 20:48:40'!
affectTransferNet: aTransferNet 
	
	aTransferNet registerWithdrawFor: value !
!AccountTransaction methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:49:20'!
registerInSummary: aSummary

	self subclassResponsibility! !
!Deposit methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:49:20' overrides: 50640695!
registerInSummary: aSummary

	aSummary registerDepositFor: value! !
!TransferTransaction methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:49:21' overrides: 50640695!
registerInSummary: aSummary

	self subclassResponsibility! !
!TransferDeposit methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:49:21' overrides: 50640706!
registerInSummary: aSummary

	aSummary registerTransferDepositFor: self value! !
!TransferWithdraw methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:49:21' overrides: 50640706!
registerInSummary: aSummary

	aSummary registerTransferWithdrawFor: self value! !
!Withdraw methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:49:21' overrides: 50640695!
registerInSummary: aSummary

	aSummary registerWithdrawFor: value! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:49:21' prior: 50640583 overrides: 50625448!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | aTransaction registerInSummary: aSummary	]! !

!methodRemoval: AccountTransaction #registerTransactionInSummary: stamp: 'ic&vw 5/29/2023 20:49:21'!
registerTransactionInSummary: aSummary

	self subclassResponsibility!

!methodRemoval: Deposit #registerTransactionInSummary: stamp: 'ic&vw 5/29/2023 20:49:21'!
registerTransactionInSummary: aSummary

	aSummary registerDepositFor: value!

!methodRemoval: TransferTransaction #registerTransactionInSummary: stamp: 'ic&vw 5/29/2023 20:49:21'!
registerTransactionInSummary: aSummary

	self subclassResponsibility!

!methodRemoval: TransferDeposit #registerTransactionInSummary: stamp: 'ic&vw 5/29/2023 20:49:21'!
registerTransactionInSummary: aSummary

	aSummary registerTransferDepositFor: self value!

!methodRemoval: TransferWithdraw #registerTransactionInSummary: stamp: 'ic&vw 5/29/2023 20:49:21'!
registerTransactionInSummary: aSummary

	aSummary registerTransferWithdrawFor: self value!

!methodRemoval: Withdraw #registerTransactionInSummary: stamp: 'ic&vw 5/29/2023 20:49:21'!
registerTransactionInSummary: aSummary

	aSummary registerWithdrawFor: value!
!AccountTransaction methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:49:39'!
registerInAccountSummary: aSummary

	self subclassResponsibility! !
!Deposit methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:49:40' overrides: 50640769!
registerInAccountSummary: aSummary

	aSummary registerDepositFor: value! !
!TransferTransaction methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:49:40' overrides: 50640769!
registerInAccountSummary: aSummary

	self subclassResponsibility! !
!TransferDeposit methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:49:40' overrides: 50640780!
registerInAccountSummary: aSummary

	aSummary registerTransferDepositFor: self value! !
!TransferWithdraw methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:49:40' overrides: 50640780!
registerInAccountSummary: aSummary

	aSummary registerTransferWithdrawFor: self value! !
!Withdraw methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:49:40' overrides: 50640769!
registerInAccountSummary: aSummary

	aSummary registerWithdrawFor: value! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:49:40' prior: 50640729 overrides: 50625448!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | aTransaction registerInAccountSummary: aSummary	]! !

!methodRemoval: AccountTransaction #registerInSummary: stamp: 'ic&vw 5/29/2023 20:49:40'!
registerInSummary: aSummary

	self subclassResponsibility!

!methodRemoval: Deposit #registerInSummary: stamp: 'ic&vw 5/29/2023 20:49:40'!
registerInSummary: aSummary

	aSummary registerDepositFor: value!

!methodRemoval: TransferTransaction #registerInSummary: stamp: 'ic&vw 5/29/2023 20:49:40'!
registerInSummary: aSummary

	self subclassResponsibility!

!methodRemoval: TransferDeposit #registerInSummary: stamp: 'ic&vw 5/29/2023 20:49:40'!
registerInSummary: aSummary

	aSummary registerTransferDepositFor: self value!

!methodRemoval: TransferWithdraw #registerInSummary: stamp: 'ic&vw 5/29/2023 20:49:40'!
registerInSummary: aSummary

	aSummary registerTransferWithdrawFor: self value!

!methodRemoval: Withdraw #registerInSummary: stamp: 'ic&vw 5/29/2023 20:49:40'!
registerInSummary: aSummary

	aSummary registerWithdrawFor: value!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/29/2023 20:49:47'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/29/2023 20:49:48'!
PASSED!
!Account methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:52:13'!
registerTransactionsInSummary: aSummary

	self subclassResponsibility ! !
!Portfolio methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:52:13' overrides: 50641012!
registerTransactionsInSummary: anAccountSummary 
	
	accounts do: [ :anAccount | anAccount addTransactionsInSummary: anAccountSummary ]! !
!ReceptiveAccount methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:52:14' overrides: 50641012!
registerTransactionsInSummary: aSummary

	transactions do: [:aTransaction | aTransaction registerInAccountSummary: aSummary	]! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:52:14' prior: 50639439!
summary
	
	summary := OrderedCollection new.
	
	account registerTransactionsInSummary: self.
		
	summary add: (self balanceMessage).
	
	^summary! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:52:14' prior: 50624282 overrides: 50625448!
addTransactionsInSummary: anAccountSummary 
	
	accounts do: [ :anAccount | anAccount registerTransactionsInSummary: anAccountSummary ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:52:14' prior: 50641018 overrides: 50641012!
registerTransactionsInSummary: anAccountSummary 
	
	accounts do: [ :anAccount | anAccount registerTransactionsInSummary: anAccountSummary ]! !

!methodRemoval: Account #addTransactionsInSummary: stamp: 'ic&vw 5/29/2023 20:52:14'!
addTransactionsInSummary: aSummary

	self subclassResponsibility !

!methodRemoval: Portfolio #addTransactionsInSummary: stamp: 'ic&vw 5/29/2023 20:52:14'!
addTransactionsInSummary: anAccountSummary 
	
	accounts do: [ :anAccount | anAccount registerTransactionsInSummary: anAccountSummary ]!

!methodRemoval: ReceptiveAccount #addTransactionsInSummary: stamp: 'ic&vw 5/29/2023 20:52:14'!
addTransactionsInSummary: aSummary

	transactions do: [:aTransaction | aTransaction registerInAccountSummary: aSummary	]!
!Account methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:52:22'!
registerTransactionsInTransferNet: aTransferNet 

	self subclassResponsibility ! !
!Portfolio methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:52:22' overrides: 50641077!
registerTransactionsInTransferNet: aTransferNet 
	
	accounts do: [:account | account addTransactionsInTransferNet: aTransferNet]! !
!ReceptiveAccount methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:52:23' overrides: 50641077!
registerTransactionsInTransferNet: aTransferNet 
	
	transactions do: [:aTransaction | aTransaction registerInTransferNet: aTransferNet	]
		
		
		
		
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:52:23' prior: 50625414 overrides: 50625453!
addTransactionsInTransferNet: aTransferNet 
	
	accounts do: [:account | account registerTransactionsInTransferNet: aTransferNet]! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:52:23' prior: 50639330!
net

	transferNet := 0.
	
	account registerTransactionsInTransferNet: self.
			
	^transferNet! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 20:52:23' prior: 50641083 overrides: 50641077!
registerTransactionsInTransferNet: aTransferNet 
	
	accounts do: [:account | account registerTransactionsInTransferNet: aTransferNet]! !

!methodRemoval: Account #addTransactionsInTransferNet: stamp: 'ic&vw 5/29/2023 20:52:23'!
addTransactionsInTransferNet: aTransferNet 

	self subclassResponsibility !

!methodRemoval: Portfolio #addTransactionsInTransferNet: stamp: 'ic&vw 5/29/2023 20:52:23'!
addTransactionsInTransferNet: aTransferNet 
	
	accounts do: [:account | account registerTransactionsInTransferNet: aTransferNet]!

!methodRemoval: ReceptiveAccount #addTransactionsInTransferNet: stamp: 'ic&vw 5/29/2023 20:52:23'!
addTransactionsInTransferNet: aTransferNet 
	
	transactions do: [:aTransaction | aTransaction registerInTransferNet: aTransferNet	]
		
		
		
		
!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/29/2023 20:52:29'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/29/2023 20:52:29'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:52:29'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/29/2023 20:52:29'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/29/2023 20:52:29'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/29/2023 20:52:29'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/29/2023 20:52:29'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/29/2023 20:52:29'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/29/2023 20:52:30'!
PASSED!

!methodRemoval: AccountSummary #depositMessageFor: stamp: 'ic&vw 5/29/2023 20:56:33'!
depositMessageFor: anAmount

	^ 'Depósito de ', anAmount asString!
!AccountSummary methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:56:33' prior: 50640376 overrides: 50640371!
registerDepositFor: anAmount 
	
	summary add: ( 'Depósito de ', anAmount asString)
! !

!methodRemoval: AccountSummary #transferDepositMessageFor: stamp: 'ic&vw 5/29/2023 20:56:49'!
transferDepositMessageFor: anAmount

	^ 'Entrada por transferencia de ', anAmount asString!
!AccountSummary methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:56:49' prior: 50640417 overrides: 50640411!
registerTransferDepositFor: anAmount 
	
	summary add: ( 'Entrada por transferencia de ', anAmount asString)
! !

!methodRemoval: AccountSummary #transferWithdrawMessageFor: stamp: 'ic&vw 5/29/2023 20:57:12'!
transferWithdrawMessageFor: anAmount

	^ 'Salida por transferencia de ', anAmount asString!
!AccountSummary methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:57:12' prior: 50640504 overrides: 50640498!
registerTransferWithdrawFor: anAmount 
	
	summary add: ( 'Salida por transferencia de ', anAmount asString)
! !

!methodRemoval: AccountSummary #withdrawMessageFor: stamp: 'ic&vw 5/29/2023 20:57:37'!
withdrawMessageFor: anAmount

	^ 'Extracción de ', anAmount asString!
!AccountSummary methodsFor: 'register' stamp: 'ic&vw 5/29/2023 20:57:37' prior: 50640463 overrides: 50640458!
registerWithdrawFor: anAmount

	summary add: ( 'Extracción de ', anAmount asString)! !
!PortfolioTreeFormat methodsFor: 'register' stamp: 'ic&vw 5/29/2023 21:01:58' prior: 50628511!
addPortfolio: aPortfolio

	self addName: aPortfolio name.
	indents := '    ', indents.
	
	aPortfolio addAccountsInTree: self.
	indents := indents allButLast: 4.
! !
!Account methodsFor: 'tree' stamp: 'ic&vw 5/29/2023 21:02:39'!
registerInTree: aPortfolioTreeFormat

	self subclassResponsibility ! !
!Portfolio methodsFor: 'register' stamp: 'ic&vw 5/29/2023 21:02:40' overrides: 50641371!
registerInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addPortfolio: self.
	
	! !
!ReceptiveAccount methodsFor: 'tree' stamp: 'ic&vw 5/29/2023 21:02:40' overrides: 50641371!
registerInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addReceptiveAccount: self
	
	! !
!PortfolioTreeFormat methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:02:40' prior: 50639446!
summary
	
	tree := OrderedCollection new.
	indents := ''.
	
	portfolio registerInTree: self.
	
	^tree
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:02:40' prior: 50628415!
addAccountsInTree: aPortfolioTreeFormat

	accounts do: [:anAccount |  anAccount registerInTree: aPortfolioTreeFormat].

	
	! !

!methodRemoval: Account #addInTree: stamp: 'ic&vw 5/29/2023 21:02:40'!
addInTree: aPortfolioTreeFormat

	self subclassResponsibility !

!methodRemoval: Portfolio #addInTree: stamp: 'ic&vw 5/29/2023 21:02:40'!
addInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addPortfolio: self.
	
	!

!methodRemoval: ReceptiveAccount #addInTree: stamp: 'ic&vw 5/29/2023 21:02:40'!
addInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat addReceptiveAccount: self
	
	!
!Portfolio methodsFor: 'register' stamp: 'ic&vw 5/29/2023 21:02:47'!
registerAccountsInTree: aPortfolioTreeFormat

	accounts do: [:anAccount |  anAccount registerInTree: aPortfolioTreeFormat].

	
	! !
!PortfolioTreeFormat methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:02:47' prior: 50641363!
addPortfolio: aPortfolio

	self addName: aPortfolio name.
	indents := '    ', indents.
	
	aPortfolio registerAccountsInTree: self.
	indents := indents allButLast: 4.
! !

!methodRemoval: Portfolio #addAccountsInTree: stamp: 'ic&vw 5/29/2023 21:02:47'!
addAccountsInTree: aPortfolioTreeFormat

	accounts do: [:anAccount |  anAccount registerInTree: aPortfolioTreeFormat].

	
	!
!PortfolioTreeFormat methodsFor: 'register' stamp: 'ic&vw 5/29/2023 21:03:38'!
registerName: anAccountName

	tree add: indents,anAccountName.
! !
!PortfolioTreeFormat methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:03:38' prior: 50628357!
addReceptiveAccount: aReceptiveAccount

	self registerName: aReceptiveAccount name.
! !
!PortfolioTreeFormat methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:03:38' prior: 50641425!
addPortfolio: aPortfolio

	self registerName: aPortfolio name.
	indents := '    ', indents.
	
	aPortfolio registerAccountsInTree: self.
	indents := indents allButLast: 4.
! !

!methodRemoval: PortfolioTreeFormat #addName: stamp: 'ic&vw 5/29/2023 21:03:38'!
addName: anAccountName

	tree add: indents,anAccountName.
!
!PortfolioTreeFormat methodsFor: 'register' stamp: 'ic&vw 5/29/2023 21:04:05'!
registerPortfolio: aPortfolio

	self registerName: aPortfolio name.
	indents := '    ', indents.
	
	aPortfolio registerAccountsInTree: self.
	indents := indents allButLast: 4.
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:04:06' prior: 50641376 overrides: 50641371!
registerInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat registerPortfolio: self.
	
	! !

!methodRemoval: PortfolioTreeFormat #addPortfolio: stamp: 'ic&vw 5/29/2023 21:04:06'!
addPortfolio: aPortfolio

	self registerName: aPortfolio name.
	indents := '    ', indents.
	
	aPortfolio registerAccountsInTree: self.
	indents := indents allButLast: 4.
!
!PortfolioTreeFormat methodsFor: 'register' stamp: 'ic&vw 5/29/2023 21:04:15'!
registerReceptiveAccount: aReceptiveAccount

	self registerName: aReceptiveAccount name.
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:04:15' prior: 50641382 overrides: 50641371!
registerInTree: aPortfolioTreeFormat

	aPortfolioTreeFormat registerReceptiveAccount: self
	
	! !

!methodRemoval: PortfolioTreeFormat #addReceptiveAccount: stamp: 'ic&vw 5/29/2023 21:04:15'!
addReceptiveAccount: aReceptiveAccount

	self registerName: aReceptiveAccount name.
!

----SNAPSHOT----(29 May 2023 21:06:58) CuisUniversity-5799.image priorSource: 9873458!
!TransferNet methodsFor: 'accessing' stamp: 'ic&vw 5/29/2023 21:11:19'!
summary

	transferNet := 0.
	
	account registerTransactionsInTransferNet: self.
			
	^transferNet! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:11:19' prior: 50639377!
test01TransferNetForNewAccountReturnsZero

	| transferNet |
	
	transferNet := TransferNet for: ReceptiveAccount new.
	
	self assert: 0 equals: transferNet summary.
	
	! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:11:19' prior: 50639396!
test04TransferNetIsNotAffectedByAccountWithWithdraw

	| transferNet account |
	
	account := ReceptiveAccount new.
	Withdraw register: 10 on: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet summary.
	! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:11:19' prior: 50639365!
test02TransferNetIsAffectedByAccountWithTransferDeposit

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: ReceptiveAccount new to: account. 
	
	transferNet := TransferNet for: account.
	
	self assert: 10 equals: transferNet summary.
	
	! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:11:19' prior: 50639419!
test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled

	| senderAccount receiverAccount portfolio transferNet |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	transferNet := TransferNet for: portfolio.
	
	self assert: 0 equals: transferNet summary.
	! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:11:19' prior: 50639385!
test03TransferNetIsNotAffectedByAccountWithDeposit

	| transferNet account |
	
	account := ReceptiveAccount new.
	Deposit register: 10 on: account.
	
	transferNet := TransferNet for: account.
	
	self assert: 0 equals: transferNet summary.
	
	! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/29/2023 21:11:19' prior: 50639407!
test05TransferNetIsAffectedByAccountWithTransferWithdraw

	| transferNet account |
	
	account := ReceptiveAccount new.
	Transfer register: 10 from: account to: ReceptiveAccount new. 
	
	transferNet := TransferNet for: account.
	
	self assert: -10 equals: transferNet summary.
	! !

!methodRemoval: TransferNet #net stamp: 'ic&vw 5/29/2023 21:11:19'!
net

	transferNet := 0.
	
	account registerTransactionsInTransferNet: self.
			
	^transferNet!
!AccountReport methodsFor: 'accessing' stamp: 'ic&vw 5/29/2023 21:11:37'!
summary

	self subclassResponsibility.! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/29/2023 21:11:43'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/29/2023 21:11:44'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/29/2023 21:11:44'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/29/2023 21:11:44'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/29/2023 21:11:44'!
PASSED!

----SNAPSHOT----(29 May 2023 21:11:47) CuisUniversity-5799.image priorSource: 9915445!

----SNAPSHOT----(30 May 2023 00:26:10) CuisUniversity-5799.image priorSource: 9923864!

----STARTUP---- (31 May 2023 15:12:29) as C:\Users\Ivo\Desktop\uba\inge1\cuises\cuis 4 - portfolio 2 (imagen nueva)\CuisUniversity-5799.image!


Object subclass: #PortfolioSummary
	instanceVariableNames: 'portfolio tree indents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioSummary category: 'Portfolio' stamp: 'ic&vw 5/31/2023 15:17:56'!
Object subclass: #PortfolioSummary
	instanceVariableNames: 'portfolio tree indents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

Object subclass: #PortfolioSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioSummary category: 'Portfolio' stamp: 'ic&vw 5/31/2023 15:18:07'!
Object subclass: #PortfolioSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

TestCase subclass: #PortfolioSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioSummaryTest category: 'Portfolio' stamp: 'ic&vw 5/31/2023 15:18:25'!
TestCase subclass: #PortfolioSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 15:19:16'!
test01EmptyPortfolioSummaryReturnsNameAndBalance

! !
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 15:20:12' prior: 50641817!
test01EmptyPortfolioSummaryReturnsNameAndBalance

	| portfolio |
	portfolio := Portfolio named: 'Portfolio de la familia'.
	! !
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 15:22:25' prior: 50641822!
test01EmptyPortfolioSummaryReturnsNameAndBalance

	| summary |
	
	summary := PortfolioSummary for: (Portfolio named: 'Portfolio de la familia')
	
	! !
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 15:23:23' prior: 50641829!
test01EmptyPortfolioSummaryReturnsNameAndBalance

	| summary |
	
	summary := PortfolioSummary for: (Portfolio named: 'Portfolio de la familia').
	
	self assert: (OrderedCollection with: 'Portfolio de la familia' with: '    Balance = 0') equals: summary summary! !
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 15:24:14' prior: 50641837!
test01EmptyPortfolioSummaryReturnsNameAndBalance

	| portfolioSummary |
	
	portfolioSummary := PortfolioSummary for: (Portfolio named: 'Portfolio de la familia').
	
	self assert: (OrderedCollection with: 'Portfolio de la familia' with: '    Balance = 0') equals: portfolioSummary summary! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 15:24:17'!
ERROR!
!PortfolioSummary class methodsFor: 'initialization' stamp: 'ic&vw 5/31/2023 15:24:30'!
for: aRenameMe1 
	self shouldBeImplemented.! !
!PortfolioSummary class methodsFor: 'initialization' stamp: 'ic&vw 5/31/2023 15:24:55' prior: 50641865!
for: aPortfolio 
	
	self new initializeFor: aPortfolio! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 15:24:57'!
ERROR!

!classDefinition: #PortfolioSummary category: 'Portfolio' stamp: 'ic&vw 5/31/2023 15:25:04'!
Object subclass: #PortfolioSummary
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!PortfolioSummary methodsFor: 'initialization' stamp: 'ic&vw 5/31/2023 15:25:04'!
initializeFor: aPortfolio 
	self shouldBeImplemented.
	portfolio := aPortfolio.! !
!PortfolioSummary methodsFor: 'initialization' stamp: 'ic&vw 5/31/2023 15:25:08' prior: 50641886!
initializeFor: aPortfolio 
	
	portfolio := aPortfolio.! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 15:25:17'!
ERROR!
!PortfolioSummary class methodsFor: 'summary' stamp: 'ic&vw 5/31/2023 15:25:24'!
summary
	self shouldBeImplemented.! !
!PortfolioSummary class methodsFor: 'summary' stamp: 'ic&vw 5/31/2023 15:25:28' prior: 50641901!
summary
	
	! !
!PortfolioSummary methodsFor: 'accessing' stamp: 'ic&vw 5/31/2023 15:25:58'!
summary

	! !
!PortfolioSummary methodsFor: 'accessing' stamp: 'ic&vw 5/31/2023 15:26:14' prior: 50641909!
summary

	! !

Object subclass: #PortfolioSummary
	instanceVariableNames: 'portfolio tree indents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioSummary category: 'Portfolio' stamp: 'ic&vw 5/31/2023 15:26:40'!
Object subclass: #PortfolioSummary
	instanceVariableNames: 'portfolio tree indents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!PortfolioSummary methodsFor: 'accessing' stamp: 'ic&vw 5/31/2023 15:27:06' prior: 50641913!
summary

	tree := OrderedCollection new.
	indents := ''.
	
	portfolio registerInTree: self.
	
	^tree! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 15:27:46'!
registerPortfolio: aPortfolio

	self registerName: aPortfolio name.
	indents := '    ', indents.
	
	aPortfolio registerAccountsInTree: self.
	indents := indents allButLast: 4.
	
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 15:27:59' prior: 50641935!
registerPortfolio: aPortfolio

	self registerName: aPortfolio name.
	indents := '    ', indents.
	
	"aPortfolio registerAccountsInTree: self."
	indents := indents allButLast: 4.
	
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 15:28:09' prior: 50641944!
registerPortfolio: aPortfolio

	self registerName: aPortfolio name.
	"indents := '    ', indents.
	
	aPortfolio registerAccountsInTree: self.
	indents := indents allButLast: 4."
	
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 15:28:27'!
registerName: anAccountName

	tree add: indents,anAccountName.
! !
!AccountSummary methodsFor: 'messages' stamp: 'ic&vw 5/31/2023 15:30:21'!
balanceMessageFor: anAccount

	^ 'Balance = ', anAccount balance asString! !

!methodRemoval: AccountSummary #balanceMessage stamp: 'ic&vw 5/31/2023 15:30:23'!
balanceMessage

	^ 'Balance = ', account balance asString!
!AccountSummary methodsFor: 'accessing' stamp: 'ic&vw 5/31/2023 15:30:43' prior: 50641034 overrides: 50641596!
summary
	
	summary := OrderedCollection new.
	
	account registerTransactionsInSummary: self.
			
	^summary! !
!AccountSummary methodsFor: 'messages' stamp: 'ic&vw 5/31/2023 15:31:05'!
balanceMessage

	^ 'Balance = ', account balance asString! !

!methodRemoval: AccountSummary #balanceMessageFor: stamp: 'ic&vw 5/31/2023 15:31:10'!
balanceMessageFor: anAccount

	^ 'Balance = ', anAccount balance asString!
!AccountSummary methodsFor: 'accessing' stamp: 'ic&vw 5/29/2023 20:52:14' prior: 50641978 overrides: 50641596!
summary
	
	summary := OrderedCollection new.
	
	account registerTransactionsInSummary: self.
		
	summary add: (self balanceMessage).
	
	^summary! !
!PortfolioSummary methodsFor: 'messages' stamp: 'ic&vw 5/31/2023 15:31:34'!
balanceMessageFor: anAccount

	^ 'Balance = ', anAccount balance asString! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 15:31:51' prior: 50641953!
registerPortfolio: aPortfolio

	self registerName: aPortfolio name.
	"indents := '    ', indents.
	
	aPortfolio registerAccountsInTree: self.
	indents := indents allButLast: 4."
	self balanceMessageFor: aPortfolio.
	
! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 15:32:02'!
FAILURE!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 15:32:02'!
FAILURE!
!PortfolioSummary class methodsFor: 'initialization' stamp: 'ic&vw 5/31/2023 15:32:16' prior: 50641870!
for: aPortfolio 
	
	^self new initializeFor: aPortfolio! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 15:32:19'!
FAILURE!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 15:32:19'!
FAILURE!
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 15:34:53'!
registerMessage: aMessage

	tree add: indents,aMessage.
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 15:35:23' prior: 50641962!
registerName: anAccountName

	self registerMessage: anAccountName .
! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 15:35:24'!
FAILURE!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 15:35:24'!
FAILURE!
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 15:35:48' prior: 50642008!
registerPortfolio: aPortfolio

	self registerName: aPortfolio name.
	"indents := '    ', indents.
	
	aPortfolio registerAccountsInTree: self.
	indents := indents allButLast: 4."
	self registerMessage: (self balanceMessageFor: aPortfolio).
	
! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 15:35:49'!
FAILURE!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 15:35:49'!
FAILURE!
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 15:36:10' prior: 50642059!
registerPortfolio: aPortfolio

	self registerName: aPortfolio name.
	indents := '    ', indents.
	
	"aPortfolio registerAccountsInTree: self."
	self registerMessage: (self balanceMessageFor: aPortfolio).
	indents := indents allButLast: 4.
	
! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 15:36:11'!
PASSED!

!methodRemoval: PortfolioSummary #registerName: stamp: 'ic&vw 5/31/2023 15:37:28'!
registerName: anAccountName

	self registerMessage: anAccountName .
!
!PortfolioTreeFormat methodsFor: 'register' stamp: 'ic&vw 5/31/2023 15:37:48'!
registerMessage: anAccountName

	tree add: indents,anAccountName.
! !
!PortfolioTreeFormat methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/31/2023 15:37:48' prior: 50641466!
registerPortfolio: aPortfolio

	self registerMessage: aPortfolio name.
	indents := '    ', indents.
	
	aPortfolio registerAccountsInTree: self.
	indents := indents allButLast: 4.
! !
!PortfolioTreeFormat methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/31/2023 15:37:48' prior: 50641490!
registerReceptiveAccount: aReceptiveAccount

	self registerMessage: aReceptiveAccount name.
! !
!PortfolioSummary methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/31/2023 15:37:48' prior: 50642078!
registerPortfolio: aPortfolio

	self registerMessage: aPortfolio name.
	indents := '    ', indents.
	
	"aPortfolio registerAccountsInTree: self."
	self registerMessage: (self balanceMessageFor: aPortfolio).
	indents := indents allButLast: 4.
	
! !

!methodRemoval: PortfolioTreeFormat #registerName: stamp: 'ic&vw 5/31/2023 15:37:48'!
registerName: anAccountName

	tree add: indents,anAccountName.
!
!PortfolioTreeFormat methodsFor: 'register' stamp: 'ic&vw 5/31/2023 15:37:55' prior: 50642097!
registerMessage: aMessage

	tree add: indents,aMessage.
! !
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 15:44:23'!
test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary

	| portfolioSummary |
	
	portfolioSummary := PortfolioSummary for: (Portfolio named: 'Portfolio de la familia').
	
	self assert: (OrderedCollection with: 'Portfolio de la familia' with: '    Balance = 0') equals: portfolioSummary summary! !
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 15:44:54' prior: 50642141!
test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary

	| portfolioSummary portfolio |
	
	portfolio := Portfolio named: 'Portfolio de la familia'.
	
	portfolioSummary := PortfolioSummary for: portfolio.
	
	
	
	self assert: (OrderedCollection with: 'Portfolio de la familia' with: '    Balance = 0') equals: portfolioSummary summary! !
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 15:45:31' prior: 50642154!
test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary

	| portfolioSummary portfolio account |
	
	portfolio := Portfolio named: 'Portfolio de la familia'.
	
	account := ReceptiveAccount named: 'Cuenta Mia'.
	
	portfolioSummary := PortfolioSummary for: portfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de la familia' with: '    Balance = 0') equals: portfolioSummary summary! !
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 15:50:20' prior: 50642168!
test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary

	| portfolioSummary portfolio account |
	
	portfolio := Portfolio named: 'Portfolio de la familia'.
	
	account := ReceptiveAccount named: 'Cuenta Mia'.
	Deposit register: 100 on: account.
	
	portfolioSummary := PortfolioSummary for: portfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de la familia' with: '    Balance = 0') equals: portfolioSummary summary! !
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 15:58:32'!
portfolioWithAccountWithDeposit

	^OrderedCollection with: 'Portfolio de la familia' 
					    with: '    Cuenta Mia' 
					    with: '        Depósito por 100' 
					    with: '        Balance = 100'
					    with: '    Balance = 100'! !
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 15:59:52' prior: 50642184!
test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary

	| portfolioSummary portfolio account |
	
	portfolio := Portfolio named: 'Portfolio de la familia'.
	
	account := ReceptiveAccount named: 'Cuenta Mia'.
	Deposit register: 100 on: account.
	
	portfolioSummary := PortfolioSummary for: portfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
					    		     with: '    Cuenta Mia' 
					    		     with: '        Depósito por 100' 
					    		     with: '        Balance = 100'
					                     with: '    Balance = 100')
	     equals: portfolioSummary summary! !

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:00:01'!
FAILURE!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:00:01'!
FAILURE!
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:00:20' prior: 50642120!
registerPortfolio: aPortfolio

	self registerMessage: aPortfolio name.
	indents := '    ', indents.
	
	aPortfolio registerAccountsInTree: self.
	self registerMessage: (self balanceMessageFor: aPortfolio).
	indents := indents allButLast: 4.
	
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:03:58'!
registerReceptiveAccount: aReceptiveAccount

	self registerMessage: aReceptiveAccount name.
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:04:14' prior: 50642255!
registerReceptiveAccount: aReceptiveAccount

	self registerMessage: aReceptiveAccount name.
	
! !
!PortfolioSummary methodsFor: 'indentation' stamp: 'ic&vw 5/31/2023 16:04:37'!
addIndentation

	! !
!PortfolioSummary methodsFor: 'indentation' stamp: 'ic&vw 5/31/2023 16:04:45' prior: 50642267!
addIndentation

	indents := '    ', indents.! !
!PortfolioSummary methodsFor: 'indentation' stamp: 'ic&vw 5/31/2023 16:04:53'!
removeIndentation

	! !
!PortfolioSummary methodsFor: 'indentation' stamp: 'ic&vw 5/31/2023 16:05:06' prior: 50642275!
removeIndentation

	indents := indents allButLast: 4.
	! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:05:27' prior: 50642244!
registerPortfolio: aPortfolio

	self registerMessage: aPortfolio name.
	self addIndentation.
	
	aPortfolio registerAccountsInTree: self.
	self registerMessage: (self balanceMessageFor: aPortfolio).
	self removeIndentation.
	
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:07:26' prior: 50642261!
registerReceptiveAccount: aReceptiveAccount

	| accountSummary |
	self registerMessage: aReceptiveAccount name.
	self addIndentation.
	
	accountSummary := AccountSummary for: aReceptiveAccount.
	
	tree addAllLast: accountSummary.
	
	self removeIndentation.
	
! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:07:32'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:07:32'!
FAILURE!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:07:32'!
FAILURE!

!methodRemoval: PortfolioSummaryTest #portfolioWithAccountWithDeposit stamp: 'ic&vw 5/31/2023 16:08:21'!
portfolioWithAccountWithDeposit

	^OrderedCollection with: 'Portfolio de la familia' 
					    with: '    Cuenta Mia' 
					    with: '        Depósito por 100' 
					    with: '        Balance = 100'
					    with: '    Balance = 100'!
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:08:35' prior: 50642212!
test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary

	| portfolioSummary portfolio account |
	
	account := ReceptiveAccount named: 'Cuenta Mia'.
	portfolio := Portfolio named: 'Portfolio de la familia' with: account.
	
	Deposit register: 100 on: account.
	
	portfolioSummary := PortfolioSummary for: portfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
					    		     with: '    Cuenta Mia' 
					    		     with: '        Depósito por 100' 
					    		     with: '        Balance = 100'
					                     with: '    Balance = 100')
	     equals: portfolioSummary summary! !

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:08:38'!
ERROR!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:08:38'!
ERROR!
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:08:51' prior: 50642295!
registerReceptiveAccount: aReceptiveAccount

	| accountSummary |
	self registerMessage: aReceptiveAccount name.
	self addIndentation.
	
	accountSummary := AccountSummary for: aReceptiveAccount.
	
	tree addAllLast: accountSummary summary.
	
	self removeIndentation.
	
! !

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:09:03'!
FAILURE!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:09:03'!
FAILURE!
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:09:47' prior: 50642362!
registerReceptiveAccount: aReceptiveAccount

	| accountSummary |
	self registerMessage: aReceptiveAccount name.
	self addIndentation.
	
	accountSummary := AccountSummary for: aReceptiveAccount.
	accountSummary addAllFirst: indents.
	
	tree addAllLast: accountSummary summary.
	
	self removeIndentation.
	
! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:09:50'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:09:50'!
ERROR!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:09:50'!
ERROR!
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:10:03' prior: 50642383!
registerReceptiveAccount: aReceptiveAccount

	| accountSummary |
	self registerMessage: aReceptiveAccount name.
	self addIndentation.
	
	accountSummary := (AccountSummary for: aReceptiveAccount) summary.
	accountSummary addAllFirst: indents.
	
	tree addAllLast: accountSummary summary.
	
	self removeIndentation.
	
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:10:05' prior: 50642409!
registerReceptiveAccount: aReceptiveAccount

	| accountSummary |
	self registerMessage: aReceptiveAccount name.
	self addIndentation.
	
	accountSummary := (AccountSummary for: aReceptiveAccount) summary.
	accountSummary addAllFirst: indents.
	
	tree addAllLast: accountSummary.
	
	self removeIndentation.
	
! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:10:06'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:10:06'!
FAILURE!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:10:06'!
FAILURE!
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:11:10' prior: 50642422!
registerReceptiveAccount: aReceptiveAccount

	| accountSummary |
	self registerMessage: aReceptiveAccount name.
	self addIndentation.
	
	accountSummary := (AccountSummary for: aReceptiveAccount) summary.
	self addIndentationIn: accountSummary.
	
	tree addAllLast: accountSummary.
	
	self removeIndentation.
	
! !
!PortfolioSummary methodsFor: 'indentation' stamp: 'ic&vw 5/31/2023 16:11:26'!
addIndentationIn: aSummary

	! !
!PortfolioSummary methodsFor: 'indentation' stamp: 'ic&vw 5/31/2023 16:14:06' prior: 50642461!
addIndentationIn: aSummary

	aSummary collect: [:aSummaryLine | indents,aSummaryLine]! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:14:07'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:14:07'!
FAILURE!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:14:07'!
FAILURE!
!PortfolioSummary methodsFor: 'indentation' stamp: 'ic&vw 5/31/2023 16:14:26' prior: 50642465!
addIndentationIn: aSummary

	^aSummary collect: [:aSummaryLine | indents,aSummaryLine]! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:14:43' prior: 50642448!
registerReceptiveAccount: aReceptiveAccount

	| accountSummary |
	self registerMessage: aReceptiveAccount name.
	self addIndentation.
	
	accountSummary := (AccountSummary for: aReceptiveAccount) summary.
	
	tree addAllLast: (self addIndentationIn: accountSummary).
	
	self removeIndentation.
	
! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:14:45'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:14:45'!
FAILURE!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:14:45'!
FAILURE!
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:15:06' prior: 50642330!
test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary

	| portfolioSummary portfolio account |
	
	account := ReceptiveAccount named: 'Cuenta Mia'.
	portfolio := Portfolio named: 'Portfolio de la familia' with: account.
	
	Deposit register: 100 on: account.
	
	portfolioSummary := PortfolioSummary for: portfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
					    		     with: '    Cuenta Mia' 
					    		     with: '        Depósito de 100' 
					    		     with: '        Balance = 100'
					                     with: '    Balance = 100')
	     equals: portfolioSummary summary! !

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:15:07'!
PASSED!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:15:07'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:15:07'!
PASSED!
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:17:05'!
portfolioWithAccountsAndTransactions! !
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:17:11'!
portfolioWithAccountsAndAllPossibleTransactions! !

!methodRemoval: PortfolioSummaryTest #portfolioWithAccountsAndTransactions stamp: 'ic&vw 5/31/2023 16:17:13'!
portfolioWithAccountsAndTransactions!
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:17:18' prior: 50642557!
portfolioWithAccountsAndAllPossibleTransactions

! !
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:17:50' prior: 50642567!
portfolioWithAccountsAndAllPossibleTransactions

	| portfolioSummary |
	portfolioSummary := OrderedCollection with: 'Portfolio de la familia'.
	! !
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:17:58'!
portfolioSummaryWithAccountsAndAllPossibleTransactions

	| portfolioSummary |
	portfolioSummary := OrderedCollection with: 'Portfolio de la familia'.
	! !

!methodRemoval: PortfolioSummaryTest #portfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:17:58'!
portfolioWithAccountsAndAllPossibleTransactions

	| portfolioSummary |
	portfolioSummary := OrderedCollection with: 'Portfolio de la familia'.
	!
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:19:50' prior: 50642580!
portfolioSummaryWithAccountsAndAllPossibleTransactions

	| portfolioSummary |
	portfolioSummary := OrderedCollection with: 'Portfolio de la familia'.
	portfolioSummary add: '    Cuenta mia'.
	portfolioSummary add: '        Depósito por 100'.
	portfolioSummary add: '        Extracción por 50'.
	portfolioSummary add: '        Balance = 50'.! !
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:23:52' prior: 50642597!
portfolioSummaryWithAccountsAndAllPossibleTransactions

	| portfolioSummary |
	portfolioSummary := OrderedCollection with: 'Portfolio de la familia'.
	portfolioSummary add: '    Cuenta mia'.
	portfolioSummary add: '        Depósito por 100'.
	portfolioSummary add: '        Extracción por 50'.
	portfolioSummary add: '        Balance = 50'.
	portfolioSummary add: '        Salida por transferencia de 100'.
	! !
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:24:06' prior: 50642612!
portfolioSummaryWithAccountsAndAllPossibleTransactions

	| portfolioSummary |
	portfolioSummary := OrderedCollection with: 'Portfolio de la familia'.
	portfolioSummary add: '    Cuenta mia'.
	portfolioSummary add: '        Depósito por 100'.
	portfolioSummary add: '        Extracción por 50'.
	portfolioSummary add: '        Salida por transferencia de 20'.
	portfolioSummary add: '        Balance = 30'.
	! !
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:25:33' prior: 50642629!
portfolioSummaryWithAccountsAndAllPossibleTransactions

	| portfolioSummary |
	portfolioSummary := OrderedCollection new.
	portfolioSummary add: 'Portfolio de la familia'.
	portfolioSummary add: '    Cuenta Mia'.
	portfolioSummary add: '        Depósito por 100'.
	portfolioSummary add: '        Extracción por 50'.
	portfolioSummary add: '        Salida por transferencia de 20'.
	portfolioSummary add: '        Balance = 30'.
	portfolioSummary add: '    Portfolio de hijos'.
	
	! !
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:27:40' prior: 50642646!
portfolioSummaryWithAccountsAndAllPossibleTransactions

	| portfolioSummary |
	portfolioSummary := OrderedCollection new.
	portfolioSummary add: 'Portfolio de la familia'.
	portfolioSummary add: '    Cuenta Mia'.
	portfolioSummary add: '        Depósito por 100'.
	portfolioSummary add: '        Extracción por 50'.
	portfolioSummary add: '        Salida por transferencia de 20'.
	portfolioSummary add: '        Balance = 30'.
	portfolioSummary add: '    Portfolio de hijos'.
	portfolioSummary add: '        Cuenta de Juan'.
	portfolioSummary add: '            Entrada por transferencia de 20'.
	portfolioSummary add: '            Balance = 20'.
	portfolioSummary add: '        Balance = 20'.
	portfolioSummary add: '    Balance = 50'.

	! !
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:28:55'!
test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions

	| portfolioSummary portfolio account |
	
	account := ReceptiveAccount named: 'Cuenta Mia'.
	portfolio := Portfolio named: 'Portfolio de la familia' with: account.
	
	Deposit register: 100 on: account.
	
	portfolioSummary := PortfolioSummary for: portfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
					    		     with: '    Cuenta Mia' 
					    		     with: '        Depósito de 100' 
					    		     with: '        Balance = 100'
					                     with: '    Balance = 100')
	     equals: portfolioSummary summary! !

!methodRemoval: PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary stamp: 'ic&vw 5/31/2023 16:28:55'!
test02SummaryOfPortfolioWithAccountWithDepositReturnsAccountSummary

	| portfolioSummary portfolio account |
	
	account := ReceptiveAccount named: 'Cuenta Mia'.
	portfolio := Portfolio named: 'Portfolio de la familia' with: account.
	
	Deposit register: 100 on: account.
	
	portfolioSummary := PortfolioSummary for: portfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
					    		     with: '    Cuenta Mia' 
					    		     with: '        Depósito de 100' 
					    		     with: '        Balance = 100'
					                     with: '    Balance = 100')
	     equals: portfolioSummary summary!
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:29:11' prior: 50642691!
test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions

	| portfolioSummary portfolio account |
	
	account := ReceptiveAccount named: 'Cuenta Mia'.
	portfolio := Portfolio named: 'Portfolio de la familia' with: account.
	
	Deposit register: 100 on: account.
	
	portfolioSummary := PortfolioSummary for: portfolio.
	
	
	self assert: self portfolioSummaryWithAccountsAndAllPossibleTransactions
	     equals: portfolioSummary summary! !
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:37:00' prior: 50642665!
portfolioSummaryWithAccountsAndAllPossibleTransactions

	| portfolioSummary |
	portfolioSummary := OrderedCollection new.
	portfolioSummary add: 'Portfolio de la familia'.
	portfolioSummary add: '    Cuenta Mia'.
	portfolioSummary add: '        Depósito por 100'.
	portfolioSummary add: '        Extracción por 50'.
	portfolioSummary add: '        Salida por transferencia de 20'.
	portfolioSummary add: '        Balance = 30'.
	portfolioSummary add: '    Portfolio de hijos'.
	portfolioSummary add: '        Cuenta de Juan'.
	portfolioSummary add: '            Entrada por transferencia de 20'.
	portfolioSummary add: '            Depósito por 15'.
	portfolioSummary add: '            Balance = 35'.
	portfolioSummary add: '        Balance = 20'.
	portfolioSummary add: '    Balance = 50'.

	! !
!PortfolioSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:37:33' prior: 50642738!
test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions

	| johnsAccount familyPortfolio miaAccount sonsPortfolio portfolioSummary |
	
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	sonsPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	miaAccount := ReceptiveAccount named: 'Cuenta Mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: miaAccount with: sonsPortfolio.
	
		
	Deposit register: 100 on: miaAccount.
	Withdraw register: 50 on: miaAccount.
	Transfer register: 20 from: miaAccount to: johnsAccount.
	Deposit register: 15 on: johnsAccount.
	
	
	portfolioSummary := PortfolioSummary for: familyPortfolio.
	
	
	self assert: self portfolioSummaryWithAccountsAndAllPossibleTransactions
	     equals: portfolioSummary summary! !

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:37:38'!
FAILURE!
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:37:54' prior: 50642756!
portfolioSummaryWithAccountsAndAllPossibleTransactions

	| portfolioSummary |
	portfolioSummary := OrderedCollection new.
	portfolioSummary add: 'Portfolio de la familia'.
	portfolioSummary add: '    Cuenta Mia'.
	portfolioSummary add: '        Depósito por 100'.
	portfolioSummary add: '        Extracción por 50'.
	portfolioSummary add: '        Salida por transferencia de 20'.
	portfolioSummary add: '        Balance = 30'.
	portfolioSummary add: '    Portfolio de hijos'.
	portfolioSummary add: '        Cuenta de Juan'.
	portfolioSummary add: '            Entrada por transferencia de 20'.
	portfolioSummary add: '            Depósito por 15'.
	portfolioSummary add: '            Balance = 35'.
	portfolioSummary add: '        Balance = 20'.
	portfolioSummary add: '    Balance = 50'.
	^portfolioSummary
	! !

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:37:56'!
FAILURE!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:37:56'!
FAILURE!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:39:57' prior: 50639531!
test02AccountWithDepositHasDepositAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Depósito por 100' with: 'Balance = 100') equals: accountSummary summary.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:40:02' prior: 50639579!
test03AccountWithWithdrawHasWithdrawAndBalance

	| accountSummary account |
	
	account := ReceptiveAccount new.
	Withdraw register: 100 on: account.
	
	accountSummary := AccountSummary for: account.
	
	self assert: (OrderedCollection with: 'Extracción por 100' with: 'Balance = -100') equals: accountSummary summary.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:40:06' prior: 50639633!
test04AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: receiverAccount.
	
	self assert: (OrderedCollection with: 'Entrada por transferencia por 100' with: 'Balance = 100') equals: accountSummary summary.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:40:19' prior: 50642881!
test04AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: receiverAccount.
	
	self assert: (OrderedCollection with: 'Entrada de transferencia por 100' with: 'Balance = 100') equals: accountSummary summary.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:40:23' prior: 50639478!
test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Salida de transferencia de 100' with: 'Balance = -100') equals: accountSummary summary.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:40:33' prior: 50639612!
test06PortfolioWithAccountsShowTransferTwice

	| portfolioSummary senderAccount receiverAccount portfolio |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	portfolioSummary := AccountSummary for: portfolio.
		
	self assert: (OrderedCollection with: 'Salida de transferencia de 100' with: 'Entrada por transferencia de 100' with: 'Balance = 0') 
	      equals: portfolioSummary summary.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:40:38' prior: 50642935!
test06PortfolioWithAccountsShowTransferTwice

	| portfolioSummary senderAccount receiverAccount portfolio |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	portfolio := Portfolio with: senderAccount with: receiverAccount.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	portfolioSummary := AccountSummary for: portfolio.
		
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Entrada por transferencia de 100' with: 'Balance = 0') 
	      equals: portfolioSummary summary.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:40:42' prior: 50642917!
test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: senderAccount.
	
	self assert: (OrderedCollection with: 'Salida por transferencia de 100' with: 'Balance = -100') equals: accountSummary summary.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:41:02' prior: 50642899!
test04AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: receiverAccount.
	
	self assert: (OrderedCollection with: 'Entrada por transferencia por 100' with: 'Balance = 100') equals: accountSummary summary.! !

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/31/2023 16:41:11'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/31/2023 16:41:11'!
FAILURE!
!AccountSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:41:32' prior: 50641319 overrides: 50640371!
registerDepositFor: anAmount 
	
	summary add: ( 'Depósito por ', anAmount asString)
! !
!AccountSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:41:40' prior: 50641357 overrides: 50640458!
registerWithdrawFor: anAmount

	summary add: ( 'Extracción por ', anAmount asString)! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:41:46'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:41:46'!
FAILURE!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:41:46'!
FAILURE!
!PortfolioSummaryTest methodsFor: 'portfoliosSummaries' stamp: 'ic&vw 5/31/2023 16:42:13' prior: 50642817!
portfolioSummaryWithAccountsAndAllPossibleTransactions

	| portfolioSummary |
	portfolioSummary := OrderedCollection new.
	portfolioSummary add: 'Portfolio de la familia'.
	portfolioSummary add: '    Cuenta Mia'.
	portfolioSummary add: '        Depósito por 100'.
	portfolioSummary add: '        Extracción por 50'.
	portfolioSummary add: '        Salida por transferencia de 20'.
	portfolioSummary add: '        Balance = 30'.
	portfolioSummary add: '    Portfolio de hijos'.
	portfolioSummary add: '        Cuenta de Juan'.
	portfolioSummary add: '            Entrada por transferencia de 20'.
	portfolioSummary add: '            Depósito por 15'.
	portfolioSummary add: '            Balance = 35'.
	portfolioSummary add: '        Balance = 35'.
	portfolioSummary add: '    Balance = 65'.
	^portfolioSummary
	! !

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:42:15'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:42:15'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/31/2023 16:42:20'!
FAILURE!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/31/2023 16:42:20'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/31/2023 16:42:20'!
FAILURE!
!AccountSummaryTest methodsFor: 'tests' stamp: 'ic&vw 5/31/2023 16:42:40' prior: 50642995!
test04AccountWithTransferDespositHasTransferDespositAndBalance

	| accountSummary senderAccount receiverAccount |
	
	senderAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: senderAccount to: receiverAccount.
	
	accountSummary := AccountSummary for: receiverAccount.
	
	self assert: (OrderedCollection with: 'Entrada por transferencia de 100' with: 'Balance = 100') equals: accountSummary summary.! !

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/31/2023 16:42:42'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/31/2023 16:42:48'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/31/2023 16:42:48'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/31/2023 16:42:48'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/31/2023 16:42:48'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/31/2023 16:42:48'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/31/2023 16:42:48'!
PASSED!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/31/2023 16:42:49'!
PASSED!

----SNAPSHOT----(31 May 2023 16:42:56) CuisUniversity-5799.image priorSource: 9923952!

TestCase subclass: #PortfolioReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioReport category: 'Portfolio' stamp: 'ic&vw 5/31/2023 16:50:06'!
TestCase subclass: #PortfolioReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

PortfolioReport subclass: #PortfolioSummary
	instanceVariableNames: 'portfolio tree indents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioSummary category: 'Portfolio' stamp: 'ic&vw 5/31/2023 16:50:14'!
PortfolioReport subclass: #PortfolioSummary
	instanceVariableNames: 'portfolio tree indents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

PortfolioReport subclass: #PortfolioTreeFormat
	instanceVariableNames: 'portfolio tree indents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioTreeFormat category: 'Portfolio' stamp: 'ic&vw 5/31/2023 16:50:18'!
PortfolioReport subclass: #PortfolioTreeFormat
	instanceVariableNames: 'portfolio tree indents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!PortfolioTreeFormat methodsFor: 'indentation' stamp: 'ic&vw 5/31/2023 16:51:09'!
addIndentation

	indents := '    ', indents.! !
!PortfolioTreeFormat methodsFor: 'indentation' stamp: 'ic&vw 5/31/2023 16:51:18'!
removeIndentation

	indents := indents allButLast: 4.
	! !
!PortfolioTreeFormat methodsFor: 'register' stamp: 'ic&vw 5/31/2023 16:51:53' prior: 50642103!
registerPortfolio: aPortfolio

	self registerMessage: aPortfolio name.
	self addIndentation.
	
	aPortfolio registerAccountsInTree: self.
	self removeIndentation.
! !

PortfolioReport subclass: #PortfolioSummary
	instanceVariableNames: 'portfolio tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioSummary category: 'Portfolio' stamp: 'ic&vw 5/31/2023 16:52:08'!
PortfolioReport subclass: #PortfolioSummary
	instanceVariableNames: 'portfolio tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

PortfolioReport subclass: #PortfolioTreeFormat
	instanceVariableNames: 'portfolio tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioTreeFormat category: 'Portfolio' stamp: 'ic&vw 5/31/2023 16:52:11'!
PortfolioReport subclass: #PortfolioTreeFormat
	instanceVariableNames: 'portfolio tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

TestCase subclass: #PortfolioReport
	instanceVariableNames: 'indents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioReport category: 'Portfolio' stamp: 'ic&vw 5/31/2023 16:52:17'!
TestCase subclass: #PortfolioReport
	instanceVariableNames: 'indents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!
!PortfolioReport methodsFor: 'indentations' stamp: 'ic&vw 5/31/2023 16:53:48'!
addIndentation

	indents := '    ', indents.! !
!PortfolioReport methodsFor: 'indentations' stamp: 'ic&vw 5/31/2023 16:53:57'!
removeIndentation

	indents := indents allButLast: 4.
	! !

!methodRemoval: PortfolioSummary #removeIndentation stamp: 'ic&vw 5/31/2023 16:54:06'!
removeIndentation

	indents := indents allButLast: 4.
	!

!methodRemoval: PortfolioSummary #addIndentation stamp: 'ic&vw 5/31/2023 16:54:08'!
addIndentation

	indents := '    ', indents.!

!methodRemoval: PortfolioTreeFormat #addIndentation stamp: 'ic&vw 5/31/2023 16:54:16'!
addIndentation

	indents := '    ', indents.!

!methodRemoval: PortfolioTreeFormat #removeIndentation stamp: 'ic&vw 5/31/2023 16:54:16'!
removeIndentation

	indents := indents allButLast: 4.
	!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/31/2023 16:54:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/31/2023 16:54:20'!
PASSED!

----SNAPSHOT----(31 May 2023 16:54:23) CuisUniversity-5799.image priorSource: 9978187!

----SNAPSHOT----(31 May 2023 16:54:54) CuisUniversity-5799.image priorSource: 9987841!

PortfolioReport subclass: #PortfolioTreeFormat
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioTreeFormat category: 'Portfolio' stamp: 'ic&vw 5/31/2023 16:56:02'!
PortfolioReport subclass: #PortfolioTreeFormat
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

PortfolioReport subclass: #PortfolioSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioSummary category: 'Portfolio' stamp: 'ic&vw 5/31/2023 16:56:06'!
PortfolioReport subclass: #PortfolioSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

TestCase subclass: #PortfolioReport
	instanceVariableNames: 'indents portfolio tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!classDefinition: #PortfolioReport category: 'Portfolio' stamp: 'ic&vw 5/31/2023 16:56:09'!
TestCase subclass: #PortfolioReport
	instanceVariableNames: 'indents portfolio tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio'!

!methodRemoval: PortfolioSummary class #summary stamp: 'ic&vw 5/31/2023 16:56:19'!
summary
	
	!

----SNAPSHOT----(31 May 2023 16:56:54) CuisUniversity-5799.image priorSource: 9987929!
!PortfolioTreeFormat class methodsFor: 'initialization' stamp: 'ic&vw 5/31/2023 16:57:01'!
for: aPortfolio 
	
	^self new initializeOn: aPortfolio.! !
!PortfolioTreeFormatTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/31/2023 16:57:01' prior: 50639593!
test02PrintPortfolioNameAndAccountWithOneIndentation

	| childrenPortfolio johnsAccount treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	treeFormat := PortfolioTreeFormat for: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' 
							     with: (self formatWithOneIndentation: 'Cuenta de Juan'	)
			   ) equals: treeFormat summary! !
!PortfolioTreeFormatTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/31/2023 16:57:01' prior: 50639545!
test05PrintPortfolioWithIndentationGoingUpAndDown

	| childrenPortfolio familyPortfolio treeFormat dadAccount momAccount sonAccount |
	
	sonAccount  := ReceptiveAccount named: 'Cuenta del hijo'.
	dadAccount  := ReceptiveAccount named: 'Cuenta del padre'.
	momAccount := ReceptiveAccount named: 'Cuenta de la madre'.
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: sonAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: dadAccount with: childrenPortfolio with: momAccount.
	treeFormat := PortfolioTreeFormat for: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
							     with: (self formatWithOneIndentation: 'Cuenta del padre'	)
							     with: (self formatWithOneIndentation: 'Portfolio de hijos'	)
							     with: (self formatWithTwoIndentations: 'Cuenta del hijo'	)
							     with: (self formatWithOneIndentation: 'Cuenta de la madre'	)
			   ) 
	
	equals: treeFormat summary! !
!PortfolioTreeFormatTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/31/2023 16:57:01' prior: 50639651!
test01PrintPortfolioNameInEmptyPortfolio

	| childrenPortfolio treeFormat |
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	treeFormat := PortfolioTreeFormat for: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: (treeFormat summary).! !
!PortfolioTreeFormatTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/31/2023 16:57:01' prior: 50639453!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat for: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
							     with: (self formatWithOneIndentation: 'Portfolio de hijos'	) 
							     with: (self formatWithTwoIndentations: 'Cuenta de Juan'	)
			   ) equals: treeFormat summary! !
!PortfolioTreeFormatTest methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/31/2023 16:57:01' prior: 50639496!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation

	| childrenPortfolio johnsAccount angiesAccount treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount  := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	treeFormat := PortfolioTreeFormat for: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' 
	  					             with: (self formatWithOneIndentation: 'Cuenta de Juan'	) 
							     with: (self formatWithOneIndentation: 'Cuenta de Angeles'	)
			   ) equals: treeFormat summary ! !

!methodRemoval: PortfolioTreeFormat class #on: stamp: 'ic&vw 5/31/2023 16:57:01'!
on: aPortfolio 
	
	^self new initializeOn: aPortfolio.!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/31/2023 16:57:07'!
PASSED!
!PortfolioReport class methodsFor: 'initialization' stamp: 'ic&vw 5/31/2023 16:57:15'!
for: aPortfolio 
	
	^self new initializeOn: aPortfolio.! !

!methodRemoval: PortfolioTreeFormat class #for: stamp: 'ic&vw 5/31/2023 16:57:15'!
for: aPortfolio 
	
	^self new initializeOn: aPortfolio.!

!methodRemoval: PortfolioSummary class #for: stamp: 'ic&vw 5/31/2023 16:57:28'!
for: aPortfolio 
	
	^self new initializeFor: aPortfolio!
!PortfolioTreeFormat methodsFor: 'initialization' stamp: 'ic&vw 5/31/2023 16:57:59'!
initializeFor: aPortfolio 
	
	portfolio := aPortfolio.! !
!PortfolioReport class methodsFor: 'as yet unclassified' stamp: 'ic&vw 5/31/2023 16:57:59' prior: 50644124!
for: aPortfolio 
	
	^self new initializeFor: aPortfolio.! !

!methodRemoval: PortfolioTreeFormat #initializeOn: stamp: 'ic&vw 5/31/2023 16:57:59'!
initializeOn: aPortfolio 
	
	portfolio := aPortfolio.!
!PortfolioReport methodsFor: 'initialization' stamp: 'ic&vw 5/31/2023 16:58:40'!
initializeFor: aPortfolio 
	
	portfolio := aPortfolio.! !

!methodRemoval: PortfolioSummary #initializeFor: stamp: 'ic&vw 5/31/2023 16:58:40'!
initializeFor: aPortfolio 
	
	portfolio := aPortfolio.!

!methodRemoval: PortfolioTreeFormat #initializeFor: stamp: 'ic&vw 5/31/2023 16:58:48'!
initializeFor: aPortfolio 
	
	portfolio := aPortfolio.!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/31/2023 16:58:52'!
PASSED!

----SNAPSHOT----(31 May 2023 16:58:56) CuisUniversity-5799.image priorSource: 9989281!
!PortfolioReport methodsFor: 'accessing' stamp: 'ic&vw 5/31/2023 16:59:40'!
summary

	tree := OrderedCollection new.
	indents := ''.
	
	portfolio registerInTree: self.
	
	^tree! !

!methodRemoval: PortfolioSummary #summary stamp: 'ic&vw 5/31/2023 16:59:40'!
summary

	tree := OrderedCollection new.
	indents := ''.
	
	portfolio registerInTree: self.
	
	^tree!

!methodRemoval: PortfolioTreeFormat #summary stamp: 'ic&vw 5/31/2023 16:59:53'!
summary
	
	tree := OrderedCollection new.
	indents := ''.
	
	portfolio registerInTree: self.
	
	^tree
	!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/31/2023 16:59:57'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/31/2023 16:59:58'!
PASSED!
!PortfolioReport methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:00:35'!
registerMessage: aMessage

	tree add: indents,aMessage.
! !

!methodRemoval: PortfolioSummary #registerMessage: stamp: 'ic&vw 5/31/2023 17:00:35'!
registerMessage: aMessage

	tree add: indents,aMessage.
!

!methodRemoval: PortfolioTreeFormat #registerMessage: stamp: 'ic&vw 5/31/2023 17:00:39'!
registerMessage: aMessage

	tree add: indents,aMessage.
!

----SNAPSHOT----(31 May 2023 17:00:58) CuisUniversity-5799.image priorSource: 10006255!

----SNAPSHOT----(31 May 2023 17:01:36) CuisUniversity-5799.image priorSource: 10013088!
!PortfolioReport methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:04:00'!
registerPortfolio: aPortfolio

	self subclassResponsibility ! !
!PortfolioReport methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:04:08'!
registerReceptiveAccount: aReceptiveAccount

	self subclassResponsibility ! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:04:35' prior: 50642284 overrides: 50644565!
registerPortfolio: aPortfolio

	self registerMessage: aPortfolio name.
	self addIndentation.
	
	aPortfolio registerAccountsInTree: self.
	self registerMessage: (self balanceMessageFor: aPortfolio).
	
	self removeIndentation.
	
! !
!PortfolioTreeFormat methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:04:43' prior: 50643520 overrides: 50644565!
registerPortfolio: aPortfolio

	self registerMessage: aPortfolio name.
	self addIndentation.
	
	aPortfolio registerAccountsInTree: self.
	
	self removeIndentation.
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:07:39' prior: 50644576 overrides: 50644565!
registerPortfolio: aPortfolio

	self registerPortfolioAndAfterAddingAccountsDo: [self registerMessage: (self balanceMessageFor: aPortfolio)]
	
! !
!PortfolioReport methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:08:40'!
registerPortfolio: aPortfolio andAfterAddingAccountsDo: aBlock

	self registerMessage: aPortfolio name.
	self addIndentation.
	
	aPortfolio registerAccountsInTree: self.
	aBlock value.
	
	self removeIndentation.! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:08:48' prior: 50644596 overrides: 50644565!
registerPortfolio: aPortfolio

	self registerPortfolio: aPortfolio andAfterAddingAccountsDo: [self registerMessage: (self balanceMessageFor: aPortfolio)]
	
! !
!PortfolioTreeFormat methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:09:08' prior: 50644587 overrides: 50644565!
registerPortfolio: aPortfolio

		self registerPortfolio: aPortfolio andAfterAddingAccountsDo: []
! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/31/2023 17:09:14'!
PASSED!
!PortfolioTreeFormat methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:09:19' prior: 50644623 overrides: 50644565!
registerPortfolio: aPortfolio

	self registerPortfolio: aPortfolio andAfterAddingAccountsDo: []
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:09:41' prior: 50642490 overrides: 50644570!
registerReceptiveAccount: aReceptiveAccount

	| accountSummary |
	
	self registerMessage: aReceptiveAccount name.
	self addIndentation.
	
	accountSummary := (AccountSummary for: aReceptiveAccount) summary.
	
	tree addAllLast: (self addIndentationIn: accountSummary).
	
	self removeIndentation.
	
! !
!PortfolioReport methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:10:57'!
registerReceptiveAccount: aReceptiveAccount andAfterAddingNameDo: aBlock

	self registerMessage: aReceptiveAccount name.
	aBlock value.! !
!PortfolioTreeFormat methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:11:15' prior: 50642113 overrides: 50644570!
registerReceptiveAccount: aReceptiveAccount

	self registerReceptiveAccount: aReceptiveAccount andAfterAddingNameDo: [].
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:11:44' prior: 50644817 overrides: 50644570!
registerReceptiveAccount: aReceptiveAccount

	| accountSummary |
	self registerReceptiveAccount: aReceptiveAccount andAfterAddingNameDo: [
	
		self registerMessage: aReceptiveAccount name.
		self addIndentation.
		
		accountSummary := (AccountSummary for: aReceptiveAccount) summary.
		
		tree addAllLast: (self addIndentationIn: accountSummary).
		
		self removeIndentation.
	].

	
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:11:45' prior: 50644845 overrides: 50644570!
registerReceptiveAccount: aReceptiveAccount

	| accountSummary |
	self registerReceptiveAccount: aReceptiveAccount andAfterAddingNameDo: [
		self registerMessage: aReceptiveAccount name.
		self addIndentation.
		
		accountSummary := (AccountSummary for: aReceptiveAccount) summary.
		
		tree addAllLast: (self addIndentationIn: accountSummary).
		
		self removeIndentation.
	].

	
! !
!PortfolioSummary methodsFor: 'register' stamp: 'ic&vw 5/31/2023 17:12:04' prior: 50644861 overrides: 50644570!
registerReceptiveAccount: aReceptiveAccount

	| accountSummary |
	self registerReceptiveAccount: aReceptiveAccount andAfterAddingNameDo: [
		
		self addIndentation.		
		accountSummary := (AccountSummary for: aReceptiveAccount) summary.
		tree addAllLast: (self addIndentationIn: accountSummary).
		self removeIndentation.
		
	].

	
! !

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 5/31/2023 17:12:09'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 5/31/2023 17:12:10'!
PASSED!

----SNAPSHOT----(31 May 2023 17:13:10) CuisUniversity-5799.image priorSource: 10013177!

----STARTUP---- (1 June 2023 14:29:17) as C:\Users\Ivo\Desktop\uba\inge1\cuises\cuis 4 - portfolio 2 (imagen nueva)\CuisUniversity-5799.image!

!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 6/1/2023 15:13:06' prior: 50643825!
test02PrintPortfolioNameAndAccountWithOneIndentation

	| childrenPortfolio johnsAccount treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	treeFormat := PortfolioTreeFormat for: childrenPortfolio.
	
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' 
							     with: ('    Cuenta de Juan'	)
			   ) equals: treeFormat summary! !

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 6/1/2023 15:13:08'!
PASSED!
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 6/1/2023 15:13:24' prior: 50643916!
test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation

	| childrenPortfolio johnsAccount angiesAccount treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount  := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	treeFormat := PortfolioTreeFormat for: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos' 
	  					             with: ('    Cuenta de Juan'	) 
							     with: ('    Cuenta de Angeles'	)
			   ) equals: treeFormat summary ! !
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 6/1/2023 15:13:38' prior: 50643891!
test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation

	| childrenPortfolio johnsAccount familyPortfolio treeFormat |
	
	johnsAccount  := ReceptiveAccount named: 'Cuenta de Juan'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: childrenPortfolio.
	treeFormat := PortfolioTreeFormat for: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
							     with: ('    Portfolio de hijos'	) 
							     with: ('        Cuenta de Juan'	)
			   ) equals: treeFormat summary! !
!PortfolioTreeFormatTest methodsFor: 'tests' stamp: 'ic&vw 6/1/2023 15:13:59' prior: 50643844!
test05PrintPortfolioWithIndentationGoingUpAndDown

	| childrenPortfolio familyPortfolio treeFormat dadAccount momAccount sonAccount |
	
	sonAccount  := ReceptiveAccount named: 'Cuenta del hijo'.
	dadAccount  := ReceptiveAccount named: 'Cuenta del padre'.
	momAccount := ReceptiveAccount named: 'Cuenta de la madre'.
	
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: sonAccount.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: dadAccount with: childrenPortfolio with: momAccount.
	treeFormat := PortfolioTreeFormat for: familyPortfolio.

	
	self assert: (OrderedCollection with: 'Portfolio de la familia' 
							     with: ('    Cuenta del padre'	)
							     with: ('    Portfolio de hijos'	)
							     with: ('        Cuenta del hijo'	)
							     with: ('    Cuenta de la madre'	)
			   ) 
	
	equals: treeFormat summary! !

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 6/1/2023 15:14:01'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 6/1/2023 15:14:01'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 6/1/2023 15:14:01'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 6/1/2023 15:14:01'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 6/1/2023 15:14:01'!
PASSED!

!methodRemoval: PortfolioTreeFormatTest #format:withIndentations: stamp: 'ic&vw 6/1/2023 15:14:04'!
format: aStringToFormat withIndentations: anAmountOfIdentations

	anAmountOfIdentations = 0 ifTrue: [^aStringToFormat].
	^self format: ('    ', aStringToFormat) withIndentations: anAmountOfIdentations-1!

!methodRemoval: PortfolioTreeFormatTest #formatWithOneIndentation: stamp: 'ic&vw 6/1/2023 15:14:04'!
formatWithOneIndentation: aStringToFormat

	^self format: aStringToFormat withIndentations: 1 !

!methodRemoval: PortfolioTreeFormatTest #formatWithTwoIndentations: stamp: 'ic&vw 6/1/2023 15:14:04'!
formatWithTwoIndentations: aStringToFormat

	^self format: aStringToFormat withIndentations: 2 !

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 6/1/2023 15:14:05'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 6/1/2023 15:14:05'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 6/1/2023 15:14:05'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 6/1/2023 15:14:05'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 6/1/2023 15:14:05'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountSumaryTestHasOnlyBalance stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountWithDepositHasDepositAndBalance stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountWithWithdrawHasWithdrawAndBalance stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test04AccountWithTransferDespositHasTransferDespositAndBalance stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test05AccountWithTransferWithdrawHasTransferWithdrawAndBalance stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test06PortfolioWithAccountsShowTransferTwice stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioSummaryTest #test01EmptyPortfolioSummaryReturnsNameAndBalance stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioSummaryTest #test02SummaryOfPortfolioWithAccountsAndAllPossibleTransactions stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test01PrintPortfolioNameInEmptyPortfolio stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test02PrintPortfolioNameAndAccountWithOneIndentation stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test03PrintPortfolioNameAndMoreThanOneAccountWithOneIndentation stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test04PrintPortfolioWithAccountInPortfolioWithTheRightIndentation stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #PortfolioTreeFormatTest #test05PrintPortfolioWithIndentationGoingUpAndDown stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #TransferNetTest #test01TransferNetForNewAccountReturnsZero stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #TransferNetTest #test02TransferNetIsAffectedByAccountWithTransferDeposit stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIsNotAffectedByAccountWithDeposit stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #TransferNetTest #test04TransferNetIsNotAffectedByAccountWithWithdraw stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #TransferNetTest #test05TransferNetIsAffectedByAccountWithTransferWithdraw stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetAffectForPortfolioWithTwoTransferAccountsIsCancelled stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsBalanceOfBothAccounts stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #TransferTest #test02TransferIsRegisteredInBothAccounts stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #TransferTest #test03TransferLegsHaveTheSameTransfer stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #TransferTest #test04TransferWithdrawCanAccessTransferDeposit stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

!testRun: #TransferTest #test05TransferDepositCanAccessTransferWithdraw stamp: 'ic&vw 6/1/2023 15:14:15'!
PASSED!

----SNAPSHOT----(1 June 2023 15:14:40) CuisUniversity-5799.image priorSource: 10029416!